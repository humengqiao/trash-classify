{"id":"Pftj","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609565653941},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core/dist/ops/ops_for_converter","loc":{"line":18,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/normalization_executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/ops_for_converter.js"},{"name":"./utils","loc":{"line":19,"column":30},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/normalization_executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.CATEGORY=exports.executeOp=void 0;var e=r(require(\"@tensorflow/tfjs-core/dist/ops/ops_for_converter\")),a=require(\"./utils\");function t(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return t=function(){return e},e}function r(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var a=t();if(a&&a.has(e))return a.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(Object.prototype.hasOwnProperty.call(e,u)){var s=o?Object.getOwnPropertyDescriptor(e,u):null;s&&(s.get||s.set)?Object.defineProperty(r,u,s):r[u]=e[u]}return r.default=e,a&&a.set(e,r),r}const o=(t,r,o)=>{switch(t.op){case\"FusedBatchNorm\":case\"FusedBatchNormV2\":case\"FusedBatchNormV3\":return[e.batchNorm((0,a.getParamValue)(\"x\",t,r,o),(0,a.getParamValue)(\"mean\",t,r,o),(0,a.getParamValue)(\"variance\",t,r,o),(0,a.getParamValue)(\"offset\",t,r,o),(0,a.getParamValue)(\"scale\",t,r,o),(0,a.getParamValue)(\"epsilon\",t,r,o))];case\"LRN\":return[e.localResponseNormalization((0,a.getParamValue)(\"x\",t,r,o),(0,a.getParamValue)(\"radius\",t,r,o),(0,a.getParamValue)(\"bias\",t,r,o),(0,a.getParamValue)(\"alpha\",t,r,o),(0,a.getParamValue)(\"beta\",t,r,o))];case\"Softmax\":return[e.softmax((0,a.getParamValue)(\"x\",t,r,o))];case\"LogSoftmax\":return[e.logSoftmax((0,a.getParamValue)(\"x\",t,r,o))];case\"SparseToDense\":return[e.sparseToDense((0,a.getParamValue)(\"sparseIndices\",t,r,o),(0,a.getParamValue)(\"outputShape\",t,r,o),(0,a.getParamValue)(\"sparseValues\",t,r,o),(0,a.getParamValue)(\"defaultValue\",t,r,o))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};exports.executeOp=o;const u=\"normalization\";exports.CATEGORY=u;"},"sourceMaps":null,"error":null,"hash":"2ea3ecc38b2c2998f1fe42e98d82b7bd","cacheData":{"env":{}}}