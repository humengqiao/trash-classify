{"id":"McTv","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":27},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../operations/operation_mapper","loc":{"line":18,"column":32},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js"},{"name":"./graph_executor","loc":{"line":19,"column":30},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js"},{"name":"./resource_manager","loc":{"line":20,"column":32},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/executor/resource_manager.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.loadGraphModel=a,exports.GraphModel=exports.DEFAULT_MODEL_NAME=exports.TFHUB_SEARCH_PARAM=void 0;var e=require(\"@tensorflow/tfjs-core\"),t=require(\"../operations/operation_mapper\"),r=require(\"./graph_executor\"),s=require(\"./resource_manager\");const o=\"?tfjs-format=file\";exports.TFHUB_SEARCH_PARAM=o;const n=\"model.json\";exports.DEFAULT_MODEL_NAME=n;class i{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version=\"n/a\",null==t&&(this.loadOptions={}),this.resourceManager=new s.ResourceManager}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=e.io.browserHTTPRequest(t,this.loadOptions);else{const r=e.io.getLoadHandlers(t,this.loadOptions);if(0===r.length)r.push(e.io.browserHTTPRequest(t,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for `+`URL '${[t]}'`);this.handler=r[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error(\"Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.\");const e=await this.handler.load();return this.loadSync(e)}loadSync(s){this.artifacts=s;const o=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${o.versions.producer}.${o.versions.minConsumer}`;const i=e.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new r.GraphExecutor(t.OperationMapper.Instance.transformGraph(o,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(i),this.executor.resourceManager=this.resourceManager,null!=s.modelInitializer){const e=t.OperationMapper.Instance.transformGraph(s.modelInitializer);this.initializer=new r.GraphExecutor(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,r){if(\"string\"==typeof t){const r=e.io.getSaveHandlers(t);if(0===r.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for `+`URL '${t}'`);t=r[0]}if(null==t.save)throw new Error(\"GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.\");return t.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(t){if(!(t instanceof e.Tensor||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(\"Input tensor count mismatch,\"+`the graph model has ${this.inputNodes.length} placeholders, `+`while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,r,s)=>(e[r]=t[s],e),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function a(e,t={}){if(null==e)throw new Error(\"modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model\");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith(\"/\")||(e+=\"/\"),e=`${e}${n}${o}`);const r=new i(e,t);return await r.load(),r}exports.GraphModel=i;"},"sourceMaps":null,"error":null,"hash":"ac31b943595de24376cf66a304afbaae","cacheData":{"env":{}}}