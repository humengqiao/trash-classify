{"id":"zI4s","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu_depthwise.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/conv_backprop_gpu_depthwise.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.DepthwiseConv2DDerInputProgram=exports.DepthwiseConv2DDerFilterProgram=void 0;class n{constructor(n){this.variableNames=[\"x\",\"dy\"],this.outputShape=n.filterShape;const t=n.strideHeight,o=n.strideWidth,e=n.padInfo.top,d=n.padInfo.left,i=n.outChannels/n.inChannels;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int dm = coords.w;\\n        int d2 = d1 * ${i} + dm;\\n\\n        float dotProd = 0.0;\\n\\n        // TO DO: Vec4 over the batch size\\n        for (int b = 0; b < ${n.batchSize}; b++) {\\n          for (int yR = 0; yR < ${n.outHeight}; yR++) {\\n            int xR = wR + yR * ${t} - ${e};\\n\\n            if (xR < 0 || xR >= ${n.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < ${n.outWidth}; yC++) {\\n              int xC = wC + yC * ${o} - ${d};\\n\\n              if (xC < 0 || xC >= ${n.inWidth}) {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}exports.DepthwiseConv2DDerFilterProgram=n;class t{constructor(n){this.variableNames=[\"dy\",\"W\"],this.outputShape=n.inShape;const t=n.filterHeight,o=n.filterWidth,e=n.strideHeight,d=n.strideWidth,i=t-1-n.padInfo.top,r=o-1-n.padInfo.left,s=n.outChannels/n.inChannels;this.userCode=`\\n      const ivec2 pads = ivec2(${i}, ${r});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        float dotProd = 0.0;\\n\\n        for (int wR = 0; wR < ${t}; wR++) {\\n          float dyR = float(dyRCorner + wR) / ${e}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${n.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = ${t} - 1 - wR;\\n\\n          for (int wC = 0; wC < ${o}; wC++) {\\n            float dyC = float(dyCCorner + wC) / ${d}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = ${o} - 1 - wC;\\n\\n            // TO DO: Vec4 over the channelMul\\n            for (int dm = 0; dm < ${s}; dm++) {\\n              int d2 = d1 * ${s} + dm;\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}exports.DepthwiseConv2DDerInputProgram=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":0}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":13}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":20}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":35}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":43}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":56}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":57}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":64}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":68}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":76}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":107}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":115}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":152}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":154}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":160}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":162}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":1,"column":174}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":177}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":182}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":196}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":197}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":22,"column":24},"generated":{"line":1,"column":201}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":207}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":212}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":27,"column":23},"generated":{"line":1,"column":224}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":27,"column":32},"generated":{"line":1,"column":226}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":238}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":244}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":1,"column":246}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":29,"column":34},"generated":{"line":1,"column":248}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":261}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":1,"column":263}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":30,"column":33},"generated":{"line":1,"column":265}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":277}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":1,"column":279}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":1,"column":281}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":31,"column":36},"generated":{"line":1,"column":289}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":1,"column":293}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":32,"column":20},"generated":{"line":1,"column":295}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":32,"column":29},"generated":{"line":1,"column":297}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":32,"column":37},"generated":{"line":1,"column":305}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":1,"column":310}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":1,"column":312}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":33,"column":32},"generated":{"line":1,"column":314}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":33,"column":46},"generated":{"line":1,"column":326}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":33,"column":55},"generated":{"line":1,"column":328}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":1,"column":339}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":1,"column":344}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":42,"column":24},"generated":{"line":1,"column":556}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":47,"column":30},"generated":{"line":1,"column":674}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":47,"column":39},"generated":{"line":1,"column":676}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":48,"column":34},"generated":{"line":1,"column":730}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":48,"column":43},"generated":{"line":1,"column":732}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":49,"column":33},"generated":{"line":1,"column":786}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":49,"column":51},"generated":{"line":1,"column":793}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":51,"column":34},"generated":{"line":1,"column":834}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":51,"column":43},"generated":{"line":1,"column":836}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":55,"column":36},"generated":{"line":1,"column":928}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":55,"column":45},"generated":{"line":1,"column":930}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":56,"column":35},"generated":{"line":1,"column":985}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":56,"column":52},"generated":{"line":1,"column":992}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":58,"column":36},"generated":{"line":1,"column":1035}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":58,"column":45},"generated":{"line":1,"column":1037}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":1330}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":1338}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":1370}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":1,"column":1372}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":1,"column":1378}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":1,"column":1380}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":79,"column":14},"generated":{"line":1,"column":1392}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":1,"column":1395}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":1,"column":1400}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":75,"column":18},"generated":{"line":1,"column":1414}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":75,"column":19},"generated":{"line":1,"column":1415}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":75,"column":25},"generated":{"line":1,"column":1420}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":80,"column":9},"generated":{"line":1,"column":1425}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":80,"column":9},"generated":{"line":1,"column":1430}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":80,"column":23},"generated":{"line":1,"column":1442}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":80,"column":32},"generated":{"line":1,"column":1444}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":82,"column":10},"generated":{"line":1,"column":1452}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":82,"column":10},"generated":{"line":1,"column":1458}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":82,"column":25},"generated":{"line":1,"column":1460}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":82,"column":34},"generated":{"line":1,"column":1462}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":83,"column":10},"generated":{"line":1,"column":1475}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":83,"column":24},"generated":{"line":1,"column":1477}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":83,"column":33},"generated":{"line":1,"column":1479}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":1,"column":1491}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":84,"column":25},"generated":{"line":1,"column":1493}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":84,"column":34},"generated":{"line":1,"column":1495}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":85,"column":10},"generated":{"line":1,"column":1508}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":85,"column":24},"generated":{"line":1,"column":1510}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":85,"column":33},"generated":{"line":1,"column":1512}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":87,"column":10},"generated":{"line":1,"column":1524}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":87,"column":19},"generated":{"line":1,"column":1526}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":87,"column":34},"generated":{"line":1,"column":1528}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":87,"column":38},"generated":{"line":1,"column":1530}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":87,"column":47},"generated":{"line":1,"column":1532}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":87,"column":55},"generated":{"line":1,"column":1540}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":88,"column":10},"generated":{"line":1,"column":1544}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":88,"column":20},"generated":{"line":1,"column":1546}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":88,"column":34},"generated":{"line":1,"column":1548}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":88,"column":38},"generated":{"line":1,"column":1550}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":88,"column":47},"generated":{"line":1,"column":1552}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":88,"column":55},"generated":{"line":1,"column":1560}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":89,"column":10},"generated":{"line":1,"column":1565}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":89,"column":23},"generated":{"line":1,"column":1567}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":89,"column":32},"generated":{"line":1,"column":1569}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":89,"column":46},"generated":{"line":1,"column":1581}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":89,"column":55},"generated":{"line":1,"column":1583}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":1,"column":1594}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":1,"column":1599}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":92,"column":33},"generated":{"line":1,"column":1644}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":92,"column":44},"generated":{"line":1,"column":1650}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":104,"column":32},"generated":{"line":1,"column":1967}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":105,"column":48},"generated":{"line":1,"column":2028}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":107,"column":36},"generated":{"line":1,"column":2073}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":107,"column":45},"generated":{"line":1,"column":2075}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":112,"column":25},"generated":{"line":1,"column":2207}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":114,"column":34},"generated":{"line":1,"column":2257}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":115,"column":50},"generated":{"line":1,"column":2320}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":117,"column":38},"generated":{"line":1,"column":2367}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":117,"column":47},"generated":{"line":1,"column":2369}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":123,"column":27},"generated":{"line":1,"column":2525}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":126,"column":36},"generated":{"line":1,"column":2625}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":127,"column":30},"generated":{"line":1,"column":2668}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":2925}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":2933}},{"source":"../src/conv_backprop_gpu_depthwise.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":1,"column":2964}}],"sources":{"../src/conv_backprop_gpu_depthwise.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class DepthwiseConv2DDerFilterProgram implements GPGPUProgram {\n  variableNames = ['x', 'dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv2DInfo) {\n    this.outputShape = convInfo.filterShape;\n\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const channelMul = convInfo.outChannels / convInfo.inChannels;\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${channelMul} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n            int xR = wR + yR * ${strideHeight} - ${padTop};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n              int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class DepthwiseConv2DDerInputProgram implements GPGPUProgram {\n  variableNames = ['dy', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv2DInfo) {\n    this.outputShape = convInfo.inShape;\n\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n\n    const padTop = filterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n    const channelMul = convInfo.outChannels / convInfo.inChannels;\n\n    this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${filterHeight} - 1 - wR;\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${filterWidth} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${channelMul}; dm++) {\n              int d2 = d1 * ${channelMul} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"99298bf73d07666dc0bd4812fd25234b","cacheData":{"env":{}}}