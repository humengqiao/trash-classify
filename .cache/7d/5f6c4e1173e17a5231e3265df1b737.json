{"id":"I0Jg","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609564004117},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core/dist/ops/ops_for_converter","loc":{"line":18,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/convolution_executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/ops_for_converter.js"},{"name":"./utils","loc":{"line":19,"column":42},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/convolution_executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.CATEGORY=exports.executeOp=void 0;var e=r(require(\"@tensorflow/tfjs-core/dist/ops/ops_for_converter\")),a=require(\"./utils\");function t(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return t=function(){return e},e}function r(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var a=t();if(a&&a.has(e))return a.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var n=o?Object.getOwnPropertyDescriptor(e,s):null;n&&(n.get||n.set)?Object.defineProperty(r,s,n):r[s]=e[s]}return r.default=e,a&&a.set(e,r),r}function o(e,t,r){const[o,s]=(0,a.getParamValue)(\"fusedOps\",e,t,r),n=\"biasadd\"===o,i=\"prelu\"===s,u=\"fusedbatchnorm\"===o,l=(0,a.getParamValue)(\"numArgs\",e,t,r);if(n){if(i&&2!==l)throw new Error(\"FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.\");if(!i&&1!==l)throw new Error(\"FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.\")}if(u)throw new Error(\"FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.\");const d=(0,a.getParamValue)(\"strides\",e,t,r),g=(0,a.getPadding)(e,t,r),m=(0,a.getParamValue)(\"dataFormat\",e,t,r).toUpperCase(),P=(0,a.getParamValue)(\"dilations\",e,t,r),[p,c]=(0,a.getParamValue)(\"args\",e,t,r);return{stride:d,pad:g,dataFormat:m,dilations:P,biasArg:p,preluArg:c,activationFunc:s}}const s=(t,r,s)=>{switch(t.op){case\"Conv1D\":{const o=(0,a.getParamValue)(\"stride\",t,r,s),n=(0,a.getParamValue)(\"pad\",t,r,s),i=(0,a.getParamValue)(\"dataFormat\",t,r,s).toUpperCase(),u=(0,a.getParamValue)(\"dilation\",t,r,s);return[e.conv1d((0,a.getParamValue)(\"x\",t,r,s),(0,a.getParamValue)(\"filter\",t,r,s),o,n,i,u)]}case\"Conv2D\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getPadding)(t,r,s),i=(0,a.getParamValue)(\"dataFormat\",t,r,s).toUpperCase(),u=(0,a.getParamValue)(\"dilations\",t,r,s);return[e.conv2d((0,a.getParamValue)(\"x\",t,r,s),(0,a.getParamValue)(\"filter\",t,r,s),[o[1],o[2]],n,i,[u[1],u[2]])]}case\"_FusedConv2D\":{const{stride:n,pad:i,dataFormat:u,dilations:l,biasArg:d,preluArg:g,activationFunc:m}=o(t,r,s);return[e.fused.conv2d({x:(0,a.getParamValue)(\"x\",t,r,s),filter:(0,a.getParamValue)(\"filter\",t,r,s),strides:[n[1],n[2]],pad:i,dataFormat:u,dilations:[l[1],l[2]],bias:d,activation:m,preluActivationWeights:g})]}case\"FusedDepthwiseConv2dNative\":{const{stride:n,pad:i,dataFormat:u,dilations:l,biasArg:d,preluArg:g,activationFunc:m}=o(t,r,s);return[e.fused.depthwiseConv2d({x:(0,a.getParamValue)(\"x\",t,r,s),filter:(0,a.getParamValue)(\"filter\",t,r,s),strides:[n[1],n[2]],pad:i,dataFormat:u,dilations:[l[1],l[2]],bias:d,activation:m,preluActivationWeights:g})]}case\"Conv2DBackpropInput\":case\"Conv2dTranspose\":{const o=(0,a.getParamValue)(\"outputShape\",t,r,s),n=(0,a.getParamValue)(\"strides\",t,r,s),i=(0,a.getPadding)(t,r,s);return[e.conv2dTranspose((0,a.getParamValue)(\"x\",t,r,s),(0,a.getParamValue)(\"filter\",t,r,s),o,[n[1],n[2]],i)]}case\"DepthwiseConv2dNative\":case\"DepthwiseConv2d\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getPadding)(t,r,s),i=(0,a.getParamValue)(\"dilations\",t,r,s),u=(0,a.getParamValue)(\"dataFormat\",t,r,s).toUpperCase();return[e.depthwiseConv2d((0,a.getParamValue)(\"input\",t,r,s),(0,a.getParamValue)(\"filter\",t,r,s),[o[1],o[2]],n,u,[i[1],i[2]])]}case\"Conv3D\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getParamValue)(\"pad\",t,r,s),i=(0,a.getParamValue)(\"dataFormat\",t,r,s).toUpperCase(),u=(0,a.getParamValue)(\"dilations\",t,r,s);return[e.conv3d((0,a.getParamValue)(\"x\",t,r,s),(0,a.getParamValue)(\"filter\",t,r,s),[o[1],o[2],o[3]],n,i,[u[1],u[2],u[3]])]}case\"AvgPool\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getParamValue)(\"pad\",t,r,s),i=(0,a.getParamValue)(\"kernelSize\",t,r,s);return[e.avgPool((0,a.getParamValue)(\"x\",t,r,s),[i[1],i[2]],[o[1],o[2]],n)]}case\"MaxPool\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getParamValue)(\"pad\",t,r,s),i=(0,a.getParamValue)(\"kernelSize\",t,r,s);return[e.maxPool((0,a.getParamValue)(\"x\",t,r,s),[i[1],i[2]],[o[1],o[2]],n)]}case\"MaxPoolWithArgmax\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getParamValue)(\"pad\",t,r,s),i=(0,a.getParamValue)(\"kernelSize\",t,r,s),u=(0,a.getParamValue)(\"includeBatchInIndex\",t,r,s),{result:l,indexes:d}=e.maxPoolWithArgmax((0,a.getParamValue)(\"x\",t,r,s),[i[1],i[2]],[o[1],o[2]],n,u);return[l,d]}case\"AvgPool3D\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getParamValue)(\"pad\",t,r,s),i=(0,a.getParamValue)(\"kernelSize\",t,r,s);return[e.avgPool3d((0,a.getParamValue)(\"x\",t,r,s),[i[1],i[2],i[3]],[o[1],o[2],o[3]],n)]}case\"MaxPool3D\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getParamValue)(\"pad\",t,r,s),i=(0,a.getParamValue)(\"kernelSize\",t,r,s);return[e.maxPool3d((0,a.getParamValue)(\"x\",t,r,s),[i[1],i[2],i[3]],[o[1],o[2],o[3]],n)]}case\"Dilation2D\":{const o=(0,a.getParamValue)(\"strides\",t,r,s),n=(0,a.getParamValue)(\"pad\",t,r,s),i=(0,a.getParamValue)(\"dilations\",t,r,s),u=o[1],l=o[2],d=i[1],g=i[2];return[e.dilation2d((0,a.getParamValue)(\"x\",t,r,s),(0,a.getParamValue)(\"filter\",t,r,s),[u,l],n,[d,g],\"NHWC\")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};exports.executeOp=s;const n=\"convolution\";exports.CATEGORY=n;"},"sourceMaps":null,"error":null,"hash":"dbbd341aac7b4459a405e23f9781b357","cacheData":{"env":{}}}