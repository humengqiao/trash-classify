{"id":"oeUN","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../tensor_util_env","loc":{"line":17,"column":32},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"../util","loc":{"line":18,"column":66},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/util.js"},{"name":"./tensor","loc":{"line":19,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.inTopKAsync=void 0;var e=require(\"../tensor_util_env\"),t=require(\"../util\"),s=require(\"./tensor\");async function r(r,n,o=1){const a=(0,e.convertToTensor)(r,\"predictions\",\"inTopK\"),i=(0,e.convertToTensor)(n,\"targets\",\"inTopK\");(0,t.assert)(a.rank>1,()=>\"inTopK() expects the predictions to be of rank 2 or higher, \"+`but got ${a.rank}`),(0,t.assert)(a.rank-1===i.rank,()=>\"predictions rank should be 1 larger than targets rank, but got predictions rank \"+`${a.rank} and targets rank ${i.rank}`),(0,t.assertShapesMatch)(a.shape.slice(0,a.shape.length-1),i.shape,\"predictions's shape should be align with the targets' shape, except the last dimension.\");const p=a.shape[a.shape.length-1];(0,t.assert)(o>0&&o<=p,()=>\"'k' passed to inTopK() must be > 0 && <= the predictions last \"+`dimension (${p}), but got ${o}`);const h=await a.data(),c=await i.data(),[l,d]=[h.length/p,p],u=(0,t.getTypedArrayFromDType)(\"bool\",l);for(let e=0;e<l;e++){const t=e*d,s=h.subarray(t,t+d),r=[];for(let e=0;e<s.length;e++)r.push({value:s[e],index:e});r.sort((e,t)=>t.value-e.value),u[e]=0;for(let n=0;n<o;n++)if(r[n].index===c[e]){u[e]=1;break}}return r!==a&&a.dispose(),n!==i&&i.dispose(),(0,s.tensor)(u,i.shape,\"bool\")}const n=r;exports.inTopKAsync=n;"},"sourceMaps":null,"error":null,"hash":"40818aba1c0b8770a0731af027a1f81f","cacheData":{"env":{}}}