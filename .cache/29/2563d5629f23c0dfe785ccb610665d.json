{"id":"eeKH","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609564004117},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":26},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"./shader_compiler","loc":{"line":18,"column":33},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.compileProgram=n,exports.runProgram=i,exports.makeShaderKey=s;var e=require(\"@tensorflow/tfjs-core\"),t=r(require(\"./shader_compiler\"));function a(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function r(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=n?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(r,o,i):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}function n(a,r,n,o){const i=r.userCode,s=n.map((e,t)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:r.variableNames[t],shapeInfo:a}}),f=s.map(e=>e.shapeInfo),l={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},u=t.makeShader(s,l,i,r.packedInputs),c=a.createProgram(u);let p=null;const m=a.getUniformLocation(c,\"NAN\",!1);1===(0,e.env)().getNumber(\"WEBGL_VERSION\")&&(p=a.getUniformLocation(c,\"INFINITY\",!1));const h={};for(let e=0;e<r.variableNames.length;e++){const t=r.variableNames[e],n=!1;h[t]=a.getUniformLocation(c,t,n),h[`offset${t}`]=a.getUniformLocation(c,`offset${t}`,n)}return{program:r,source:u,webGLProgram:c,uniformLocations:h,inShapeInfos:f,outShapeInfo:l,infLoc:p,nanLoc:m}}function o(t,a){if(t.length!==a.length)throw Error(`Binary was compiled with ${t.length} inputs, but `+`was executed with ${a.length} inputs`);t.forEach((t,r)=>{const n=t.logicalShape,o=a[r],i=o.shape;if(!e.util.arraysEqual(n,i))throw Error(\"Binary was compiled with different shapes than \"+`the current args. Shapes ${n} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const s=t.texShape,f=o.isUniform?null:o.texData.texShape;if(!e.util.arraysEqual(s,f))throw Error(\"Binary was compiled with different texture shapes than the\"+` current args. Shape ${s} and ${f} must match`)})}function i(t,a,r,n,i){o(a.inShapeInfos,r),o([a.outShapeInfo],[n]);const s=n.texData.texture,f=n.texData.texShape;n.texData.isPacked?t.setOutputPackedMatrixTexture(s,f[0],f[1]):t.setOutputMatrixTexture(s,f[0],f[1]),t.setProgram(a.webGLProgram),1===(0,e.env)().getNumber(\"WEBGL_VERSION\")&&null!==a.infLoc&&t.gl.uniform1f(a.infLoc,1/0),null!==a.nanLoc&&t.gl.uniform1f(a.nanLoc,NaN),r.forEach((r,n)=>{const o=a.program.variableNames[n],i=a.uniformLocations[o],s=a.uniformLocations[`offset${o}`];if(null!=i)if(r.isUniform)if(e.util.sizeFromShape(r.shape)<2)t.gl.uniform1f(i,r.uniformValues[0]);else{let e=r.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=r.texData.slice&&null!=s&&t.gl.uniform1i(s,r.texData.slice.flatOffset),t.setInputMatrixTexture(r.texData.texture,i,n)}),null!=i&&i(t,a.webGLProgram),t.executeProgram()}function s(e,t,a){let r=\"\";t.concat(a).forEach(e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,a=e.isUniform?\"uniform\":e.texData.texShape;r+=`${e.shape}_${a}_${t}`});const n=e.userCode;let o=e.constructor.name;return o+=\"_\"+r+\"_\"+n}"},"sourceMaps":null,"error":null,"hash":"d1a9cb6a3af5ded2b6dc38ee6701d706","cacheData":{"env":{}}}