{"id":"J5U2","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/conv_backprop_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Conv3DDerInputProgram=exports.Conv3DDerFilterProgram=exports.Conv2DDerInputProgram=exports.Conv2DDerFilterProgram=void 0;class n{constructor(n){this.variableNames=[\"x\",\"dy\"],this.outputShape=n.filterShape;const t=n.strideHeight,o=n.strideWidth,e=n.padInfo.top,d=n.padInfo.left,i=\"channelsLast\"===n.dataFormat;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < ${n.batchSize}; b++) {\\n          for (int yR = 0; yR < ${n.outHeight}; yR++) {\\n            int xR = wR + yR * ${t} - ${e};\\n\\n            if (xR < 0 || xR >= ${n.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < ${n.outWidth}; yC++) {\\n              int xC = wC + yC * ${o} - ${d};\\n\\n              if (xC < 0 || xC >= ${n.inWidth}) {\\n                continue;\\n              }\\n\\n              if (${i}) {\\n                float dyValue = getDy(b, yR, yC, d2);\\n                float xValue = getX(b, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              } else {\\n                float dyValue = getDy(b, d2, yR, yC);\\n                float xValue = getX(b, d1, xR, xC);\\n                dotProd += (xValue * dyValue);\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}exports.Conv2DDerFilterProgram=n;class t{constructor(n){this.variableNames=[\"dy\",\"W\"],this.outputShape=n.inShape;const t=n.filterHeight,o=n.filterWidth,e=n.strideHeight,d=n.strideWidth,i=\"channelsLast\"===n.dataFormat,r=t-1-n.padInfo.top,a=o-1-n.padInfo.left,s=i?1:2,y=i?2:3,C=i?3:1;this.userCode=`\\n      const ivec2 pads = ivec2(${r}, ${a});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[${C}];\\n\\n        ivec2 dyCorner = ivec2(coords[${s}], coords[${y}]) - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${t}; wR++) {\\n          float dyR = float(dyRCorner + wR) / ${e}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${n.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = ${t} - 1 - wR;\\n\\n          for (int wC = 0; wC < ${o}; wC++) {\\n            float dyC = float(dyCCorner + wC) / ${d}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = ${o} - 1 - wC;\\n\\n            for (int d2 = 0; d2 < ${n.outChannels}; d2++) {\\n\\n              if (${i}) {\\n                float xValue = getDy(batch, idyR, idyC, d2);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              } else {\\n                float xValue = getDy(batch, d2, idyR, idyC);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}exports.Conv2DDerInputProgram=t;class o{constructor(n){this.variableNames=[\"x\",\"dy\"],this.outputShape=n.filterShape;const t=n.strideDepth,o=n.strideHeight,e=n.strideWidth,d=n.padInfo.front,i=n.padInfo.top,r=n.padInfo.left;this.userCode=`\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int wF = coords.x;\\n        int wR = coords.y;\\n        int wC = coords.z;\\n        int d1 = coords.w;\\n        int d2 = coords.u;\\n\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < ${n.batchSize}; b++) {\\n          for (int yF = 0; yF < ${n.outDepth}; yF++) {\\n            int xF = wF + yF * ${t} - ${d};\\n\\n            if (xF < 0 || xF >= ${n.inDepth}) {\\n              continue;\\n            }\\n\\n            for (int yR = 0; yR < ${n.outHeight}; yR++) {\\n              int xR = wR + yR * ${o} - ${i};\\n\\n              if (xR < 0 || xR >= ${n.inHeight}) {\\n                continue;\\n              }\\n\\n              for (int yC = 0; yC < ${n.outWidth}; yC++) {\\n                int xC = wC + yC * ${e} - ${r};\\n\\n                if (xC < 0 || xC >= ${n.inWidth}) {\\n                  continue;\\n                }\\n\\n                float dyValue = getDy(b, yF, yR, yC, d2);\\n                float xValue = getX(b, xF, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}exports.Conv3DDerFilterProgram=o;class e{constructor(n){this.variableNames=[\"dy\",\"W\"],this.outputShape=n.inShape;const t=n.filterDepth,o=n.filterHeight,e=n.filterWidth,d=n.strideDepth,i=n.strideHeight,r=n.strideWidth,a=t-1-n.padInfo.front,s=o-1-n.padInfo.top,y=e-1-n.padInfo.left;this.userCode=`\\n      const ivec3 pads = ivec3(${a}, ${s}, ${y});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.u;\\n\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyFCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < ${t}; wF++) {\\n          float dyF = float(dyFCorner + wF) / ${d}.0;\\n\\n          if (dyF < 0.0 || dyF >= ${n.outDepth}.0 || fract(dyF) > 0.0) {\\n            continue;\\n          }\\n          int idyF = int(dyF);\\n\\n          int wFPerm = ${t} - 1 - wF;\\n\\n          for (int wR = 0; wR < ${o}; wR++) {\\n            float dyR = float(dyRCorner + wR) / ${i}.0;\\n\\n            if (dyR < 0.0 || dyR >= ${n.outHeight}.0 ||\\n              fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            int wRPerm = ${o} - 1 - wR;\\n\\n            for (int wC = 0; wC < ${e}; wC++) {\\n              float dyC = float(dyCCorner + wC) / ${r}.0;\\n\\n              if (dyC < 0.0 || dyC >= ${n.outWidth}.0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              int wCPerm = ${e} - 1 - wC;\\n\\n              for (int d2 = 0; d2 < ${n.outChannels}; d2++) {\\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}exports.Conv3DDerInputProgram=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":0}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":13}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":20}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":35}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":43}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":56}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":57}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":64}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":68}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":76}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":98}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":106}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":129}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":137}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":159}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":167}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":195}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":197}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":203}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":205}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":1,"column":217}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":220}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":225}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":239}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":240}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":22,"column":24},"generated":{"line":1,"column":244}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":250}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":255}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":27,"column":23},"generated":{"line":1,"column":267}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":27,"column":32},"generated":{"line":1,"column":269}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":281}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":287}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":1,"column":289}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":29,"column":34},"generated":{"line":1,"column":291}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":304}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":1,"column":306}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":30,"column":33},"generated":{"line":1,"column":308}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":320}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":1,"column":322}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":1,"column":324}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":31,"column":36},"generated":{"line":1,"column":332}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":1,"column":336}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":32,"column":20},"generated":{"line":1,"column":338}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":32,"column":29},"generated":{"line":1,"column":340}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":32,"column":37},"generated":{"line":1,"column":348}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":1,"column":353}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":33,"column":51},"generated":{"line":1,"column":355}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":33,"column":27},"generated":{"line":1,"column":372}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":33,"column":36},"generated":{"line":1,"column":374}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":1,"column":385}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":1,"column":390}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":47,"column":30},"generated":{"line":1,"column":790}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":47,"column":39},"generated":{"line":1,"column":792}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":48,"column":34},"generated":{"line":1,"column":846}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":48,"column":43},"generated":{"line":1,"column":848}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":49,"column":33},"generated":{"line":1,"column":902}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":49,"column":51},"generated":{"line":1,"column":909}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":51,"column":34},"generated":{"line":1,"column":950}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":51,"column":43},"generated":{"line":1,"column":952}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":55,"column":36},"generated":{"line":1,"column":1044}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":55,"column":45},"generated":{"line":1,"column":1046}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":56,"column":35},"generated":{"line":1,"column":1101}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":56,"column":52},"generated":{"line":1,"column":1108}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":58,"column":36},"generated":{"line":1,"column":1151}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":58,"column":45},"generated":{"line":1,"column":1153}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":1,"column":1232}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":1678}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":1686}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":1709}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":1,"column":1711}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":81,"column":13},"generated":{"line":1,"column":1717}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":1719}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":86,"column":14},"generated":{"line":1,"column":1731}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":1,"column":1734}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":1,"column":1739}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":82,"column":18},"generated":{"line":1,"column":1753}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":82,"column":19},"generated":{"line":1,"column":1754}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":82,"column":25},"generated":{"line":1,"column":1759}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":87,"column":9},"generated":{"line":1,"column":1764}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":87,"column":9},"generated":{"line":1,"column":1769}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":87,"column":23},"generated":{"line":1,"column":1781}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":87,"column":32},"generated":{"line":1,"column":1783}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":89,"column":10},"generated":{"line":1,"column":1791}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":89,"column":10},"generated":{"line":1,"column":1797}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":89,"column":25},"generated":{"line":1,"column":1799}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":89,"column":34},"generated":{"line":1,"column":1801}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":90,"column":10},"generated":{"line":1,"column":1814}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":90,"column":24},"generated":{"line":1,"column":1816}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":90,"column":33},"generated":{"line":1,"column":1818}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":91,"column":10},"generated":{"line":1,"column":1830}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":91,"column":25},"generated":{"line":1,"column":1832}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":91,"column":34},"generated":{"line":1,"column":1834}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":92,"column":10},"generated":{"line":1,"column":1847}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":92,"column":24},"generated":{"line":1,"column":1849}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":92,"column":33},"generated":{"line":1,"column":1851}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":93,"column":10},"generated":{"line":1,"column":1863}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":93,"column":51},"generated":{"line":1,"column":1865}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":93,"column":27},"generated":{"line":1,"column":1882}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":93,"column":36},"generated":{"line":1,"column":1884}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":95,"column":10},"generated":{"line":1,"column":1895}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":95,"column":19},"generated":{"line":1,"column":1897}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":95,"column":34},"generated":{"line":1,"column":1899}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":95,"column":38},"generated":{"line":1,"column":1901}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":95,"column":47},"generated":{"line":1,"column":1903}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":95,"column":55},"generated":{"line":1,"column":1911}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":96,"column":10},"generated":{"line":1,"column":1915}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":96,"column":20},"generated":{"line":1,"column":1917}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":96,"column":34},"generated":{"line":1,"column":1919}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":96,"column":38},"generated":{"line":1,"column":1921}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":96,"column":47},"generated":{"line":1,"column":1923}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":96,"column":55},"generated":{"line":1,"column":1931}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":98,"column":10},"generated":{"line":1,"column":1936}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":98,"column":19},"generated":{"line":1,"column":1938}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":98,"column":36},"generated":{"line":1,"column":1940}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":98,"column":40},"generated":{"line":1,"column":1942}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":99,"column":10},"generated":{"line":1,"column":1944}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":99,"column":19},"generated":{"line":1,"column":1946}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":99,"column":36},"generated":{"line":1,"column":1948}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":99,"column":40},"generated":{"line":1,"column":1950}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":100,"column":10},"generated":{"line":1,"column":1952}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":100,"column":23},"generated":{"line":1,"column":1954}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":100,"column":40},"generated":{"line":1,"column":1956}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":100,"column":44},"generated":{"line":1,"column":1958}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":1,"column":1960}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":1,"column":1965}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":103,"column":33},"generated":{"line":1,"column":2010}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":103,"column":44},"generated":{"line":1,"column":2016}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":108,"column":26},"generated":{"line":1,"column":2146}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":110,"column":40},"generated":{"line":1,"column":2194}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":110,"column":59},"generated":{"line":1,"column":2208}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":117,"column":32},"generated":{"line":1,"column":2512}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":118,"column":48},"generated":{"line":1,"column":2573}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":120,"column":36},"generated":{"line":1,"column":2618}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":120,"column":45},"generated":{"line":1,"column":2620}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":125,"column":25},"generated":{"line":1,"column":2752}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":127,"column":34},"generated":{"line":1,"column":2802}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":128,"column":50},"generated":{"line":1,"column":2865}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":130,"column":38},"generated":{"line":1,"column":2912}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":130,"column":47},"generated":{"line":1,"column":2914}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":136,"column":27},"generated":{"line":1,"column":3070}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":138,"column":36},"generated":{"line":1,"column":3122}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":138,"column":45},"generated":{"line":1,"column":3124}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":140,"column":20},"generated":{"line":1,"column":3169}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":3641}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":3649}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":3671}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":159,"column":6},"generated":{"line":1,"column":3673}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":159,"column":13},"generated":{"line":1,"column":3679}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":164,"column":2},"generated":{"line":1,"column":3681}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":164,"column":14},"generated":{"line":1,"column":3693}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":160,"column":2},"generated":{"line":1,"column":3696}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":160,"column":2},"generated":{"line":1,"column":3701}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":160,"column":18},"generated":{"line":1,"column":3715}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":160,"column":19},"generated":{"line":1,"column":3716}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":160,"column":24},"generated":{"line":1,"column":3720}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":165,"column":9},"generated":{"line":1,"column":3726}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":165,"column":9},"generated":{"line":1,"column":3731}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":165,"column":23},"generated":{"line":1,"column":3743}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":165,"column":32},"generated":{"line":1,"column":3745}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":167,"column":10},"generated":{"line":1,"column":3757}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":167,"column":10},"generated":{"line":1,"column":3763}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":167,"column":24},"generated":{"line":1,"column":3765}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":167,"column":33},"generated":{"line":1,"column":3767}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":168,"column":10},"generated":{"line":1,"column":3779}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":168,"column":25},"generated":{"line":1,"column":3781}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":168,"column":34},"generated":{"line":1,"column":3783}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":169,"column":10},"generated":{"line":1,"column":3796}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":169,"column":24},"generated":{"line":1,"column":3798}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":169,"column":33},"generated":{"line":1,"column":3800}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":170,"column":10},"generated":{"line":1,"column":3812}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":170,"column":21},"generated":{"line":1,"column":3814}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":170,"column":30},"generated":{"line":1,"column":3816}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":170,"column":38},"generated":{"line":1,"column":3824}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":171,"column":10},"generated":{"line":1,"column":3830}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":171,"column":19},"generated":{"line":1,"column":3832}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":171,"column":28},"generated":{"line":1,"column":3834}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":171,"column":36},"generated":{"line":1,"column":3842}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":172,"column":10},"generated":{"line":1,"column":3846}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":172,"column":20},"generated":{"line":1,"column":3848}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":172,"column":29},"generated":{"line":1,"column":3850}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":172,"column":37},"generated":{"line":1,"column":3858}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":174,"column":9},"generated":{"line":1,"column":3863}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":174,"column":9},"generated":{"line":1,"column":3868}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":185,"column":30},"generated":{"line":1,"column":4148}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":185,"column":39},"generated":{"line":1,"column":4150}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":186,"column":34},"generated":{"line":1,"column":4204}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":186,"column":43},"generated":{"line":1,"column":4206}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":187,"column":33},"generated":{"line":1,"column":4259}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":187,"column":50},"generated":{"line":1,"column":4266}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":189,"column":34},"generated":{"line":1,"column":4307}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":189,"column":43},"generated":{"line":1,"column":4309}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":193,"column":36},"generated":{"line":1,"column":4400}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":193,"column":45},"generated":{"line":1,"column":4402}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":194,"column":35},"generated":{"line":1,"column":4458}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":1,"column":4465}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":196,"column":36},"generated":{"line":1,"column":4508}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":196,"column":45},"generated":{"line":1,"column":4510}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":200,"column":38},"generated":{"line":1,"column":4608}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":200,"column":47},"generated":{"line":1,"column":4610}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":201,"column":37},"generated":{"line":1,"column":4667}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":201,"column":54},"generated":{"line":1,"column":4674}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":203,"column":38},"generated":{"line":1,"column":4719}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":203,"column":47},"generated":{"line":1,"column":4721}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":5049}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":5057}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":5080}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":6},"generated":{"line":1,"column":5082}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":13},"generated":{"line":1,"column":5088}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":225,"column":2},"generated":{"line":1,"column":5090}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":225,"column":14},"generated":{"line":1,"column":5102}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":221,"column":2},"generated":{"line":1,"column":5105}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":221,"column":2},"generated":{"line":1,"column":5110}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":221,"column":18},"generated":{"line":1,"column":5124}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":221,"column":19},"generated":{"line":1,"column":5125}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":221,"column":25},"generated":{"line":1,"column":5130}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":226,"column":9},"generated":{"line":1,"column":5135}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":226,"column":9},"generated":{"line":1,"column":5140}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":226,"column":23},"generated":{"line":1,"column":5152}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":226,"column":32},"generated":{"line":1,"column":5154}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":228,"column":10},"generated":{"line":1,"column":5162}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":228,"column":10},"generated":{"line":1,"column":5168}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":228,"column":24},"generated":{"line":1,"column":5170}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":228,"column":33},"generated":{"line":1,"column":5172}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":229,"column":10},"generated":{"line":1,"column":5184}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":229,"column":25},"generated":{"line":1,"column":5186}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":229,"column":34},"generated":{"line":1,"column":5188}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":230,"column":10},"generated":{"line":1,"column":5201}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":230,"column":24},"generated":{"line":1,"column":5203}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":230,"column":33},"generated":{"line":1,"column":5205}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":231,"column":10},"generated":{"line":1,"column":5217}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":231,"column":24},"generated":{"line":1,"column":5219}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":231,"column":33},"generated":{"line":1,"column":5221}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":232,"column":10},"generated":{"line":1,"column":5233}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":232,"column":25},"generated":{"line":1,"column":5235}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":232,"column":34},"generated":{"line":1,"column":5237}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":233,"column":10},"generated":{"line":1,"column":5250}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":233,"column":24},"generated":{"line":1,"column":5252}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":233,"column":33},"generated":{"line":1,"column":5254}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":235,"column":10},"generated":{"line":1,"column":5266}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":235,"column":21},"generated":{"line":1,"column":5268}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":235,"column":35},"generated":{"line":1,"column":5270}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":235,"column":39},"generated":{"line":1,"column":5272}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":235,"column":48},"generated":{"line":1,"column":5274}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":235,"column":56},"generated":{"line":1,"column":5282}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":236,"column":10},"generated":{"line":1,"column":5288}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":236,"column":19},"generated":{"line":1,"column":5290}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":236,"column":34},"generated":{"line":1,"column":5292}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":236,"column":38},"generated":{"line":1,"column":5294}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":236,"column":47},"generated":{"line":1,"column":5296}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":236,"column":55},"generated":{"line":1,"column":5304}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":237,"column":10},"generated":{"line":1,"column":5308}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":237,"column":20},"generated":{"line":1,"column":5310}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":237,"column":34},"generated":{"line":1,"column":5312}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":237,"column":38},"generated":{"line":1,"column":5314}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":237,"column":47},"generated":{"line":1,"column":5316}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":237,"column":55},"generated":{"line":1,"column":5324}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":239,"column":9},"generated":{"line":1,"column":5329}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":239,"column":9},"generated":{"line":1,"column":5334}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":240,"column":33},"generated":{"line":1,"column":5379}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":240,"column":46},"generated":{"line":1,"column":5385}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":240,"column":57},"generated":{"line":1,"column":5391}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":254,"column":32},"generated":{"line":1,"column":5771}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":255,"column":48},"generated":{"line":1,"column":5832}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":257,"column":36},"generated":{"line":1,"column":5877}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":257,"column":45},"generated":{"line":1,"column":5879}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":262,"column":25},"generated":{"line":1,"column":6010}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":264,"column":34},"generated":{"line":1,"column":6060}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":265,"column":50},"generated":{"line":1,"column":6123}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":267,"column":38},"generated":{"line":1,"column":6170}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":267,"column":47},"generated":{"line":1,"column":6172}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":273,"column":27},"generated":{"line":1,"column":6327}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":275,"column":36},"generated":{"line":1,"column":6379}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":276,"column":52},"generated":{"line":1,"column":6444}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":278,"column":40},"generated":{"line":1,"column":6493}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":278,"column":49},"generated":{"line":1,"column":6495}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":284,"column":29},"generated":{"line":1,"column":6661}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":286,"column":38},"generated":{"line":1,"column":6715}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":286,"column":47},"generated":{"line":1,"column":6717}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":7024}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":7032}},{"source":"../src/conv_backprop_gpu.ts","name":null,"original":{"line":220,"column":34},"generated":{"line":1,"column":7054}}],"sources":{"../src/conv_backprop_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Conv2DDerFilterProgram implements GPGPUProgram {\n  variableNames = ['x', 'dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv2DInfo) {\n    this.outputShape = convInfo.filterShape;\n\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n            int xR = wR + yR * ${strideHeight} - ${padTop};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n              int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              if (${isChannelsLast}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class Conv2DDerInputProgram implements GPGPUProgram {\n  variableNames = ['dy', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv2DInfo) {\n    this.outputShape = convInfo.inShape;\n\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n\n    const padTop = filterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n\n    const rowDim = isChannelsLast ? 1 : 2;\n    const colDim = isChannelsLast ? 2 : 3;\n    const channelDim = isChannelsLast ? 3 : 1;\n\n    this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${channelDim}];\n\n        ivec2 dyCorner = ivec2(coords[${rowDim}], coords[${colDim}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${filterHeight} - 1 - wR;\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${filterWidth} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${convInfo.outChannels}; d2++) {\n\n              if (${isChannelsLast}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class Conv3DDerFilterProgram implements GPGPUProgram {\n  variableNames = ['x', 'dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv3DInfo) {\n    this.outputShape = convInfo.filterShape;\n\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const padFront = convInfo.padInfo.front;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n\n    this.userCode = `\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yF = 0; yF < ${convInfo.outDepth}; yF++) {\n            int xF = wF + yF * ${strideDepth} - ${padFront};\n\n            if (xF < 0 || xF >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n              int xR = wR + yR * ${strideHeight} - ${padTop};\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n                int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class Conv3DDerInputProgram implements GPGPUProgram {\n  variableNames = ['dy', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: backend_util.Conv3DInfo) {\n    this.outputShape = convInfo.inShape;\n\n    const filterDepth = convInfo.filterDepth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n\n    const padFront = filterDepth - 1 - convInfo.padInfo.front;\n    const padTop = filterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n\n    this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${filterDepth}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${convInfo.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${filterDepth} - 1 - wF;\n\n          for (int wR = 0; wR < ${filterHeight}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${filterHeight} - 1 - wR;\n\n            for (int wC = 0; wC < ${filterWidth}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${filterWidth} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${convInfo.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"d32a60e659c478309f082960d9f6cddf","cacheData":{"env":{}}}