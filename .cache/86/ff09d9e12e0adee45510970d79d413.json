{"id":"ZMTc","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/mean_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/mean_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":21},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/mean_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.MeanProgram=void 0;var n=require(\"@tensorflow/tfjs-core\");class e{constructor(e,t){this.variableNames=[\"x\"];const{windowSize:i,batchSize:a,inSize:s,outSize:o}=e;this.outputShape=[a,o];const u=4*Math.floor(i/4),c=i%4;let l=\"sumValue += dot(values, ones);\";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${n.util.isInt(e)?e.toPrecision(2):e}, ones);`}let d=\"\";s%i>0&&(d=`\\n        if (inIdx < 0 || inIdx >= ${s}) {\\n          return 0.0;\\n        }\\n      `),this.userCode=`\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        ${d}\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${i};\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < ${u}; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          ${l}\\n        }\\n\\n        int inIdx = inOffset + ${u};\\n        if (${1===c}) {\\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\\n\\n          ${l}\\n        } else if (${2===c}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1), 0.0, 0.0);\\n\\n          ${l}\\n        } else if (${3===c}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2), 0.0);\\n\\n          ${l}\\n        }\\n        setOutput(sumValue);\\n      }\\n    `}}exports.MeanProgram=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":0}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":13}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":20}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":35}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":43}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":56}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":57}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":64}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":68}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":76}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":93}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":95}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":99}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":101}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":109}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":134}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":140}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":142}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":1,"column":154}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":26,"column":51},"generated":{"line":1,"column":156}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":159}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":164}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":178}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":179}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":1,"column":184}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":1,"column":190}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":11},"generated":{"line":1,"column":201}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":1,"column":203}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":23},"generated":{"line":1,"column":213}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":1,"column":215}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":34},"generated":{"line":1,"column":222}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":1,"column":224}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":42},"generated":{"line":1,"column":232}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":27,"column":53},"generated":{"line":1,"column":235}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":1,"column":237}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":1,"column":242}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":1,"column":254}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":28,"column":24},"generated":{"line":1,"column":255}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":28,"column":35},"generated":{"line":1,"column":257}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":260}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":266}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":30,"column":63},"generated":{"line":1,"column":268}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":30,"column":34},"generated":{"line":1,"column":270}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":30,"column":39},"generated":{"line":1,"column":275}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":30,"column":45},"generated":{"line":1,"column":281}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":30,"column":58},"generated":{"line":1,"column":283}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":286}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":31,"column":36},"generated":{"line":1,"column":288}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":31,"column":49},"generated":{"line":1,"column":290}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":292}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":296}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":1,"column":298}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":331}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":34,"column":19},"generated":{"line":1,"column":334}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":340}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":34,"column":25},"generated":{"line":1,"column":342}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":35,"column":12},"generated":{"line":1,"column":343}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":35,"column":12},"generated":{"line":1,"column":349}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":35,"column":26},"generated":{"line":1,"column":351}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":35,"column":30},"generated":{"line":1,"column":353}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":1,"column":355}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":1,"column":385}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":37,"column":15},"generated":{"line":1,"column":387}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":37,"column":15},"generated":{"line":1,"column":392}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":37,"column":21},"generated":{"line":1,"column":398}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":37,"column":36},"generated":{"line":1,"column":401}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":37,"column":48},"generated":{"line":1,"column":403}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":37,"column":60},"generated":{"line":1,"column":415}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":38,"column":36},"generated":{"line":1,"column":418}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":1,"column":430}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":1,"column":434}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":41,"column":27},"generated":{"line":1,"column":436}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":42,"column":8},"generated":{"line":1,"column":439}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":1,"column":441}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":42,"column":30},"generated":{"line":1,"column":443}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":1,"column":447}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":44,"column":36},"generated":{"line":1,"column":488}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":538}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":543}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":54,"column":10},"generated":{"line":1,"column":664}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":62,"column":34},"generated":{"line":1,"column":878}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":66,"column":30},"generated":{"line":1,"column":948}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":75,"column":12},"generated":{"line":1,"column":1218}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":78,"column":33},"generated":{"line":1,"column":1268}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":79,"column":42},"generated":{"line":1,"column":1287}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":79,"column":14},"generated":{"line":1,"column":1291}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":82,"column":12},"generated":{"line":1,"column":1382}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":83,"column":49},"generated":{"line":1,"column":1407}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":83,"column":21},"generated":{"line":1,"column":1411}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":88,"column":12},"generated":{"line":1,"column":1552}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":89,"column":49},"generated":{"line":1,"column":1577}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":89,"column":21},"generated":{"line":1,"column":1581}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":95,"column":12},"generated":{"line":1,"column":1758}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":1819}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":1827}},{"source":"../src/mean_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":1,"column":1839}}],"sources":{"../src/mean_gpu.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class MeanProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(reduceInfo: backend_util.ReduceInfo, divisor?: number) {\n    const {windowSize, batchSize, inSize, outSize} = reduceInfo;\n    this.outputShape = [batchSize, outSize];\n\n    const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n    const windowSizeVec4Remainder = windowSize % 4;\n\n    let updateSnippet = `sumValue += dot(values, ones);`;\n    if (divisor != null) {\n      const denominator = 1 / divisor;\n      updateSnippet = `sumValue += dot(values * ${\n          util.isInt(denominator) ? denominator.toPrecision(2) :\n                                    denominator}, ones);`;\n    }\n\n    let checkOutOfBounds = '';\n    if (inSize % windowSize > 0) {\n      checkOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return 0.0;\n        }\n      `;\n    }\n\n    this.userCode = `\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${checkOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${updateSnippet}\n        }\n        setOutput(sumValue);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"8054132903be5f4e556bb7dd7d7d18b9","cacheData":{"env":{}}}