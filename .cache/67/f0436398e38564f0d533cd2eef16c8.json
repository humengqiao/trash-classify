{"id":"VKwv","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609565653941},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":11,"column":21},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/utils/generic_utils.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../errors","loc":{"line":12,"column":43},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/utils/generic_utils.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/errors.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.pyListRepeat=r,exports.assert=n,exports.count=o,exports.singletonOrArray=s,exports.toList=i,exports.objectListUid=a,exports.toSnakeCase=u,exports.toCamelCase=l,exports.serializeKerasObject=f,exports.deserializeKerasObject=y,exports.numberCompare=g,exports.reverseNumberCompare=d,exports.stringToDType=h,exports.stringsEqual=w,exports.unique=b,exports.isObjectEmpty=m,exports.checkStringTypeUnionValue=$,exports.checkArrayTypeAndLength=x,exports.assertPositiveInteger=j,exports.formatAsFriendlyString=A,exports.debounce=O,exports.mapActivationToFusedKernel=v,exports.getCartesianProductOfValues=E;var e=require(\"@tensorflow/tfjs-core\"),t=require(\"../errors\");function r(e,t){if(Array.isArray(e)){let r=[];for(let n=0;n<t;n++)r=r.concat(e);return r}{const r=new Array(t);return r.fill(e),r}}function n(e,r){if(!e)throw new t.AssertionError(r)}function o(e,t){let r=0;for(const n of e)n===t&&r++;return r}function s(e){return 1===e.length?e[0]:e}function i(e){return Array.isArray(e)?e:[e]}function a(e){const r=i(e);let n=\"\";for(const o of r){if(null==o.id)throw new t.ValueError(`Object ${o} passed to objectListUid without an id`);\"\"!==n&&(n+=\", \"),n=`${n}${Math.abs(o.id)}`}return n}function u(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,\"$1_$2\").replace(/([a-z])([A-Z])/g,\"$1_$2\").toLowerCase();return\"_\"!==t[0]?t:\"private\"+t}function l(e){return e.length<=1?e:-1===e.indexOf(\"_\")?e:e.replace(/[_]+(\\w|$)/g,(e,t)=>t.toUpperCase())}let c={};function f(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function p(e){if(null!=e&&\"object\"==typeof e)if(Array.isArray(e))e.forEach(e=>p(e));else{const t=Object.keys(e);for(const r of t){const t=e[r];null!=t&&\"object\"==typeof t&&(Array.isArray(t)||\"ndarray\"!==t.type||\"number\"!=typeof t.value?p(t):e[r]=t.value)}}}function y(e,r={},n={},o=\"object\",s=!1){if(\"string\"==typeof e){const s=e;let i;if(s in n)i=n[s];else if(s in c)i=c[s];else if(null==(i=r[s]))throw new t.ValueError(`Unknown ${o}: ${e}. `+\"This may be due to one of the following reasons:\\n\"+`1. The ${o} is defined in Python, in which `+\"case it needs to be ported to TensorFlow.js or your JavaScript code.\\n\"+`2. The custom ${o} is defined in JavaScript, `+\"but is not registered properly with tf.serialization.registerClass().\");return i}{const i=e;if(null==i.className||null==i.config)throw new t.ValueError(`${o}: Improper config format: `+`${JSON.stringify(i)}.\\n`+\"'className' and 'config' must set.\");const a=i.className;let u,l;if(a in n?[u,l]=n[a]:a in c?[u,l]=c.className:a in r&&([u,l]=r[a]),null==u)throw new t.ValueError(`Unknown ${o}: ${a}. `+\"This may be due to one of the following reasons:\\n\"+`1. The ${o} is defined in Python, in which `+\"case it needs to be ported to TensorFlow.js or your JavaScript code.\\n\"+`2. The custom ${o} is defined in JavaScript, `+\"but is not registered properly with tf.serialization.registerClass().\");if(null!=l){const e={};for(const n of Object.keys(c))e[n]=c[n];for(const o of Object.keys(n))e[o]=n[o];i.config.customObjects=e;const t=Object.assign({},c);for(const o of Object.keys(n))c[o]=n[o];p(i.config);const r=l(u,i.config,n,s);return c=Object.assign({},t),r}{const e=Object.assign({},c);for(const r of Object.keys(n))c[r]=n[r];const t=new u(i.config);return c=Object.assign({},e),t}}}function g(e,t){return e<t?-1:e>t?1:0}function d(e,t){return-1*g(e,t)}function h(e){switch(e){case\"float32\":return\"float32\";default:throw new t.ValueError(`Invalid dtype: ${e}`)}}function w(e,t){if(null==e||null==t)return e===t;if(e.length!==t.length)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r])return!1;return!0}function b(e){if(null==e)return e;const t=[];for(const r of e)-1===t.indexOf(r)&&t.push(r);return t}function m(e){if(null==e)throw new t.ValueError(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function $(e,r,n){if(null!=n&&e.indexOf(n)<0)throw new t.ValueError(`${n} is not a valid ${r}.  Valid values are ${e} or null/undefined.`)}function x(e,t,r=0,o=1/0){return n(r>=0),n(o>=r),Array.isArray(e)&&e.length>=r&&e.length<=o&&e.every(e=>typeof e===t)}function j(t,r){Array.isArray(t)?(e.util.assert(t.length>0,()=>`${r} is unexpectedly an empty array.`),t.forEach((e,t)=>j(e,`element ${t+1} of ${r}`))):e.util.assert(Number.isInteger(t)&&t>0,()=>`Expected ${r} to be a positive integer, but got `+`${A(t)}.`)}function A(e){return null===e?\"null\":Array.isArray(e)?\"[\"+e.map(e=>A(e)).join(\",\")+\"]\":\"string\"==typeof e?`\"${e}\"`:`${e}`}function O(t,r){let n,o=e.util.now();return(...s)=>{const i=e.util.now();return i-o<r?n:(o=i,n=t(...s))}}function v(e){return\"relu\"===e?\"relu\":\"linear\"===e?\"linear\":\"elu\"===e?\"elu\":null}function E(...e){n(e.length>0,\"arrayOfValues is empty\");for(const t of e)n(Array.isArray(t),\"one of the values is not an array\"),n(t.length>0,\"one of the values is empty\");return e.reduce((e,t)=>0===e.length?t.map(e=>[e]):t.map(t=>e.map(e=>[...e,t])).reduce((e,t)=>e.concat(t),[]),[])}"},"sourceMaps":null,"error":null,"hash":"ab8638ae3890423ec706b34a0b11274d","cacheData":{"env":{}}}