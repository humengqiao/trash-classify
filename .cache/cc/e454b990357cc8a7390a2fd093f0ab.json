{"id":"dN0g","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_packed_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/addn_packed_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.AddNPackedProgram=void 0;class t{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const s=[];this.variableNames.forEach(t=>{s.push(`vec4 v${t} = get${t}AtOutCoords();`)});const a=this.variableNames.map(t=>`v${t}`).join(\" + \");this.userCode=`\\n      void main() {\\n        ${s.join(\"\\n        \")}\\n\\n        vec4 result = ${a};\\n        setOutput(result);\\n      }\\n    `}}exports.AddNPackedProgram=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":0}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":13}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":20}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":35}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":43}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":56}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":57}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":64}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":68}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":76}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":99}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":1,"column":101}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":107}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":1,"column":109}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":27,"column":14},"generated":{"line":1,"column":121}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":27,"column":37},"generated":{"line":1,"column":123}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":126}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":131}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":22,"column":26},"generated":{"line":1,"column":143}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":146}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":151}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":24,"column":17},"generated":{"line":1,"column":165}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":167}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":172}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":25,"column":17},"generated":{"line":1,"column":186}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":1,"column":188}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":1,"column":193}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":1,"column":205}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":29,"column":9},"generated":{"line":1,"column":207}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":29,"column":9},"generated":{"line":1,"column":212}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":1,"column":226}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":29,"column":32},"generated":{"line":1,"column":228}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":29,"column":36},"generated":{"line":1,"column":232}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":29,"column":37},"generated":{"line":1,"column":233}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":29,"column":40},"generated":{"line":1,"column":235}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":243}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":248}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":254}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":31,"column":31},"generated":{"line":1,"column":256}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":1,"column":259}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":1,"column":264}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":1,"column":278}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":33,"column":31},"generated":{"line":1,"column":286}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":34,"column":6},"generated":{"line":1,"column":290}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":34,"column":15},"generated":{"line":1,"column":292}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":34,"column":29},"generated":{"line":1,"column":306}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":34,"column":46},"generated":{"line":1,"column":316}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":1,"column":337}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":1,"column":343}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":38,"column":22},"generated":{"line":1,"column":345}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":38,"column":27},"generated":{"line":1,"column":350}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":39,"column":27},"generated":{"line":1,"column":364}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":39,"column":31},"generated":{"line":1,"column":368}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":40,"column":39},"generated":{"line":1,"column":375}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":42,"column":27},"generated":{"line":1,"column":380}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":42,"column":32},"generated":{"line":1,"column":385}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":1,"column":392}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":1,"column":397}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":1,"column":440}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":46,"column":19},"generated":{"line":1,"column":442}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":46,"column":24},"generated":{"line":1,"column":447}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":48,"column":24},"generated":{"line":1,"column":489}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":538}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":546}},{"source":"../src/addn_packed_gpu.ts","name":null,"original":{"line":20,"column":30},"generated":{"line":1,"column":564}}],"sources":{"../src/addn_packed_gpu.ts":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class AddNPackedProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n  packedInputs = true;\n  packedOutput = true;\n\n  constructor(outputShape: number[], shapes: number[][]) {\n    this.outputShape = outputShape;\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n\n    const snippets: string[] = [];\n    // Get target elements from every input tensor.\n    this.variableNames.forEach(variable => {\n      snippets.push(`vec4 v${variable} = get${variable}AtOutCoords();`);\n    });\n\n    // Calculate the sum of all elements.\n    const operation = this.variableNames\n                          .map(variable => {\n                            return `v${variable}`;\n                          })\n                          .join(' + ');\n\n    this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        vec4 result = ${operation};\n        setOutput(result);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"029186d3c6fdb01d46f2824791a622b8","cacheData":{"env":{}}}