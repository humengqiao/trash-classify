{"id":"oY6B","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/multinomial_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/multinomial_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.MultinomialProgram=void 0;class t{constructor(t,e,n){this.variableNames=[\"probs\"],this.outputShape=[t,n],this.userCode=`\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < ${e-1}; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(${e-1}));\\n      }\\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,\"seed\")),e.gl.uniform1f(this.seedLoc,t)}}}exports.MultinomialProgram=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":0}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":13}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":20}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":35}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":43}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":56}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":57}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":64}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":68}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":76}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":100}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":102}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":108}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":1,"column":110}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":1,"column":122}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":29,"column":33},"generated":{"line":1,"column":124}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":29,"column":54},"generated":{"line":1,"column":126}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":129}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":134}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":148}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":149}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":158}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":163}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":1,"column":175}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":1,"column":176}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":178}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":1,"column":181}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":1,"column":186}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":42,"column":30},"generated":{"line":1,"column":416}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":42,"column":44},"generated":{"line":1,"column":418}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":52,"column":26},"generated":{"line":1,"column":664}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":52,"column":40},"generated":{"line":1,"column":666}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":1,"column":688}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":57,"column":21},"generated":{"line":1,"column":707}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":1,"column":710}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":1,"column":716}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":58,"column":12},"generated":{"line":1,"column":717}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":58,"column":33},"generated":{"line":1,"column":719}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":59,"column":26},"generated":{"line":1,"column":724}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":59,"column":10},"generated":{"line":1,"column":730}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":59,"column":15},"generated":{"line":1,"column":735}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":60,"column":13},"generated":{"line":1,"column":745}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":60,"column":13},"generated":{"line":1,"column":750}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":60,"column":23},"generated":{"line":1,"column":758}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":60,"column":29},"generated":{"line":1,"column":760}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":60,"column":48},"generated":{"line":1,"column":779}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":60,"column":62},"generated":{"line":1,"column":781}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":1,"column":790}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":1,"column":792}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":62,"column":15},"generated":{"line":1,"column":795}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":805}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":62,"column":30},"generated":{"line":1,"column":810}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":62,"column":39},"generated":{"line":1,"column":818}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":823}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":831}},{"source":"../src/multinomial_gpu.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":850}}],"sources":{"../src/multinomial_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUContext} from './gpgpu_context';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class MultinomialProgram implements GPGPUProgram {\n  variableNames = ['probs'];\n  outputShape: number[];\n  userCode: string;\n\n  // Caching uniform location for speed.\n  seedLoc: WebGLUniformLocation;\n\n  constructor(batchSize: number, numOutcomes: number, numSamples: number) {\n    this.outputShape = [batchSize, numSamples];\n\n    this.userCode = `\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${numOutcomes - 1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${numOutcomes - 1}));\n      }\n    `;\n  }\n\n  getCustomSetupFunc(seed: number) {\n    return (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => {\n      if (this.seedLoc == null) {\n        this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n      }\n      gpgpu.gl.uniform1f(this.seedLoc, seed);\n    };\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"4c555dc2f611906cdfdf080490ef93fa","cacheData":{"env":{}}}