{"id":"rS0T","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609565653941},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../engine","loc":{"line":17,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":21},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"../util","loc":{"line":20,"column":22},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/util.js"},{"name":"./operation","loc":{"line":21,"column":19},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.addN=void 0;var e=require(\"../engine\"),t=require(\"../kernel_names\"),r=require(\"../tensor_util_env\"),n=a(require(\"../util\")),o=require(\"./operation\");function s(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function a(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}function u(o){n.assert(Array.isArray(o),()=>\"The argument passed to tf.addN() must be a list of tensors\"),n.assert(o.length>=1,()=>\"Must pass at least one tensor to tf.addN(), but got \"+`${o.length}`);const s=o.map((e,t)=>(0,r.convertToTensor)(e,`tensors${t}`,\"addN\")),a=s[0];s.forEach(e=>{if(e.dtype!==a.dtype)throw new Error(\"All tensors passed to tf.addN() must have the same dtype\")}),s.forEach(e=>{if(!n.arraysEqual(e.shape,a.shape))throw new Error(\"All tensors passed to tf.addN() must have the same shape\")});const u=s;return e.ENGINE.runKernelFunc((e,t)=>{const r=e.addN(s);return t(s),r},u,null,t.AddN)}const d=(0,o.op)({addN_:u});exports.addN=d;"},"sourceMaps":null,"error":null,"hash":"21f16d211058aaa049f782efb08cfe76","cacheData":{"env":{}}}