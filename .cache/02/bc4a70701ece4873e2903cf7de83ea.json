{"id":"UNBn","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609565653941},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.LRNProgram=void 0;class t{constructor(t,o,n,s,e){this.variableNames=[\"x\"],this.outputShape=[];const r=o,i=t[3]-1;let a;this.outputShape=t;const d=`float(${n}) + float(${s}) * sum`;a=.5===e?`inversesqrt(${d})`:1===e?`1.0/(${d})`:`exp(log(${d}) * float(-${e}));`,this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -${r}; j <= ${r}; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  ${i}) {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * ${a};\\n        setOutput(val);\\n      }\\n    `}}exports.LRNProgram=t;"},"sourceMaps":null,"error":null,"hash":"c6505c8bb22836cb85e0353b917fe53d","cacheData":{"env":{}}}