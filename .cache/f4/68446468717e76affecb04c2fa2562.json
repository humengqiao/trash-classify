{"id":"wbV2","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609565653941},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":29},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.BinaryOpProgram=exports.PRELU=exports.ELU_DER=exports.MOD=exports.MIN=exports.MAX=exports.LOGICAL_OR=exports.LOGICAL_AND=exports.GREATER_EQUAL=exports.GREATER=exports.LESS_EQUAL=exports.LESS=exports.EQUAL=exports.SQUARED_DIFFERENCE=exports.POW=exports.INT_DIV=void 0;var t=require(\"@tensorflow/tfjs-core\");const r=\"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\",n=\"\\n  float s = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  if (ib != 0) {\\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n    return float(idiv(ia, ib, s));\\n  } else {\\n    return NAN;\\n  }\\n\";exports.INT_DIV=n;const o=\"\\nif(a < 0.0 && floor(b) < b){\\n  return NAN;\\n}\\nif (b == 0.0) {\\n  return 1.0;\\n}\\nreturn (round(mod(b, 2.0)) != 1) ?\\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\";exports.POW=o;const e=\"return (a - b) * (a - b);\";exports.SQUARED_DIFFERENCE=e;const s=\"return float(a == b);\";exports.EQUAL=s;const a=\"return float(a < b);\";exports.LESS=a;const i=\"return float(a <= b);\";exports.LESS_EQUAL=i;const p=\"return float(a > b);\";exports.GREATER=p;const b=\"return float(a >= b);\";exports.GREATER_EQUAL=b;const u=\"return float(a >= 1.0 && b >= 1.0);\";exports.LOGICAL_AND=u;const x=\"return float(a >= 1.0 || b >= 1.0);\";exports.LOGICAL_OR=x;const E=r+\"\\n  return max(a, b);\\n\";exports.MAX=E;const A=r+\"\\n  return min(a, b);\\n\";exports.MIN=A;const c=\"if (b == 0.0) return NAN;\\n  return mod(a, b);\";exports.MOD=c;const f=\"return (b >= 1.0) ? a : a * (b + 1.0);\";exports.ELU_DER=f;const l=\"return (a < 0.) ? b * a : a;\";exports.PRELU=l;class L{constructor(r,n,o){this.variableNames=[\"A\",\"B\"],this.outputShape=t.backend_util.assertAndGetBroadcastShape(n,o),this.userCode=`\\n      float binaryOperation(float a, float b) {\\n        ${r}\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    `}}exports.BinaryOpProgram=L;"},"sourceMaps":null,"error":null,"hash":"f96de9257179f92951f8906204f36880","cacheData":{"env":{}}}