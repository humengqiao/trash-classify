{"id":"hGmP","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609565653941},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":29},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.BatchNormProgram=void 0;var t=require(\"@tensorflow/tfjs-core\");class e{constructor(e,a,s,o,r,n){this.outputShape=[],this.variableNames=[\"x\",\"mean\",\"variance\"],t.backend_util.assertAndGetBroadcastShape(e,a),t.backend_util.assertAndGetBroadcastShape(e,s);let l=\"0.0\";null!=o&&(t.backend_util.assertAndGetBroadcastShape(e,o),this.variableNames.push(\"offset\"),l=\"getOffsetAtOutCoords()\");let i=\"1.0\";null!=r&&(t.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push(\"scale\"),i=\"getScaleAtOutCoords()\"),this.outputShape=e,this.userCode=`\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = ${l};\\n        float scale = ${i};\\n        float inv = scale * inversesqrt(variance + float(${n}));\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\n      }\\n    `}}exports.BatchNormProgram=e;"},"sourceMaps":null,"error":null,"hash":"c8a72e331aa94250628646fcf0f0865b","cacheData":{"env":{}}}