{"id":"hGmP","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/batchnorm_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":29},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.BatchNormProgram=void 0;var t=require(\"@tensorflow/tfjs-core\");class e{constructor(e,a,s,o,r,n){this.outputShape=[],this.variableNames=[\"x\",\"mean\",\"variance\"],t.backend_util.assertAndGetBroadcastShape(e,a),t.backend_util.assertAndGetBroadcastShape(e,s);let l=\"0.0\";null!=o&&(t.backend_util.assertAndGetBroadcastShape(e,o),this.variableNames.push(\"offset\"),l=\"getOffsetAtOutCoords()\");let i=\"1.0\";null!=r&&(t.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push(\"scale\"),i=\"getScaleAtOutCoords()\"),this.outputShape=e,this.userCode=`\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = ${l};\\n        float scale = ${i};\\n        float inv = scale * inversesqrt(variance + float(${n}));\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\n      }\\n    `}}exports.BatchNormProgram=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":13}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":20}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":35}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":43}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":56}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":57}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":64}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":68}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":76}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":98}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":100}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":104}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":106}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":114}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":139}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":145}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":147}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":159}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":27,"column":24},"generated":{"line":1,"column":161}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":27,"column":45},"generated":{"line":1,"column":163}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":1,"column":165}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":28,"column":34},"generated":{"line":1,"column":167}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":1,"column":169}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":172}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":177}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":1,"column":189}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":192}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":197}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":1,"column":211}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":1,"column":212}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":31},"generated":{"line":1,"column":216}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":39},"generated":{"line":1,"column":223}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":1,"column":235}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":1,"column":237}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":1,"column":250}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":44},"generated":{"line":1,"column":277}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":52},"generated":{"line":1,"column":279}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":17},"generated":{"line":1,"column":282}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":17},"generated":{"line":1,"column":284}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":17},"generated":{"line":1,"column":297}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":44},"generated":{"line":1,"column":324}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":52},"generated":{"line":1,"column":326}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":329}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":333}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":1,"column":335}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":35,"column":23},"generated":{"line":1,"column":341}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":1,"column":347}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":1,"column":351}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":1,"column":353}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":1,"column":366}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":46},"generated":{"line":1,"column":393}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":54},"generated":{"line":1,"column":395}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":1,"column":398}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":1,"column":403}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":25},"generated":{"line":1,"column":417}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":30},"generated":{"line":1,"column":422}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":1,"column":432}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":38,"column":22},"generated":{"line":1,"column":434}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":1,"column":460}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":1,"column":464}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":41,"column":23},"generated":{"line":1,"column":466}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":42,"column":22},"generated":{"line":1,"column":472}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":42,"column":8},"generated":{"line":1,"column":478}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":19},"generated":{"line":1,"column":482}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":19},"generated":{"line":1,"column":484}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":19},"generated":{"line":1,"column":497}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":46},"generated":{"line":1,"column":524}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":54},"generated":{"line":1,"column":526}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":1,"column":529}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":1,"column":534}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":25},"generated":{"line":1,"column":548}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":30},"generated":{"line":1,"column":553}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":1,"column":562}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":45,"column":21},"generated":{"line":1,"column":564}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":1,"column":589}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":1,"column":594}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":48,"column":23},"generated":{"line":1,"column":606}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":1,"column":608}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":1,"column":613}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":54,"column":25},"generated":{"line":1,"column":805}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":55,"column":24},"generated":{"line":1,"column":834}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":56,"column":59},"generated":{"line":1,"column":898}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":989}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":997}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":1,"column":1014}}],"sources":{"../src/batchnorm_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class BatchNormProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(\n      xShape: number[], meanShape: number[], varianceShape: number[],\n      offsetShape: number[]|null, scaleShape: number[]|null,\n      varianceEpsilon: number) {\n    this.variableNames = ['x', 'mean', 'variance'];\n    backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n    backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n\n    let offsetSnippet = '0.0';\n    if (offsetShape != null) {\n      backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n      this.variableNames.push('offset');\n      offsetSnippet = 'getOffsetAtOutCoords()';\n    }\n\n    let scaleSnippet = '1.0';\n    if (scaleShape != null) {\n      backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n      this.variableNames.push('scale');\n      scaleSnippet = 'getScaleAtOutCoords()';\n    }\n\n    this.outputShape = xShape;\n    this.userCode = `\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${offsetSnippet};\n        float scale = ${scaleSnippet};\n        float inv = scale * inversesqrt(variance + float(${varianceEpsilon}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"36dd53eba82afd8252f2fb3dcc9e726a","cacheData":{"env":{}}}