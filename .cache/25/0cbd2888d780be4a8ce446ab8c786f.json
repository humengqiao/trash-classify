{"id":"BQVM","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/backends/array_util.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/src/backends/array_util.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";function e(e,n,r){const o=t(e,n,r),c=o<0?-(o+1):o;e.splice(c,0,n)}function t(e,t,o){return r(e,t,o||n)}function n(e,t){return e>t?1:e<t?-1:0}function r(e,t,n){let r=0,o=e.length,c=0,s=!1;for(;r<o;){const u=n(t,e[c=r+(o-r>>>1)]);u>0?r=c+1:(o=c,s=!u)}return s?r:-r-1}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.binaryInsert=e,exports.binarySearch=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":13}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":1,"column":22}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":24}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":32,"column":14},"generated":{"line":1,"column":26}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":32,"column":26},"generated":{"line":1,"column":28}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":31}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":37}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":1,"column":39}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":33,"column":29},"generated":{"line":1,"column":41}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":33,"column":34},"generated":{"line":1,"column":43}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":33,"column":43},"generated":{"line":1,"column":45}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":48}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":34,"column":25},"generated":{"line":1,"column":50}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":34,"column":33},"generated":{"line":1,"column":52}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":34,"column":39},"generated":{"line":1,"column":56}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":34,"column":47},"generated":{"line":1,"column":58}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":34,"column":52},"generated":{"line":1,"column":61}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":1,"column":63}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":1,"column":65}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":1,"column":72}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":35,"column":29},"generated":{"line":1,"column":74}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":35,"column":32},"generated":{"line":1,"column":76}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":79}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":53,"column":16},"generated":{"line":1,"column":88}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":1,"column":90}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":54,"column":14},"generated":{"line":1,"column":92}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":54,"column":25},"generated":{"line":1,"column":94}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":97}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":1,"column":104}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":55,"column":23},"generated":{"line":1,"column":106}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":55,"column":28},"generated":{"line":1,"column":108}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":55,"column":36},"generated":{"line":1,"column":110}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":55,"column":50},"generated":{"line":1,"column":113}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":1,"column":116}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":65,"column":9},"generated":{"line":1,"column":125}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":65,"column":30},"generated":{"line":1,"column":127}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":65,"column":36},"generated":{"line":1,"column":129}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":1,"column":132}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":1,"column":139}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":66,"column":13},"generated":{"line":1,"column":141}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":1,"column":143}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":66,"column":21},"generated":{"line":1,"column":145}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":66,"column":25},"generated":{"line":1,"column":147}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":66,"column":30},"generated":{"line":1,"column":150}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":66,"column":34},"generated":{"line":1,"column":152}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":69,"column":0},"generated":{"line":1,"column":154}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":1,"column":163}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":1,"column":165}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":70,"column":14},"generated":{"line":1,"column":167}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":70,"column":25},"generated":{"line":1,"column":169}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":1,"column":172}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":1,"column":176}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":71,"column":13},"generated":{"line":1,"column":178}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":1,"column":180}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":72,"column":14},"generated":{"line":1,"column":182}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":72,"column":18},"generated":{"line":1,"column":184}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":1,"column":191}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":73,"column":15},"generated":{"line":1,"column":193}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":1,"column":195}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":74,"column":14},"generated":{"line":1,"column":198}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":1,"column":200}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":1,"column":205}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":75,"column":16},"generated":{"line":1,"column":207}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":75,"column":23},"generated":{"line":1,"column":210}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":211}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":217}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":77,"column":26},"generated":{"line":1,"column":219}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":77,"column":37},"generated":{"line":1,"column":221}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":77,"column":45},"generated":{"line":1,"column":223}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":1,"column":225}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":76,"column":13},"generated":{"line":1,"column":227}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":76,"column":22},"generated":{"line":1,"column":230}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":76,"column":30},"generated":{"line":1,"column":232}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":76,"column":40},"generated":{"line":1,"column":236}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":78,"column":8},"generated":{"line":1,"column":241}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":78,"column":24},"generated":{"line":1,"column":243}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":1,"column":245}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":79,"column":13},"generated":{"line":1,"column":247}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":79,"column":22},"generated":{"line":1,"column":249}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":1,"column":252}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":81,"column":14},"generated":{"line":1,"column":254}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":84,"column":6},"generated":{"line":1,"column":256}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":84,"column":15},"generated":{"line":1,"column":259}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":88,"column":9},"generated":{"line":1,"column":262}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":88,"column":9},"generated":{"line":1,"column":269}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":88,"column":17},"generated":{"line":1,"column":271}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":88,"column":25},"generated":{"line":1,"column":274}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":88,"column":32},"generated":{"line":1,"column":276}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":278}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":285}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":300}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":308}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":321}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":322}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":329}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":333}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":341}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":354}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":356}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":364}},{"source":"../../src/backends/array_util.ts","name":null,"original":{"line":89,"column":1},"generated":{"line":1,"column":377}}],"sources":{"../../src/backends/array_util.ts":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Inserts a value into a sorted array. This method allows duplicate, meaning it\n * allows inserting duplicate value, in which case, the element will be inserted\n * at the lowest index of the value.\n * @param arr The array to modify.\n * @param element The element to insert.\n * @param comparator Optional. If no comparator is specified, elements are\n * compared using array_util.defaultComparator, which is suitable for Strings\n * and Numbers in ascending arrays. If the array contains multiple instances of\n * the target value, the left-most instance will be returned. To provide a\n * comparator, it should take 2 arguments to compare and return a negative,\n * zero, or a positive number.\n */\nexport function binaryInsert<T>(\n    arr: T[], element: T, comparator?: (a: T, b: T) => number) {\n  const index = binarySearch(arr, element, comparator);\n  const insertionPoint = index < 0 ? -(index + 1) : index;\n  arr.splice(insertionPoint, 0, element);\n}\n\n/**\n * Searches the array for the target using binary search, returns the index\n * of the found element, or position to insert if element not found. If no\n * comparator is specified, elements are compared using array_\n * util.defaultComparator, which is suitable for Strings and Numbers in\n * ascending arrays. If the array contains multiple instances of the target\n * value, the left-most instance will be returned.\n * @param arr The array to be searched in.\n * @param target The target to be searched for.\n * @param comparator Should take 2 arguments to compare and return a negative,\n *    zero, or a positive number.\n * @return Lowest index of the target value if found, otherwise the insertion\n *    point where the target should be inserted, in the form of\n *    (-insertionPoint - 1).\n */\nexport function binarySearch<T>(\n    arr: T[], target: T, comparator?: (a: T, b: T) => number) {\n  return binarySearch_(arr, target, comparator || defaultComparator);\n}\n\n/**\n * Compares its two arguments for order.\n * @param a The first element to be compared.\n * @param b The second element to be compared.\n * @return A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nfunction defaultComparator<T>(a: T, b: T): number {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\nfunction binarySearch_<T>(\n    arr: T[], target: T, comparator: (a: T, b: T) => number) {\n  let left = 0;\n  let right = arr.length;\n  let middle = 0;\n  let found = false;\n  while (left < right) {\n    middle = left + ((right - left) >>> 1);\n    const compareResult = comparator(target, arr[middle]);\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle;\n      // If compareResult is 0, the value is found. We record it is found,\n      // and then keep looking because there may be duplicate.\n      found = !compareResult;\n    }\n  }\n\n  return found ? left : -left - 1;\n}\n"},"lineCount":null}},"error":null,"hash":"284e5b6f65eff01c843c9ec00f0b04ab","cacheData":{"env":{}}}