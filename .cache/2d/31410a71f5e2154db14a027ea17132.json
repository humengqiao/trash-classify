{"id":"Iz4a","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/src/kernels/Fill.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":27},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.fill=r,exports.fillConfig=void 0;var e=require(\"@tensorflow/tfjs-core\");function r(r){const{backend:t,attrs:l}=r,{shape:n,value:i,dtype:s}=l,f=s||e.util.inferDtype(i),u=e.util.getArrayFromDType(f,e.util.sizeFromShape(n));return o(u,i,f),t.makeTensorInfo(n,f,u)}const t={kernelName:e.Fill,backendName:\"cpu\",kernelFunc:r};function o(e,r,t){e.fill(r)}exports.fillConfig=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":81}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":83}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":91}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":107}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":109}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":113}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":115}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":123}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":1,"column":148}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":22,"column":16},"generated":{"line":1,"column":157}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":22,"column":21},"generated":{"line":1,"column":159}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":1,"column":162}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":1,"column":168}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":24,"column":9},"generated":{"line":1,"column":176}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":1,"column":178}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":24,"column":18},"generated":{"line":1,"column":184}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":1,"column":187}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":190}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":1,"column":196}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":198}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":1,"column":204}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":206}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":1,"column":212}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":1,"column":215}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":1,"column":217}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":27,"column":17},"generated":{"line":1,"column":219}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":27,"column":26},"generated":{"line":1,"column":222}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":27,"column":31},"generated":{"line":1,"column":224}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":27,"column":31},"generated":{"line":1,"column":229}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":27,"column":42},"generated":{"line":1,"column":240}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":1,"column":243}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":17},"generated":{"line":1,"column":245}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":1,"column":247}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":1,"column":252}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":40},"generated":{"line":1,"column":270}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":48},"generated":{"line":1,"column":272}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":53},"generated":{"line":1,"column":274}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":53},"generated":{"line":1,"column":279}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":28,"column":67},"generated":{"line":1,"column":293}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":1,"column":297}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":1,"column":304}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":1,"column":306}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":29,"column":21},"generated":{"line":1,"column":308}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":29,"column":28},"generated":{"line":1,"column":310}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":1,"column":313}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":1,"column":315}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":31,"column":32},"generated":{"line":1,"column":330}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":31,"column":39},"generated":{"line":1,"column":332}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":31,"column":47},"generated":{"line":1,"column":334}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":337}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":34,"column":13},"generated":{"line":1,"column":343}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":34,"column":40},"generated":{"line":1,"column":345}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":1,"column":346}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":1,"column":357}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":34,"column":40},"generated":{"line":1,"column":359}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":1,"column":364}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":36,"column":15},"generated":{"line":1,"column":376}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":1,"column":382}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":37,"column":14},"generated":{"line":1,"column":393}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":1,"column":396}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":40,"column":9},"generated":{"line":1,"column":405}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":1,"column":407}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":1,"column":409}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":41,"column":46},"generated":{"line":1,"column":411}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":43,"column":5},"generated":{"line":1,"column":414}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":43,"column":25},"generated":{"line":1,"column":416}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":43,"column":30},"generated":{"line":1,"column":421}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":424}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":432}},{"source":"../../src/kernels/Fill.ts","name":null,"original":{"line":47,"column":1},"generated":{"line":1,"column":443}}],"sources":{"../../src/kernels/Fill.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, DataValues, Fill, FillAttrs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function fill(args: {backend: MathBackendCPU, attrs: FillAttrs}):\n    TensorInfo {\n  const {backend, attrs} = args;\n  const {shape, value, dtype} = attrs;\n\n  const $dtype = dtype || util.inferDtype(value);\n  const values = util.getArrayFromDType($dtype, util.sizeFromShape(shape));\n  fillValues(values, value, $dtype);\n\n  return backend.makeTensorInfo(shape, $dtype, values);\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'cpu',\n  kernelFunc: fill as {} as KernelFunc\n};\n\nfunction fillValues(\n    values: DataValues, value: string|number, dtype: DataType): void {\n  if (dtype === 'string') {\n    (values as string[]).fill(value as string);\n  } else {\n    (values as TypedArray).fill(value as number);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"02ddd3b2cd5919ebc79aa27b14d1343e","cacheData":{"env":{}}}