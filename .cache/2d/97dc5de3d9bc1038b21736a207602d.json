{"id":"vOJf","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/scatter_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000},{"name":"./shader_compiler","loc":{"line":17,"column":34},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ScatterProgram=void 0;var e=require(\"./shader_compiler\");class t{constructor(t,n,o,s,r,d,i=!0){this.variableNames=[\"updates\",\"indices\",\"defaultValue\"],this.outputShape=d;const a=(0,e.getCoordsDataType)(r.length),u=(0,e.getCoordsDataType)(d.length);let l=\"\";1===o?l=\"i\":2===o&&(l=\"i, j\");const c=`getIndices(${l})`;let f=\"\";1===s?f=\"i\":2===s&&(f=\"i, coords[1]\");const p=`getUpdates(${f})`,$=n>1?\"strides[j]\":\"strides\";this.userCode=`\\n        ${a} strides = ${a}(${r});\\n\\n        void main() {\\n          ${u} coords = getOutputCoords();\\n          float sum = 0.0;\\n          bool found = false;\\n          for (int i = 0; i < ${t}; i++) {\\n            int flattenedIndex = 0;\\n            for (int j = 0; j < ${n}; j++) {\\n              int index = round(${c});\\n              flattenedIndex += index * ${$};\\n            }\\n            if (flattenedIndex == coords[0]) {\\n              sum += ${p};\\n              found = true;\\n            }\\n          }\\n          setOutput(mix(getDefaultValue(), sum, float(found)));\\n        }\\n      `}}exports.ScatterProgram=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":0}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":13}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":20}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":35}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":43}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":56}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":57}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":64}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":68}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":76}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":96}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":98}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":102}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":104}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":112}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":133}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":139}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":141}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":153}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":27,"column":26},"generated":{"line":1,"column":155}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":27,"column":44},"generated":{"line":1,"column":157}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":1,"column":159}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":28,"column":27},"generated":{"line":1,"column":161}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":28,"column":46},"generated":{"line":1,"column":163}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":1,"column":165}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":1,"column":168}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":171}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":176}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":190}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":191}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":22,"column":30},"generated":{"line":1,"column":201}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":211}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":227}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":232}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":1,"column":244}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":246}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":252}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":1,"column":255}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":31,"column":42},"generated":{"line":1,"column":257}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":31,"column":42},"generated":{"line":1,"column":259}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":31,"column":42},"generated":{"line":1,"column":278}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":31,"column":50},"generated":{"line":1,"column":280}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":1,"column":288}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":32,"column":18},"generated":{"line":1,"column":291}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":32,"column":36},"generated":{"line":1,"column":293}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":32,"column":36},"generated":{"line":1,"column":295}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":32,"column":36},"generated":{"line":1,"column":314}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":32,"column":42},"generated":{"line":1,"column":316}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":324}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":328}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":1,"column":330}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":1,"column":333}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":337}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":1,"column":339}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":1,"column":341}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":36,"column":31},"generated":{"line":1,"column":345}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":36,"column":15},"generated":{"line":1,"column":349}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":1,"column":353}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":37,"column":22},"generated":{"line":1,"column":355}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":1,"column":363}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":1,"column":369}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":39,"column":41},"generated":{"line":1,"column":385}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":1,"column":390}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":1,"column":394}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":1,"column":396}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":42,"column":24},"generated":{"line":1,"column":399}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":42,"column":8},"generated":{"line":1,"column":403}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":1,"column":405}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":43,"column":22},"generated":{"line":1,"column":407}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":44,"column":31},"generated":{"line":1,"column":411}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":44,"column":15},"generated":{"line":1,"column":415}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":1,"column":419}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":45,"column":22},"generated":{"line":1,"column":421}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":47,"column":10},"generated":{"line":1,"column":437}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":47,"column":10},"generated":{"line":1,"column":443}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":47,"column":41},"generated":{"line":1,"column":459}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":1,"column":464}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":49,"column":25},"generated":{"line":1,"column":466}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":49,"column":36},"generated":{"line":1,"column":468}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":49,"column":40},"generated":{"line":1,"column":470}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":49,"column":55},"generated":{"line":1,"column":483}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":493}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":498}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":51,"column":10},"generated":{"line":1,"column":520}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":51,"column":35},"generated":{"line":1,"column":535}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":51,"column":50},"generated":{"line":1,"column":540}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":54,"column":12},"generated":{"line":1,"column":583}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":57,"column":32},"generated":{"line":1,"column":706}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":59,"column":34},"generated":{"line":1,"column":789}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":60,"column":34},"generated":{"line":1,"column":835}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":61,"column":42},"generated":{"line":1,"column":883}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":64,"column":23},"generated":{"line":1,"column":974}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":1121}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":1129}},{"source":"../src/scatter_gpu.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":1,"column":1144}}],"sources":{"../src/scatter_gpu.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class ScatterProgram implements GPGPUProgram {\n  variableNames = ['updates', 'indices', 'defaultValue'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      updateSize: number, sliceDim: number, indicesRank: number,\n      updatesRank: number, strides: number[], shape: number[],\n      summingDupeIndex = true) {\n    this.outputShape = shape;\n    const stridesType = getCoordsDataType(strides.length);\n    const dtype = getCoordsDataType(shape.length);\n    let indicesString = '';\n    if (indicesRank === 1) {\n      indicesString = 'i';\n    } else if (indicesRank === 2) {\n      indicesString = 'i, j';\n    }\n    const indicesSnippet = `getIndices(${indicesString})`;\n\n    let updatesString = '';\n    if (updatesRank === 1) {\n      updatesString = 'i';\n    } else if (updatesRank === 2) {\n      updatesString = 'i, coords[1]';\n    }\n    const updatesSnippet = `getUpdates(${updatesString})`;\n\n    const strideString = sliceDim > 1 ? 'strides[j]' : 'strides';\n    this.userCode = `\n        ${stridesType} strides = ${stridesType}(${strides});\n\n        void main() {\n          ${dtype} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${updateSize}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${sliceDim}; j++) {\n              int index = round(${indicesSnippet});\n              flattenedIndex += index * ${strideString};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${updatesSnippet};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"df1a794b06965ca6b99b2df8e1c8e0ab","cacheData":{"env":{}}}