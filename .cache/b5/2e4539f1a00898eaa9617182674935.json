{"id":"VXS2","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/clip_by_value.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/src/public/chained_ops/clip_by_value.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../ops/ops","loc":{"line":18,"column":28},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/clip_by_value.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/ops.js"},{"name":"../../tensor","loc":{"line":19,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/clip_by_value.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor.js"}],"generated":{"js":"\"use strict\";var e=require(\"../../ops/ops\"),r=require(\"../../tensor\");r.Tensor.prototype.clipByValue=function(r,s){return this.throwIfDisposed(),(0,e.clipByValue)(this,r,s)};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":17}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":19}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":27}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":44}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":46}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":54}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":70}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":1,"column":72}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":1,"column":79}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":1,"column":89}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":29,"column":31},"generated":{"line":1,"column":101}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":1,"column":110}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":30,"column":17},"generated":{"line":1,"column":112}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":1,"column":115}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":31,"column":7},"generated":{"line":1,"column":122}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":31,"column":7},"generated":{"line":1,"column":127}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":1,"column":146}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":32,"column":21},"generated":{"line":1,"column":148}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":32,"column":21},"generated":{"line":1,"column":150}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":32,"column":21},"generated":{"line":1,"column":163}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":32,"column":27},"generated":{"line":1,"column":168}},{"source":"../../../src/public/chained_ops/clip_by_value.ts","name":null,"original":{"line":32,"column":32},"generated":{"line":1,"column":170}}],"sources":{"../../../src/public/chained_ops/clip_by_value.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// TODO update import path once op is modularized.\nimport {clipByValue} from '../../ops/ops';\nimport {Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    clipByValue<T extends Tensor>(min: number, max: number): Tensor;\n  }\n}\n\nTensor.prototype.clipByValue = function<T extends Tensor>(\n    min: number, max: number): T {\n  this.throwIfDisposed();\n  return clipByValue(this, min, max) as T;\n};\n"},"lineCount":null}},"error":null,"hash":"a07b053b2109d731bffa122799223a94","cacheData":{"env":{}}}