{"id":"OqlU","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mat_mul.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/src/public/chained_ops/mat_mul.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../ops/mat_mul","loc":{"line":17,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mat_mul.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js"},{"name":"../../tensor","loc":{"line":18,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mat_mul.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor.js"}],"generated":{"js":"\"use strict\";var t=require(\"../../ops/mat_mul\"),r=require(\"../../tensor\");r.Tensor.prototype.matMul=function(r,e,s){return this.throwIfDisposed(),(0,t.matMul)(this,r,e,s)};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":17}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":19}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":27}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":48}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":50}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":58}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":74}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":1,"column":83}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":1,"column":93}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":1,"column":100}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":1,"column":109}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":111}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":1,"column":113}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":1,"column":116}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":32,"column":7},"generated":{"line":1,"column":123}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":32,"column":7},"generated":{"line":1,"column":128}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":1,"column":147}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":1,"column":149}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":1,"column":151}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":1,"column":159}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":22},"generated":{"line":1,"column":164}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":25},"generated":{"line":1,"column":166}},{"source":"../../../src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":37},"generated":{"line":1,"column":168}}],"sources":{"../../../src/public/chained_ops/mat_mul.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {matMul} from '../../ops/mat_mul';\nimport {Tensor} from '../../tensor';\nimport {Rank, TensorLike} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    matMul<T extends Tensor>(\n        b: Tensor|TensorLike, transposeA?: boolean,\n        transposeB?: boolean): Tensor;\n  }\n}\n\nTensor.prototype.matMul = function<T extends Tensor>(\n    this: T, b: Tensor|TensorLike, transposeA?: boolean,\n    transposeB?: boolean): Tensor {\n  this.throwIfDisposed();\n  return matMul(this, b, transposeA, transposeB);\n};\n"},"lineCount":null}},"error":null,"hash":"eb19158eb27af19b64598224849c241b","cacheData":{"env":{}}}