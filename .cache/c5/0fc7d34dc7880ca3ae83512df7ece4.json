{"id":"obKl","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/binaryop_complex_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":29},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.BinaryOpComplexProgram=exports.COMPLEX_MULTIPLY=void 0;var a=require(\"@tensorflow/tfjs-core\");const e={REAL:\"return areal * breal - aimag * bimag;\",IMAG:\"return areal * bimag + aimag * breal;\"};exports.COMPLEX_MULTIPLY=e;class t{constructor(e,t,r){this.variableNames=[\"AReal\",\"AImag\",\"BReal\",\"BImag\"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,r),this.userCode=`\\n      float binaryOpComplex(\\n          float areal, float aimag, float breal, float bimag) {\\n        ${e}\\n      }\\n\\n      void main() {\\n        float areal = getARealAtOutCoords();\\n        float aimag = getAImagAtOutCoords();\\n        float breal = getBRealAtOutCoords();\\n        float bimag = getBImagAtOutCoords();\\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\\n      }\\n    `}}exports.BinaryOpComplexProgram=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":0}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":13}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":20}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":35}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":43}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":56}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":57}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":64}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":68}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":76}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":99}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":107}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":129}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":131}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":135}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":137}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":145}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":7},"generated":{"line":1,"column":170}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":1,"column":176}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":1,"column":178}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":179}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":1,"column":184}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":1,"column":224}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":1,"column":229}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":270}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":278}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":295}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":1,"column":297}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":1,"column":303}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":1,"column":305}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":1,"column":317}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":26},"generated":{"line":1,"column":319}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":35,"column":44},"generated":{"line":1,"column":321}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":1,"column":324}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":1,"column":329}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":18},"generated":{"line":1,"column":343}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":1,"column":344}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":1,"column":352}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":37},"generated":{"line":1,"column":360}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":31,"column":46},"generated":{"line":1,"column":368}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":1,"column":377}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":1,"column":382}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":23},"generated":{"line":1,"column":394}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":1,"column":396}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":36},"generated":{"line":1,"column":409}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":63},"generated":{"line":1,"column":436}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":36,"column":71},"generated":{"line":1,"column":438}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":1,"column":441}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":1,"column":446}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":1,"column":563}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":864}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":872}},{"source":"../src/binaryop_complex_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":895}}],"sources":{"../src/binaryop_complex_gpu.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\n// (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\nexport const COMPLEX_MULTIPLY = {\n  REAL: 'return areal * breal - aimag * bimag;',\n  IMAG: 'return areal * bimag + aimag * breal;'\n};\n\nexport class BinaryOpComplexProgram implements GPGPUProgram {\n  variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(op: string, aShape: number[], bShape: number[]) {\n    this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n\n    this.userCode = `\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${op}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"31a27172d39a44feb277bd8b2d48e2cd","cacheData":{"env":{}}}