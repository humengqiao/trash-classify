{"id":"iw6x","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609564004117},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":18,"column":20},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/lazy_iterator.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"seedrandom","loc":{"line":19,"column":28},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/lazy_iterator.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/seedrandom/index.js"},{"name":"../util/deep_clone","loc":{"line":20,"column":26},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/lazy_iterator.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/util/deep_clone.js"},{"name":"../util/deep_map","loc":{"line":21,"column":55},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/lazy_iterator.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/util/deep_map.js"},{"name":"../util/growing_ring_buffer","loc":{"line":22,"column":34},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/lazy_iterator.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/util/growing_ring_buffer.js"},{"name":"../util/ring_buffer","loc":{"line":23,"column":27},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/lazy_iterator.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/util/ring_buffer.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.iteratorFromItems=l,exports.iteratorFromIncrementing=h,exports.iteratorFromFunction=c,exports.iteratorFromConcatenated=m,exports.iteratorFromConcatenatedFunction=d,exports.iteratorFromZipped=p,exports.ShuffleIterator=exports.PrefetchIterator=exports.ZipMismatchMode=exports.ChainedIterator=exports.OneToManyIterator=exports.LazyIterator=void 0;var t,e=o(require(\"@tensorflow/tfjs-core\")),r=o(require(\"seedrandom\")),s=require(\"../util/deep_clone\"),n=require(\"../util/deep_map\"),a=require(\"../util/growing_ring_buffer\"),i=require(\"../util/ring_buffer\");function u(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return u=function(){return t},t}function o(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!=typeof t&&\"function\"!=typeof t)return{default:t};var e=u();if(e&&e.has(t))return e.get(t);var r={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var a=s?Object.getOwnPropertyDescriptor(t,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=t[n]}return r.default=t,e&&e.set(t,r),r}function l(t){return new x(t)}function h(t){let e=t;return c(()=>({value:e++,done:!1}))}function c(t){return new y(t)}function m(t,e){return new E(t,e)}function d(t,e,r){return m(c(t).take(e),r)}function p(e,r=t.FAIL){return new O(e,r)}class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let r=await t.next();for(;!r.done;)e.push(r.value),r=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),r=t(e.value);for(;!e.done&&r;)r=t((e=await this.next()).value)}handleErrors(t){return new M(this,t)}filter(t){return new g(this,t)}map(t){return new F(this,t)}mapAsync(t){return new T(this,t)}serialMapAsync(t){return new T(this,t).serial()}flatmap(t){return new S(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new I(this,t,e)}columnMajorBatch(t,e=!0,r=n.zipToList){return this.rowMajorBatch(t,e).map(t=>(0,n.deepZip)(t,r))}concatenate(t,e){return new E(l([this,t]),e)}take(t){return t<0||null==t?this:new R(this,t)}skip(t){return t<0||null==t?this:new w(this,t)}prefetch(t){return new P(this,t)}shuffle(t,e){return new C(this,t,e)}serial(){return new v(this)}}exports.LazyIterator=f;class x extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(0,s.deepClone)(t),done:!1}}}class y extends f{constructor(t){super(),this.nextFn=t}summary(){return\"Function call\"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class v extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class w extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;e.dispose(t.value)}return this.upstream.next()}}class R extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class I extends f{constructor(t,e,r=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class g extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;e.dispose(t.value)}}}class F extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const r=e.tensor_util.getTensorsInContainer(t.value),s=this.transform(t.value),n=e.tensor_util.getTensorsInContainer(s);for(const a of r)e.tensor_util.isTensorInList(a,n)||a.dispose();return{value:s,done:!1}}}class M extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class T extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const r=e.tensor_util.getTensorsInContainer(t.value),s=await this.transform(t.value),n=e.tensor_util.getTensorsInContainer(s);for(const a of r)e.tensor_util.isTensorInList(a,n)||a.dispose();return{value:s,done:!1}}}class b extends f{constructor(){super(),this.outputQueue=new a.GrowingRingBuffer,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}exports.OneToManyIterator=b;class S extends b{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const r=e.tensor_util.getTensorsInContainer(t.value),s=this.transform(t.value),n=e.tensor_util.getTensorsInContainer(s);this.outputQueue.pushAll(s);for(const a of r)e.tensor_util.isTensorInList(a,n)||a.dispose();return!0}}class E extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return\"TODO: fill in upstream of chained summaries -> Chained\"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}exports.ChainedIterator=E,exports.ZipMismatchMode=t,function(t){t[t.FAIL=0]=\"FAIL\",t[t.SHORTEST=1]=\"SHORTEST\",t[t.LONGEST=2]=\"LONGEST\"}(t||(exports.ZipMismatchMode=t={}));class O extends f{constructor(e,r=t.FAIL){super(),this.iterators=e,this.mismatchMode=r,this.count=0,this.currentPromise=null}summary(){return\"{TODO: fill in upstream of zip summaries} -> Zip\"}async nextState(e){await e;let r=0,s=0;const a=await(0,n.deepMapAndAwaitAll)(this.iterators,function(t){if(t instanceof f)return{value:t.next().then(t=>(r++,t.done&&s++,t.value)),recurse:!1};return{value:null,recurse:!0}});if(r===s)return{value:null,done:!0};if(s>0)switch(this.mismatchMode){case t.FAIL:throw new Error(\"Zipped streams should have the same length. \"+`Mismatched at element ${this.count}.`);case t.SHORTEST:return{value:null,done:!0};case t.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class P extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new i.RingBuffer(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}exports.PrefetchIterator=P;class C extends P{constructor(t,s,n){super(t,s),this.upstream=t,this.windowSize=s,this.upstreamExhausted=!1,this.random=r.alea(n||e.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}exports.ShuffleIterator=C;"},"sourceMaps":null,"error":null,"hash":"db33fc70315c7ff17704d57f78767e23","cacheData":{"env":{}}}