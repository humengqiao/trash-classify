{"id":"HKvD","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../engine","loc":{"line":17,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../util","loc":{"line":18,"column":123},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/util.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.makeTensor=s;var e=require(\"../engine\"),r=require(\"../util\");function s(s,o,t,a){if(null==a&&(a=(0,r.inferDtype)(s)),\"complex64\"===a)throw new Error(\"Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).\");if(!(0,r.isTypedArray)(s)&&!Array.isArray(s)&&\"number\"!=typeof s&&\"boolean\"!=typeof s&&\"string\"!=typeof s)throw new Error(\"values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray\");if(null!=o){(0,r.assertNonNegativeIntegerDimensions)(o);const e=(0,r.sizeFromShape)(o),s=(0,r.sizeFromShape)(t);(0,r.assert)(e===s,()=>`Based on the provided shape, [${o}], the tensor should have `+`${e} values but has ${s}`);for(let a=0;a<t.length;++a){const e=t[a],s=a!==t.length-1||e!==(0,r.sizeFromShape)(o.slice(a));(0,r.assert)(t[a]===o[a]||!s,()=>\"Error creating a new Tensor. Inferred shape \"+`(${t}) does not match the provided `+`shape (${o}). `)}}return(0,r.isTypedArray)(s)||Array.isArray(s)||(s=[s]),o=o||t,s=\"string\"!==a?(0,r.toTypedArray)(s,a):(0,r.flatten)(s,[],!0),e.ENGINE.makeTensor(s,o,a)}"},"sourceMaps":null,"error":null,"hash":"cb5f4679e6f05c1d9fccf2bfc9e066e3","cacheData":{"env":{}}}