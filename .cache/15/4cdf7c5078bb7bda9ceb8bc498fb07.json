{"id":"MdGB","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":19,"column":26},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/file_chunk_iterator.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"./byte_chunk_iterator","loc":{"line":20,"column":34},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/file_chunk_iterator.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/byte_chunk_iterator.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.FileChunkIterator=void 0;var e=require(\"@tensorflow/tfjs-core\"),t=require(\"./byte_chunk_iterator\");class r extends t.ByteChunkIterator{constructor(t,r={}){super(),this.file=t,this.options=r,e.util.assert(t instanceof Uint8Array||!!(0,e.env)().get(\"IS_BROWSER\")&&(t instanceof File||t instanceof Blob),()=>\"FileChunkIterator only supports File, Blob and Uint8Array right now.\"),this.offset=r.offset||0,this.chunkSize=r.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,r)));else{const i=new FileReader;i.onload=(r=>{let n=i.result;if(n instanceof ArrayBuffer&&(n=new Uint8Array(n)),!(n instanceof Uint8Array))return t(new TypeError(\"FileReader returned unknown type.\"));e(n)}),i.onabort=(e=>t(new Error(\"Aborted\"))),i.onerror=(e=>t(new Error(e.type)));const n=this.file.slice(this.offset,r);i.readAsArrayBuffer(n)}this.offset=r});return{value:await e,done:!1}}}exports.FileChunkIterator=r;"},"sourceMaps":null,"error":null,"hash":"5d437449d4b31fa4b8945a317b8ba7a2","cacheData":{"env":{}}}