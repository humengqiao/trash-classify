{"id":"dCKU","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/reduce_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/reduce_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ReduceProgram=void 0;class n{constructor(n,e){this.variableNames=[\"x\"];const{windowSize:a,batchSize:l,inSize:t,outSize:i}=n;this.outputShape=[l,i];let u=\"0.0\",o=\"\";\"prod\"===e?u=\"1.0\":\"min\"===e?(u=\"1.0 / 1e-20\",o=\"min\"):\"max\"===e&&(u=\"-1.0 / 1e-20\",o=\"max\");let d=`${e}(${e}(${e}(`+\"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\";\"sum\"===e?d=\"sumValue\":\"prod\"===e?d=\"prodValue\":\"all\"===e?d=\"allValue\":\"any\"===e&&(d=\"anyValue\");const s=4*Math.floor(a/4),V=a%4;let c=`\\n      if (${\"sum\"===e}) {\\n        sumValue += dot(values, ones);\\n      } else if (${\"prod\"===e}) {\\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\\n        prodValue *= tmp[0] * tmp[1];\\n      } else {\\n        minMaxValue = ${o}(values, minMaxValue);\\n      }\\n    `,r=\"vec4\";\"all\"===e?(u=\"1.0\",c=\"\\n        bool reducedAllValue = all(values);\\n        float floatedReducedAllValue = float(reducedAllValue);\\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\\n      \",r=\"bvec4\"):\"any\"===e&&(u=\"0.0\",c=\"\\n        bool reducedAnyValue = any(values);\\n        float floatedReducedAnyValue = float(reducedAnyValue);\\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\\n      \",r=\"bvec4\");let f=\"\";t%a>0&&(f=`\\n        if (inIdx < 0 || inIdx >= ${t}) {\\n          return initializationValue;\\n        }\\n      `),this.userCode=`\\n      const float initializationValue = ${u};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        ${f}\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${a};\\n\\n        vec4 minMaxValue = vec4(${u});\\n        float prodValue = 1.0;\\n        float sumValue = 0.0;\\n        float allValue = 1.0;\\n        float anyValue = 0.0;\\n\\n        for (int i = 0; i < ${s}; i += 4) {\\n          int inIdx = inOffset + i;\\n          ${r} values = ${r}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          ${c}\\n        }\\n\\n        int inIdx = inOffset + ${s};\\n        if (${1===V}) {\\n          ${r} values = ${r}(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          ${c}\\n        } else if (${2===V}) {\\n          ${r} values = ${r}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          ${c}\\n        } else if (${3===V}) {\\n          ${r} values = ${r}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          ${c}\\n        }\\n        setOutput(${d});\\n      }\\n    `}}exports.ReduceProgram=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":0}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":13}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":20}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":35}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":43}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":56}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":57}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":64}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":68}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":76}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":95}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":97}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":103}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":105}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":117}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":1,"column":119}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":122}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":127}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":141}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":142}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":147}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":153}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":11},"generated":{"line":1,"column":164}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":166}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":23},"generated":{"line":1,"column":176}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":178}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":34},"generated":{"line":1,"column":185}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":1,"column":187}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":42},"generated":{"line":1,"column":195}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":29,"column":53},"generated":{"line":1,"column":198}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":200}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":205}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":1,"column":217}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":1,"column":218}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":220}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":32,"column":8},"generated":{"line":1,"column":223}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":32,"column":8},"generated":{"line":1,"column":227}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":32,"column":30},"generated":{"line":1,"column":229}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":235}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":33,"column":20},"generated":{"line":1,"column":237}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":35,"column":23},"generated":{"line":1,"column":240}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":1,"column":249}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":1,"column":251}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":36,"column":28},"generated":{"line":1,"column":253}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":37,"column":30},"generated":{"line":1,"column":259}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":37,"column":15},"generated":{"line":1,"column":267}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":1,"column":270}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":272}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":40,"column":6},"generated":{"line":1,"column":286}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":40,"column":18},"generated":{"line":1,"column":288}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":41,"column":30},"generated":{"line":1,"column":295}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":41,"column":15},"generated":{"line":1,"column":303}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":1,"column":307}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":43,"column":28},"generated":{"line":1,"column":309}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":1,"column":324}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":44,"column":18},"generated":{"line":1,"column":326}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":1,"column":333}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":1,"column":337}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":47,"column":25},"generated":{"line":1,"column":342}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":47,"column":39},"generated":{"line":1,"column":347}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":47,"column":53},"generated":{"line":1,"column":352}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":1,"column":357}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":50,"column":23},"generated":{"line":1,"column":425}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":1,"column":433}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":1,"column":435}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":51,"column":20},"generated":{"line":1,"column":437}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":1,"column":448}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":52,"column":15},"generated":{"line":1,"column":457}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":459}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":53,"column":20},"generated":{"line":1,"column":461}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":1,"column":473}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":54,"column":15},"generated":{"line":1,"column":481}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":1,"column":483}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":55,"column":20},"generated":{"line":1,"column":485}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":56,"column":30},"generated":{"line":1,"column":496}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":1,"column":504}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":1,"column":508}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":57,"column":20},"generated":{"line":1,"column":510}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":60,"column":10},"generated":{"line":1,"column":522}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":60,"column":10},"generated":{"line":1,"column":528}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":60,"column":63},"generated":{"line":1,"column":530}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":60,"column":34},"generated":{"line":1,"column":532}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":60,"column":39},"generated":{"line":1,"column":537}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":60,"column":45},"generated":{"line":1,"column":543}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":60,"column":58},"generated":{"line":1,"column":545}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":61,"column":10},"generated":{"line":1,"column":548}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":61,"column":36},"generated":{"line":1,"column":550}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":61,"column":49},"generated":{"line":1,"column":552}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":554}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":558}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":64,"column":27},"generated":{"line":1,"column":575}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":64,"column":12},"generated":{"line":1,"column":583}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":66,"column":34},"generated":{"line":1,"column":649}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":66,"column":19},"generated":{"line":1,"column":658}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":70,"column":24},"generated":{"line":1,"column":821}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":74,"column":8},"generated":{"line":1,"column":862}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":1,"column":864}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":76,"column":23},"generated":{"line":1,"column":871}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":76,"column":8},"generated":{"line":1,"column":879}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":77,"column":6},"generated":{"line":1,"column":882}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":77,"column":28},"generated":{"line":1,"column":884}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":1,"column":890}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":78,"column":22},"generated":{"line":1,"column":892}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":1,"column":1089}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":83,"column":16},"generated":{"line":1,"column":1091}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":84,"column":30},"generated":{"line":1,"column":1100}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":84,"column":15},"generated":{"line":1,"column":1108}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":85,"column":6},"generated":{"line":1,"column":1112}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":85,"column":28},"generated":{"line":1,"column":1114}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":1,"column":1120}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":86,"column":22},"generated":{"line":1,"column":1122}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":91,"column":6},"generated":{"line":1,"column":1319}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":91,"column":16},"generated":{"line":1,"column":1321}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":1,"column":1330}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":1,"column":1334}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":94,"column":27},"generated":{"line":1,"column":1336}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":1,"column":1339}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":95,"column":17},"generated":{"line":1,"column":1341}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":95,"column":30},"generated":{"line":1,"column":1343}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":96,"column":6},"generated":{"line":1,"column":1347}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":97,"column":36},"generated":{"line":1,"column":1388}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":1,"column":1454}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":1,"column":1459}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":103,"column":42},"generated":{"line":1,"column":1513}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":107,"column":10},"generated":{"line":1,"column":1627}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":115,"column":34},"generated":{"line":1,"column":1841}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":117,"column":34},"generated":{"line":1,"column":1882}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":123,"column":30},"generated":{"line":1,"column":2045}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":125,"column":12},"generated":{"line":1,"column":2109}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":125,"column":32},"generated":{"line":1,"column":2123}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":132,"column":12},"generated":{"line":1,"column":2315}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":135,"column":33},"generated":{"line":1,"column":2365}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":136,"column":42},"generated":{"line":1,"column":2384}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":136,"column":14},"generated":{"line":1,"column":2388}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":137,"column":12},"generated":{"line":1,"column":2407}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":137,"column":32},"generated":{"line":1,"column":2421}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":144,"column":12},"generated":{"line":1,"column":2592}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":145,"column":49},"generated":{"line":1,"column":2617}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":145,"column":21},"generated":{"line":1,"column":2621}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":146,"column":12},"generated":{"line":1,"column":2640}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":146,"column":32},"generated":{"line":1,"column":2654}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":153,"column":12},"generated":{"line":1,"column":2832}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":154,"column":49},"generated":{"line":1,"column":2857}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":154,"column":21},"generated":{"line":1,"column":2861}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":155,"column":12},"generated":{"line":1,"column":2880}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":155,"column":32},"generated":{"line":1,"column":2894}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":162,"column":12},"generated":{"line":1,"column":3079}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":164,"column":20},"generated":{"line":1,"column":3114}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":3136}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":3144}},{"source":"../src/reduce_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":1,"column":3158}}],"sources":{"../src/reduce_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ReduceProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      reduceInfo: backend_util.ReduceInfo,\n      reduceType: 'all'|'any'|'max'|'min'|'sum'|'prod') {\n    const {windowSize, batchSize, inSize, outSize} = reduceInfo;\n    this.outputShape = [batchSize, outSize];\n\n    let initializationValue = '0.0';\n    let compareOp = ``;\n\n    if (reduceType === 'prod') {\n      initializationValue = '1.0';\n    } else if (reduceType === 'min') {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '1.0 / 1e-20';\n      compareOp = `min`;\n    } else if (reduceType === 'max') {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n      compareOp = `max`;\n    }\n\n    let returnValue = `${reduceType}(${reduceType}(${reduceType}(` +\n        'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n\n    if (reduceType === 'sum') {\n      returnValue = `sumValue`;\n    } else if (reduceType === 'prod') {\n      returnValue = `prodValue`;\n    } else if (reduceType === 'all') {\n      returnValue = `allValue`;\n    } else if (reduceType === 'any') {\n      returnValue = `anyValue`;\n    }\n\n    const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n    const windowSizeVec4Remainder = windowSize % 4;\n\n    let updateSnippet = `\n      if (${reduceType === 'sum'}) {\n        sumValue += dot(values, ones);\n      } else if (${reduceType === 'prod'}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n\n    let vecType = `vec4`;\n\n    if (reduceType === 'all') {\n      initializationValue = '1.0';\n      updateSnippet = `\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      `;\n      vecType = `bvec4`;\n    } else if (reduceType === 'any') {\n      initializationValue = '0.0';\n      updateSnippet = `\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      `;\n      vecType = `bvec4`;\n    }\n\n    let checkOutOfBounds = '';\n    if (inSize % windowSize > 0) {\n      checkOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return initializationValue;\n        }\n      `;\n    }\n    this.userCode = `\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${checkOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        vec4 minMaxValue = vec4(${initializationValue});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${updateSnippet}\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"e9da1e1ce002e8da5aa11b2756f5a267","cacheData":{"env":{}}}