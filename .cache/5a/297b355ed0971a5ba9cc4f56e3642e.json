{"id":"DOKZ","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/rand.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/src/ops/rand.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../engine","loc":{"line":17,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/rand.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../util","loc":{"line":18,"column":30},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/rand.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/util.js"},{"name":"./operation","loc":{"line":19,"column":19},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/rand.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.rand=void 0;var e=require(\"../engine\"),r=require(\"../util\"),n=require(\"./operation\");function t(n,t,o){const i=(0,r.sizeFromShape)(n);let a=null;if(null==o||\"float32\"===o)a=new Float32Array(i);else if(\"int32\"===o)a=new Int32Array(i);else{if(\"bool\"!==o)throw new Error(`Unknown data type ${o}`);a=new Uint8Array(i)}for(let e=0;e<i;e++)a[e]=t();return e.ENGINE.makeTensor(a,n,o)}const o=(0,n.op)({rand_:t});exports.rand=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":0}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":13}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":20}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":35}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":43}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":56}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":57}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":64}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":68}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":76}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":86}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":88}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":92}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":94}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":102}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":115}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":117}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":125}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":136}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":138}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":146}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":1,"column":161}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":1,"column":170}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":172}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":35,"column":24},"generated":{"line":1,"column":174}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":176}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":37,"column":8},"generated":{"line":1,"column":179}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":37,"column":8},"generated":{"line":1,"column":185}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":37,"column":15},"generated":{"line":1,"column":188}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":37,"column":29},"generated":{"line":1,"column":190}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":37,"column":29},"generated":{"line":1,"column":192}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":37,"column":29},"generated":{"line":1,"column":207}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":1,"column":210}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":1,"column":214}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":38,"column":15},"generated":{"line":1,"column":216}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":1,"column":221}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":39,"column":15},"generated":{"line":1,"column":224}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":1,"column":230}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":39,"column":33},"generated":{"line":1,"column":233}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":39,"column":23},"generated":{"line":1,"column":245}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":1,"column":247}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":1,"column":249}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":40,"column":17},"generated":{"line":1,"column":253}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":40,"column":30},"generated":{"line":1,"column":266}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":1,"column":274}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":41,"column":23},"generated":{"line":1,"column":277}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":41,"column":13},"generated":{"line":1,"column":287}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":1,"column":289}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":1,"column":291}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":1,"column":295}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":42,"column":28},"generated":{"line":1,"column":306}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":1,"column":313}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":1,"column":314}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":43,"column":23},"generated":{"line":1,"column":317}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":43,"column":13},"generated":{"line":1,"column":326}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":1,"column":328}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":1,"column":334}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":1,"column":338}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":46,"column":41},"generated":{"line":1,"column":365}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":1,"column":370}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":44,"column":13},"generated":{"line":1,"column":372}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":44,"column":17},"generated":{"line":1,"column":376}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":44,"column":28},"generated":{"line":1,"column":387}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":48,"column":7},"generated":{"line":1,"column":390}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":48,"column":7},"generated":{"line":1,"column":394}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":48,"column":11},"generated":{"line":1,"column":398}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":48,"column":15},"generated":{"line":1,"column":400}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":48,"column":18},"generated":{"line":1,"column":402}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":48,"column":22},"generated":{"line":1,"column":404}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":48,"column":28},"generated":{"line":1,"column":406}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":1,"column":410}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":49,"column":11},"generated":{"line":1,"column":412}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":1,"column":415}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":1,"column":419}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":51,"column":9},"generated":{"line":1,"column":426}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":51,"column":16},"generated":{"line":1,"column":428}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":51,"column":16},"generated":{"line":1,"column":435}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":51,"column":27},"generated":{"line":1,"column":446}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":51,"column":35},"generated":{"line":1,"column":448}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":51,"column":42},"generated":{"line":1,"column":450}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":453}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":13},"generated":{"line":1,"column":459}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":20},"generated":{"line":1,"column":462}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":23},"generated":{"line":1,"column":464}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":23},"generated":{"line":1,"column":466}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":23},"generated":{"line":1,"column":470}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":24},"generated":{"line":1,"column":471}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":24},"generated":{"line":1,"column":477}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":481}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":489}},{"source":"../../src/ops/rand.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":494}}],"sources":{"../../src/ops/rand.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\nimport {sizeFromShape} from '../util';\n\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a random number generator\n * function defined by the user.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param randFunction A random number generator function which is called\n * for each element in the output tensor.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\nfunction rand_<R extends Rank>(\n    shape: ShapeMap[R], randFunction: () => number,\n    dtype?: DataType): Tensor<R> {\n  const size = sizeFromShape(shape);\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  for (let i = 0; i < size; i++) {\n    values[i] = randFunction();\n  }\n  return ENGINE.makeTensor(values, shape, dtype) as Tensor<R>;\n}\n\nexport const rand = op({rand_});\n"},"lineCount":null}},"error":null,"hash":"333fb11284300451de5fc5dcdc6f7f73","cacheData":{"env":{}}}