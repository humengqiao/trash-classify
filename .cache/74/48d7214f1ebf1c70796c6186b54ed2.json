{"id":"xEXF","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":13,"column":68},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../activations","loc":{"line":14,"column":51},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/activations.js"},{"name":"../backend/tfjs_backend","loc":{"line":15,"column":19},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/backend/tfjs_backend.js"},{"name":"../constraints","loc":{"line":16,"column":51},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/constraints.js"},{"name":"../engine/topology","loc":{"line":17,"column":33},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/engine/topology.js"},{"name":"../errors","loc":{"line":18,"column":27},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/errors.js"},{"name":"../initializers","loc":{"line":19,"column":53},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/initializers.js"},{"name":"../regularizers","loc":{"line":20,"column":53},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/regularizers.js"},{"name":"../utils/generic_utils","loc":{"line":21,"column":66},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/utils/generic_utils.js"},{"name":"../utils/math_utils","loc":{"line":22,"column":33},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/utils/math_utils.js"},{"name":"../utils/types_utils","loc":{"line":23,"column":56},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/layers/core.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/utils/types_utils.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Masking=exports.Permute=exports.Reshape=exports.RepeatVector=exports.Activation=exports.Flatten=exports.Dense=exports.SpatialDropout1D=exports.Dropout=void 0;var t=require(\"@tensorflow/tfjs-core\"),e=require(\"../activations\"),i=p(require(\"../backend/tfjs_backend\")),s=require(\"../constraints\"),r=require(\"../engine/topology\"),n=require(\"../errors\"),a=require(\"../initializers\"),o=require(\"../regularizers\"),l=require(\"../utils/generic_utils\"),u=require(\"../utils/math_utils\"),h=require(\"../utils/types_utils\");function c(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function p(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!=typeof t&&\"function\"!=typeof t)return{default:t};var e=c();if(e&&e.has(t))return e.get(t);var i={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)){var n=s?Object.getOwnPropertyDescriptor(t,r):null;n&&(n.get||n.set)?Object.defineProperty(i,r,n):i[r]=t[r]}return i.default=t,e&&e.set(t,i),i}class g extends r.Layer{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,i=[];for(let s=0;s<this.noiseShape.length;++s)i.push(null==this.noiseShape[s]?e[s]:this.noiseShape[s]);return i}call(e,s){return(0,t.tidy)(()=>{this.invokeCallHook(e,s);const t=(0,h.getExactlyOneTensor)(e);if(0<this.rate&&this.rate<1){const e=null!=s.training&&s.training,r=this.getNoiseShape(t);return i.inTrainPhase(()=>i.dropout(t,this.rate,r,this.seed),()=>t,e)}return e})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}exports.Dropout=g,g.className=\"Dropout\",t.serialization.registerClass(g);class d extends g{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}exports.SpatialDropout1D=d,d.className=\"SpatialDropout1D\",t.serialization.registerClass(d);class m extends r.Layer{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER=\"glorotNormal\",this.DEFAULT_BIAS_INITIALIZER=\"zeros\",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,(0,l.assertPositiveInteger)(this.units,\"units\"),this.activation=(0,e.getActivation)(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=(0,a.getInitializer)(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=(0,a.getInitializer)(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=(0,s.getConstraint)(t.kernelConstraint),this.biasConstraint=(0,s.getConstraint)(t.biasConstraint),this.kernelRegularizer=(0,o.getRegularizer)(t.kernelRegularizer),this.biasRegularizer=(0,o.getRegularizer)(t.biasRegularizer),this.activityRegularizer=(0,o.getRegularizer)(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=(0,h.getExactlyOneShape)(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight(\"kernel\",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight(\"bias\",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=(0,h.getExactlyOneShape)(t)).slice();return e[e.length-1]=this.units,e}call(e,s){return(0,t.tidy)(()=>{this.invokeCallHook(e,s);const t=(0,h.getExactlyOneTensor)(e),r=(0,l.mapActivationToFusedKernel)(this.activation.getClassName());let n;return null!=r?n=i.dot(t,this.kernel.read(),r,this.bias?this.bias.read():null):(n=i.dot(t,this.kernel.read()),null!=this.bias&&(n=i.biasAdd(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n})}getConfig(){const t={units:this.units,activation:(0,e.serializeActivation)(this.activation),useBias:this.useBias,kernelInitializer:(0,a.serializeInitializer)(this.kernelInitializer),biasInitializer:(0,a.serializeInitializer)(this.biasInitializer),kernelRegularizer:(0,o.serializeRegularizer)(this.kernelRegularizer),biasRegularizer:(0,o.serializeRegularizer)(this.biasRegularizer),activityRegularizer:(0,o.serializeRegularizer)(this.activityRegularizer),kernelConstraint:(0,s.serializeConstraint)(this.kernelConstraint),biasConstraint:(0,s.serializeConstraint)(this.biasConstraint)},i=super.getConfig();return Object.assign(t,i),t}}exports.Dense=m,m.className=\"Dense\",t.serialization.registerClass(m);class f extends r.Layer{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=(0,h.getExactlyOneShape)(t);for(const e of t.slice(1))if(null==e)throw new n.ValueError('The shape of the input to \"Flatten\" is not fully defined '+`(got ${t.slice(1)}). Make sure to pass a complete `+'\"input_shape\" or \"batch_input_shape\" argument to the first layer in your model.');return[t[0],(0,u.arrayProd)(t,1)]}call(e,s){return(0,t.tidy)(()=>{this.invokeCallHook(e,s);let t=(0,h.getExactlyOneTensor)(e);if(\"channelsFirst\"===this.dataFormat&&t.rank>1){const e=[0];for(let i=2;i<t.rank;++i)e.push(i);e.push(1),t=t.transpose(e)}return i.batchFlatten(t)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}exports.Flatten=f,f.className=\"Flatten\",t.serialization.registerClass(f);class k extends r.Layer{constructor(t){super(t),this.supportsMasking=!0,this.activation=(0,e.getActivation)(t.activation)}call(e,i){return(0,t.tidy)(()=>{this.invokeCallHook(e,i);const t=(0,h.getExactlyOneTensor)(e);return this.activation.apply(t)})}getConfig(){const t={activation:(0,e.serializeActivation)(this.activation)},i=super.getConfig();return Object.assign(t,i),t}}exports.Activation=k,k.className=\"Activation\",t.serialization.registerClass(k);class y extends r.Layer{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(e,s){return(0,t.tidy)(()=>(e=(0,h.getExactlyOneTensor)(e),i.repeat(e,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}exports.RepeatVector=y,y.className=\"RepeatVector\",t.serialization.registerClass(y);class z extends r.Layer{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const i=\"Total size of new array must be unchanged.\",s=e.slice();let r=1,a=null;for(let l=0;l<s.length;++l){const t=s[l];if(this.isUnknown(t)){if(null!==a)throw new n.ValueError(\"Can only specifiy one unknown dimension.\");a=l}else r*=t}const o=(0,u.arrayProd)(t);if(null!==a){if(0===r||o%r!=0)throw new n.ValueError(i);s[a]=o/r}else if(o!==r)throw new n.ValueError(i);return s}computeOutputShape(t){let e=!1;for(let i=0;i<t.length;++i)if(this.isUnknown(t[i])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(e,i){return(0,t.tidy)(()=>{this.invokeCallHook(e,i);const t=(0,h.getExactlyOneTensor)(e),s=t.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return t.reshape(r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}exports.Reshape=z,z.className=\"Reshape\",t.serialization.registerClass(z);class b extends r.Layer{constructor(e){if(super(e),null==e.dims)throw new Error(\"Required configuration field `dims` is missing during Permute constructor call.\");if(!Array.isArray(e.dims))throw new Error(\"Permute constructor requires `dims` to be an Array, but received \"+`${e.dims} instead.`);const i=(0,u.range)(1,e.dims.length+1);if(!t.util.arraysEqual(e.dims.slice().sort(),i))throw new Error(\"Invalid permutation `dims`: \"+JSON.stringify(e.dims)+\" `dims` must contain consecutive integers starting from 1.\");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new r.InputSpec({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=(0,h.getExactlyOneShape)(t)).slice();return this.dims.forEach((i,s)=>{e[s+1]=t[i]}),e}call(e,i){return(0,t.transpose)((0,h.getExactlyOneTensor)(e),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}exports.Permute=b,b.className=\"Permute\",t.serialization.registerClass(b);class S extends r.Layer{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(e,i){const s=(0,h.getExactlyOneTensor)(e);return(0,t.any)((0,t.notEqual)(s,this.maskValue),-1)}call(e,i){return(0,t.tidy)(()=>{this.invokeCallHook(e,i);const s=(0,h.getExactlyOneTensor)(e),r=(0,t.any)((0,t.notEqual)(s,this.maskValue),-1,!0);return s.mul(r.asType(s.dtype))})}}exports.Masking=S,S.className=\"Masking\",t.serialization.registerClass(S);"},"sourceMaps":null,"error":null,"hash":"c3b2ec9530c48493593a576cd0d2a5a1","cacheData":{"env":{}}}