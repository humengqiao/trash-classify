{"id":"cWUh","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/onehot_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/onehot_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.OneHotProgram=void 0;class o{constructor(o,t,e,s){this.variableNames=[\"indices\"],this.outputShape=[o,t],this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(${s}), float(${e}),\\n                      float(index == coords.y)));\\n      }\\n    `}}exports.OneHotProgram=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":0}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":13}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":20}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":35}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":43}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":56}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":57}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":64}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":68}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":76}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":95}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":1,"column":97}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":103}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":1,"column":105}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":1,"column":117}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":1,"column":119}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":29,"column":41},"generated":{"line":1,"column":121}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":29,"column":58},"generated":{"line":1,"column":123}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":1,"column":126}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":1,"column":131}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":1,"column":145}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":21,"column":19},"generated":{"line":1,"column":146}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":157}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":162}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":1,"column":174}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":1,"column":175}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":30,"column":36},"generated":{"line":1,"column":177}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":1,"column":180}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":1,"column":185}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":36,"column":30},"generated":{"line":1,"column":341}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":36,"column":50},"generated":{"line":1,"column":354}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":427}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":435}},{"source":"../src/onehot_gpu.ts","name":null,"original":{"line":20,"column":26},"generated":{"line":1,"column":449}}],"sources":{"../src/onehot_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class OneHotProgram implements GPGPUProgram {\n  variableNames = ['indices'];\n  outputShape: number[];\n  userCode: string;\n\n  // Caching uniform location for speed.\n  seedLoc: WebGLUniformLocation;\n\n  constructor(\n      numIndices: number, depth: number, onValue: number, offValue: number) {\n    this.outputShape = [numIndices, depth];\n\n    this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${offValue}), float(${onValue}),\n                      float(index == coords.y)));\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"075ad51c73c790364e149d6da70adeab","cacheData":{"env":{}}}