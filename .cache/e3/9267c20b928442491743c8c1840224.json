{"id":"Nydg","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/norm.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/src/public/chained_ops/norm.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../ops/ops","loc":{"line":18,"column":21},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/norm.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/ops.js"},{"name":"../../tensor","loc":{"line":19,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/norm.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor.js"}],"generated":{"js":"\"use strict\";var r=require(\"../../ops/ops\"),o=require(\"../../tensor\");o.Tensor.prototype.norm=function(o,e,s){return this.throwIfDisposed(),(0,r.norm)(this,o,e,s)};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":17}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":19}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":27}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":44}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":46}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":54}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":1,"column":70}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":31,"column":7},"generated":{"line":1,"column":72}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":31,"column":7},"generated":{"line":1,"column":79}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":1,"column":89}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":1,"column":94}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":103}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":32,"column":36},"generated":{"line":1,"column":105}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":1,"column":107}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":1,"column":110}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":117}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":122}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":1,"column":141}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":1,"column":143}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":1,"column":145}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":1,"column":151}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":35,"column":20},"generated":{"line":1,"column":156}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":35,"column":25},"generated":{"line":1,"column":158}},{"source":"../../../src/public/chained_ops/norm.ts","name":null,"original":{"line":35,"column":31},"generated":{"line":1,"column":160}}],"sources":{"../../../src/public/chained_ops/norm.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// TODO update import path once op is modularized.\nimport {norm} from '../../ops/ops';\nimport {Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    norm<T extends Tensor>(\n        ord?: number|'euclidean'|'fro', axis?: number|number[],\n        keepDims?: boolean): Tensor;\n  }\n}\n\nTensor.prototype.norm = function<T extends Tensor>(\n    ord?: number|'euclidean'|'fro', axis?: number|number[],\n    keepDims?: boolean) {\n  this.throwIfDisposed();\n  return norm(this, ord, axis, keepDims) as T;\n};\n"},"lineCount":null}},"error":null,"hash":"de7c81271cb50530de4cfab83739e4a5","cacheData":{"env":{}}}