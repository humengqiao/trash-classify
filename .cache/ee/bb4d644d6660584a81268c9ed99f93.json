{"id":"E2Vg","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609564004117},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":57},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2D.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../cpu_util","loc":{"line":18,"column":33},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Conv2D.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.conv2D=o,exports.conv2DConfig=void 0;var t=require(\"@tensorflow/tfjs-core\"),e=require(\"../cpu_util\");function o(o){const{inputs:n,backend:s,attrs:i}=o,{x:a,filter:r}=n,{strides:d,pad:c,dataFormat:l,dilations:u,dimRoundingMode:f}=i;(0,e.assertNotComplex)([a,r],\"conv2d\");const p=t.backend_util.convertConv2DDataFormat(l),h=t.backend_util.computeConv2DInfo(a.shape,r.shape,d,u,c,f,!1,p),v=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,C=h.dilationWidth,k=h.padInfo.left,D=h.padInfo.top,b=\"channelsLast\"===h.dataFormat,x=new t.TensorBuffer(h.outShape,a.dtype),I=t.util.computeStrides(a.shape),H=t.util.computeStrides(r.shape),W=I[0],_=b?I[1]:I[2],F=b?I[2]:1,S=b?1:I[1],y=x.strides[0],N=b?x.strides[1]:x.strides[2],j=b?x.strides[2]:1,q=b?1:x.strides[1],w=s.data.get(a.dataId).values,M=s.data.get(r.dataId).values,T=x.values;for(let t=0;t<h.batchSize;++t){const e=t*W,o=t*y;for(let t=0;t<h.outHeight;++t){const n=o+t*N,s=t*h.strideHeight-D;for(let t=0;t<v;++t){const o=s+t*g;if(o<0||o>=h.inHeight)continue;const i=t*H[0],a=e+o*_;for(let t=0;t<h.outWidth;++t){const e=n+t*j,o=t*h.strideWidth-k;for(let t=0;t<m;++t){const n=o+t*C;if(n<0||n>=h.inWidth)continue;const s=a+n*F;let r=i+t*H[1];for(let t=0;t<h.inChannels;++t){const o=w[s+t*S];for(let t=0;t<h.outChannels;++t)T[e+t*q]+=o*M[r+t];r+=h.outChannels}}}}}}return s.makeTensorInfo(x.shape,x.dtype,T)}const n={kernelName:t.Conv2D,backendName:\"cpu\",kernelFunc:o};exports.conv2DConfig=n;"},"sourceMaps":null,"error":null,"hash":"b8f1c39b2fb2c886e8b82ab41e4d4c5a","cacheData":{"env":{}}}