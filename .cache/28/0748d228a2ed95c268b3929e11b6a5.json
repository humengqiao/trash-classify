{"id":"MlTX","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mirror_pad.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/src/public/chained_ops/mirror_pad.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../ops/mirror_pad","loc":{"line":17,"column":26},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mirror_pad.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js"},{"name":"../../tensor","loc":{"line":18,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mirror_pad.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor.js"}],"generated":{"js":"\"use strict\";var r=require(\"../../ops/mirror_pad\"),o=require(\"../../tensor\");o.Tensor.prototype.mirrorPad=function(o,e){return this.throwIfDisposed(),(0,r.mirrorPad)(this,o,e)};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":17}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":19}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":27}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":51}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":53}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":61}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":77}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":1,"column":79}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":1,"column":86}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":1,"column":96}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":29,"column":29},"generated":{"line":1,"column":106}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":1,"column":115}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":1,"column":117}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":1,"column":120}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":32,"column":7},"generated":{"line":1,"column":127}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":32,"column":7},"generated":{"line":1,"column":132}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":1,"column":151}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":33,"column":19},"generated":{"line":1,"column":153}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":33,"column":19},"generated":{"line":1,"column":155}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":33,"column":19},"generated":{"line":1,"column":166}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":33,"column":25},"generated":{"line":1,"column":171}},{"source":"../../../src/public/chained_ops/mirror_pad.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":1,"column":173}}],"sources":{"../../../src/public/chained_ops/mirror_pad.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {mirrorPad} from '../../ops/mirror_pad';\nimport {Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    mirrorPad<T extends Tensor>(\n        paddings: Array<[number, number]>, mode: 'reflect'|'symmetric'): T;\n  }\n}\n\nTensor.prototype.mirrorPad = function<T extends Tensor>(\n    this: T, paddings: Array<[number, number]>,\n    mode: 'reflect'|'symmetric'): T {\n  this.throwIfDisposed();\n  return mirrorPad(this, paddings, mode);\n};\n"},"lineCount":null}},"error":null,"hash":"b83d94a2d940d9c5cf382a7e75c990a7","cacheData":{"env":{}}}