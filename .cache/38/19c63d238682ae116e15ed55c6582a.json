{"id":"w9qS","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":13,"column":44},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/engine/executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../errors","loc":{"line":14,"column":27},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/engine/executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/errors.js"},{"name":"../utils/generic_utils","loc":{"line":15,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/engine/executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/utils/generic_utils.js"},{"name":"./input_layer","loc":{"line":16,"column":27},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/engine/executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/engine/input_layer.js"},{"name":"./topology","loc":{"line":17,"column":31},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/engine/executor.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/engine/topology.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.execute=l,exports.getTopologicalSortAndRecipientCountsForOneFetch=h,exports.FeedDict=void 0;var e=require(\"@tensorflow/tfjs-core\"),n=require(\"../errors\"),t=require(\"../utils/generic_utils\"),s=require(\"./input_layer\"),o=require(\"./topology\");function i(t,s){if(null==t.dtype||t.dtype===s.dtype)return s;try{return(0,e.cast)(s,t.dtype)}catch(o){throw new n.ValueError(`The dtype of the feed (${s.dtype}) can not be cast to the dtype `+`of the key '${t.name}' (${t.dtype}).`)}}class r{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof r)for(const n in e.id2Value)this.id2Value[n]=e.id2Value[n],n in e.id2Mask&&(this.id2Mask[n]=e.id2Mask[n]);else{if(null==e)return;for(const n of e)this.add(n.key,n.value)}}add(e,t,s){if(null!=this.id2Value[e.id])throw new n.ValueError(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=i(e,t),this.name2Id[e.name]=e.id,null!=s&&(this.id2Mask[e.id]=s),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof o.SymbolicTensor){if(null==this.id2Value[e.id])throw new n.ValueError(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new n.ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof o.SymbolicTensor){if(null==this.id2Value[e.id])throw new n.ValueError(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new n.ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,e.dispose)(this.id2Mask)}}exports.FeedDict=r;const a={},u={};function l(n,o,i,l){const c=null!=i&&i.training,h=Array.isArray(n),p=h?n:[n],m=p.map(e=>e.name),y=[],g=o.names();for(const e of m)-1!==g.indexOf(e)?y.push(o.getValue(e)):y.push(null);null!=l&&(l.maxNumTensors=-1/0,l.minNumTensors=1/0);const k=m.join(\",\")+\"|\"+o.names().join(\",\");let V,M;if(null==a[k]){const e=d(p,o);V=e.sorted,M=e.recipientCounts,a[k]=V,u[k]=M}V=a[k],M={},c||Object.assign(M,u[k]);const w=new r(o);for(let r=0;r<V.length;++r){if(null!=l){const n=(0,e.memory)().numTensors;n>l.maxNumTensors&&(l.maxNumTensors=n),n<l.minNumTensors&&(l.minNumTensors=n)}const n=V[r],a=n.sourceLayer;if(a instanceof s.InputLayer)continue;const u=[],d=[],h=[];let p=!1;for(const e of n.inputs){const n=w.getValue(e),t=w.getMask(e);u.push(n),d.push(t),null!=t&&(p=!0),c||(M[e.name]--,0!==M[e.name]||o.hasKey(e)||-1!==m.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||h.push(n))}p&&((i=i||{}).mask=d[0]);const g=(0,t.toList)(a.apply(u,i));let k=null;a.supportsMasking&&(k=a.computeMask(u,d));const x=f(n),T=Array.isArray(x)?x:[x];for(let e=0;e<T.length;++e){w.hasKey(T[e])||w.add(T[e],g[e],Array.isArray(k)?k[0]:k);const n=m.indexOf(T[e].name);-1!==n&&(y[n]=g[e])}c||(0,e.dispose)(h)}return w.disposeMasks(),h?y:y[0]}function d(n,t){e.util.assert(null!=n&&n.length>0,()=>\"Expected at least one fetch, got none\");let s=[],o={};if(1===n.length){const e=h(n[0],t);s=e.sorted,o=e.recipientMap}else{const e=new Set;for(const i of n){const{sorted:n,recipientMap:r}=h(i,t);for(const t of n)e.has(t.name)||(s.push(t),e.add(t.name));for(const e in r)null==o[e]&&(o[e]=new Set),r[e].forEach(n=>o[e].add(n))}}return{sorted:s,recipientCounts:c(o)}}function c(e){const n={};for(const t in e)n[t]=e[t].size;return n}function h(e,n){const t=new Set,s=[],o={};for(const a of n.names())t.add(a);const i=[],r=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(t.has(e.name)){i.pop();continue}const n=r[r.length-1]===i.length-1;if(0===e.inputs.length||n)i.pop(),s.push(e),t.add(e.name),n&&r.pop();else{r.push(i.length-1);for(const n of e.inputs)null==o[n.name]&&(o[n.name]=new Set),o[n.name].add(e.name),t.has(n.name)||i.push(n)}}return{sorted:s,recipientMap:o}}function f(e){let n;if(1===e.sourceLayer.inboundNodes.length)n=e.sourceLayer.output;else{let t=null;for(let n=0;n<e.sourceLayer.inboundNodes.length;++n)for(const s of e.sourceLayer.inboundNodes[n].outputTensors)if(s.id===e.id){t=n;break}n=e.sourceLayer.getOutputAt(t)}return n}"},"sourceMaps":null,"error":null,"hash":"21ed1f4dfde15dea64e863e34ed12018","cacheData":{"env":{}}}