{"id":"XHfa","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../flags","loc":{"line":17,"column":7},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/flags.js"},{"name":"../environment","loc":{"line":18,"column":20},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/environment.js"},{"name":"./io_utils","loc":{"line":19,"column":45},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js"},{"name":"./router_registry","loc":{"line":20,"column":33},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.deleteDatabase=d,exports.browserIndexedDB=h,exports.BrowserIndexedDBManager=exports.indexedDBRouter=exports.BrowserIndexedDB=void 0,require(\"../flags\");var e=require(\"../environment\"),o=require(\"./io_utils\"),r=require(\"./router_registry\");const t=\"tensorflowjs\",n=1,s=\"models_store\",c=\"model_info_store\";async function d(){const e=l();return new Promise((o,r)=>{const n=e.deleteDatabase(t);n.onsuccess=(()=>o()),n.onerror=(e=>r(e))})}function l(){if(!(0,e.env)().getBool(\"IS_BROWSER\"))throw new Error(\"Failed to obtain IndexedDB factory because the current environmentis not a web browser.\");const o=\"undefined\"==typeof window?self:window,r=o.indexedDB||o.mozIndexedDB||o.webkitIndexedDB||o.msIndexedDB||o.shimIndexedDB;if(null==r)throw new Error(\"The current browser does not appear to support IndexedDB.\");return r}function a(e){const o=e.result;o.createObjectStore(s,{keyPath:\"modelPath\"}),o.createObjectStore(c,{keyPath:\"modelPath\"})}class i{constructor(e){if(this.indexedDB=l(),null==e||!e)throw new Error(\"For IndexedDB, modelPath must not be null, undefined or empty.\");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error(\"BrowserLocalStorage.save() does not support saving model topology in binary formats yet.\");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,r){return new Promise((e,d)=>{const l=this.indexedDB.open(t,n);l.onupgradeneeded=(()=>a(l)),l.onsuccess=(()=>{const t=l.result;if(null==r){const o=t.transaction(s,\"readonly\"),r=o.objectStore(s).get(this.modelPath);r.onsuccess=(()=>{if(null==r.result)return t.close(),d(new Error(`Cannot find model with path '${this.modelPath}' `+\"in IndexedDB.\"));e(r.result.modelArtifacts)}),r.onerror=(e=>(t.close(),d(r.error))),o.oncomplete=(()=>t.close())}else{const n=(0,o.getModelArtifactsInfoForJSON)(r),l=t.transaction(c,\"readwrite\");let a=l.objectStore(c);const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:n});let u;i.onsuccess=(()=>{const o=(u=t.transaction(s,\"readwrite\")).objectStore(s).put({modelPath:this.modelPath,modelArtifacts:r,modelArtifactsInfo:n});o.onsuccess=(()=>e({modelArtifactsInfo:n})),o.onerror=(e=>{const r=(a=l.objectStore(c)).delete(this.modelPath);r.onsuccess=(()=>(t.close(),d(o.error))),r.onerror=(e=>(t.close(),d(o.error)))})}),i.onerror=(e=>(t.close(),d(i.error))),l.oncomplete=(()=>{null==u?t.close():u.oncomplete=(()=>t.close())})}}),l.onerror=(e=>d(l.error))})}}exports.BrowserIndexedDB=i,i.URL_SCHEME=\"indexeddb://\";const u=o=>(0,e.env)().getBool(\"IS_BROWSER\")&&!Array.isArray(o)&&o.startsWith(i.URL_SCHEME)?h(o.slice(i.URL_SCHEME.length)):null;function h(e){return new i(e)}function m(e){return e.startsWith(i.URL_SCHEME)?e.slice(i.URL_SCHEME.length):e}exports.indexedDBRouter=u,r.IORouterRegistry.registerSaveRouter(u),r.IORouterRegistry.registerLoadRouter(u);class f{constructor(){this.indexedDB=l()}async listModels(){return new Promise((e,o)=>{const r=this.indexedDB.open(t,n);r.onupgradeneeded=(()=>a(r)),r.onsuccess=(()=>{const t=r.result,n=t.transaction(c,\"readonly\"),s=n.objectStore(c).getAll();s.onsuccess=(()=>{const o={};for(const e of s.result)o[e.modelPath]=e.modelArtifactsInfo;e(o)}),s.onerror=(e=>(t.close(),o(s.error))),n.oncomplete=(()=>t.close())}),r.onerror=(e=>o(r.error))})}async removeModel(e){return e=m(e),new Promise((o,r)=>{const d=this.indexedDB.open(t,n);d.onupgradeneeded=(()=>a(d)),d.onsuccess=(()=>{const t=d.result,n=t.transaction(c,\"readwrite\"),l=n.objectStore(c),a=l.get(e);let i;a.onsuccess=(()=>{if(null==a.result)return t.close(),r(new Error(`Cannot find model with path '${e}' `+\"in IndexedDB.\"));{const n=l.delete(e),c=()=>{const n=(i=t.transaction(s,\"readwrite\")).objectStore(s).delete(e);n.onsuccess=(()=>o(a.result.modelArtifactsInfo)),n.onerror=(e=>r(a.error))};n.onsuccess=c,n.onerror=(e=>(c(),t.close(),r(a.error)))}}),a.onerror=(e=>(t.close(),r(a.error))),n.oncomplete=(()=>{null==i?t.close():i.oncomplete=(()=>t.close())})}),d.onerror=(e=>r(d.error))})}}exports.BrowserIndexedDBManager=f;"},"sourceMaps":null,"error":null,"hash":"632800025c933b55abae23211b78e3fc","cacheData":{"env":{}}}