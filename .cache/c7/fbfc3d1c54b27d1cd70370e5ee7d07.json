{"id":"FjS7","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609565650716},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":30},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.reshape=s,exports.reshapeConfig=void 0;var e=require(\"@tensorflow/tfjs-core\");function s(s){const{inputs:a,backend:t,attrs:n}=s,{x:o}=a,{shape:p}=n,r=e.util.sizeFromShape(o.shape),h=e.util.inferFromImplicitShape(p,r),l=e.util.sizeFromShape(h);e.util.assert(r===l,()=>`The new shape (${h}) has ${l} elements and the old `+`shape (${o.shape}) has ${r} elements. The new shape and old `+\"shape must have the same number of elements.\"),t.incRef(o.dataId);const d=t.data.get(o.dataId);if(null!=d.complexTensorInfos){const e=d.complexTensorInfos.real,s=d.complexTensorInfos.imag;e.shape=h,s.shape=h}return{dataId:o.dataId,shape:h,dtype:o.dtype}}const a={kernelName:e.Reshape,backendName:\"cpu\",kernelFunc:s};exports.reshapeConfig=a;"},"sourceMaps":null,"error":null,"hash":"1adc5d9e7da08129f65252ba141b9fe7","cacheData":{"env":{}}}