{"id":"aVHA","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/serialization.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/src/serialization.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"./util","loc":{"line":17,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/serialization.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/util.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.registerClass=t,exports.SerializationMap=exports.Serializable=void 0;var e=require(\"./util\");class s{getClassName(){return this.constructor.className}static fromConfig(e,s){return new e(s)}}exports.Serializable=s;class a{constructor(){this.classNameMap={}}static getMap(){return null==a.instance&&(a.instance=new a),a.instance}static register(e){a.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function t(s){(0,e.assert)(null!=s.className,()=>\"Class being registered does not have the static className property defined.\"),(0,e.assert)(\"string\"==typeof s.className,()=>\"className is required to be a string, but got type \"+typeof s.className),(0,e.assert)(s.className.length>0,()=>\"Class being registered has an empty-string as its className, which is disallowed.\"),a.register(s)}exports.SerializationMap=a;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":0}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":13}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":20}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":35}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":43}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":56}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":57}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":64}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":68}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":76}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":90}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":92}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":100}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":117}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":125}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":143}},{"source":"../src/serialization.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":145}},{"source":"../src/serialization.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":149}},{"source":"../src/serialization.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":151}},{"source":"../src/serialization.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":159}},{"source":"../src/serialization.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":1,"column":169}},{"source":"../src/serialization.ts","name":null,"original":{"line":63,"column":22},"generated":{"line":1,"column":175}},{"source":"../src/serialization.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":1,"column":177}},{"source":"../src/serialization.ts","name":null,"original":{"line":76,"column":12},"generated":{"line":1,"column":192}},{"source":"../src/serialization.ts","name":null,"original":{"line":76,"column":12},"generated":{"line":1,"column":199}},{"source":"../src/serialization.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":1,"column":204}},{"source":"../src/serialization.ts","name":null,"original":{"line":77,"column":9},"generated":{"line":1,"column":216}},{"source":"../src/serialization.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":1,"column":226}},{"source":"../src/serialization.ts","name":null,"original":{"line":95,"column":6},"generated":{"line":1,"column":244}},{"source":"../src/serialization.ts","name":null,"original":{"line":95,"column":39},"generated":{"line":1,"column":246}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":11},"generated":{"line":1,"column":249}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":11},"generated":{"line":1,"column":256}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":15},"generated":{"line":1,"column":260}},{"source":"../src/serialization.ts","name":null,"original":{"line":96,"column":19},"generated":{"line":1,"column":262}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":266}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":274}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":287}},{"source":"../src/serialization.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":1,"column":289}},{"source":"../src/serialization.ts","name":null,"original":{"line":107,"column":13},"generated":{"line":1,"column":295}},{"source":"../src/serialization.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":1,"column":297}},{"source":"../src/serialization.ts","name":null,"original":{"line":115,"column":9},"generated":{"line":1,"column":311}},{"source":"../src/serialization.ts","name":null,"original":{"line":115,"column":9},"generated":{"line":1,"column":316}},{"source":"../src/serialization.ts","name":null,"original":{"line":115,"column":24},"generated":{"line":1,"column":329}},{"source":"../src/serialization.ts","name":null,"original":{"line":121,"column":9},"generated":{"line":1,"column":332}},{"source":"../src/serialization.ts","name":null,"original":{"line":125,"column":11},"generated":{"line":1,"column":348}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":37},"generated":{"line":1,"column":355}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":1,"column":361}},{"source":"../src/serialization.ts","name":null,"original":{"line":122,"column":25},"generated":{"line":1,"column":363}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":6},"generated":{"line":1,"column":374}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":23},"generated":{"line":1,"column":376}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":34},"generated":{"line":1,"column":385}},{"source":"../src/serialization.ts","name":null,"original":{"line":123,"column":38},"generated":{"line":1,"column":389}},{"source":"../src/serialization.ts","name":null,"original":{"line":125,"column":11},"generated":{"line":1,"column":392}},{"source":"../src/serialization.ts","name":null,"original":{"line":125,"column":28},"generated":{"line":1,"column":394}},{"source":"../src/serialization.ts","name":null,"original":{"line":131,"column":9},"generated":{"line":1,"column":403}},{"source":"../src/serialization.ts","name":null,"original":{"line":131,"column":42},"generated":{"line":1,"column":419}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":1,"column":422}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":21},"generated":{"line":1,"column":424}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":30},"generated":{"line":1,"column":433}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":43},"generated":{"line":1,"column":446}},{"source":"../src/serialization.ts","name":null,"original":{"line":132,"column":47},"generated":{"line":1,"column":448}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":8},"generated":{"line":1,"column":459}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":9},"generated":{"line":1,"column":460}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":14},"generated":{"line":1,"column":462}},{"source":"../src/serialization.ts","name":null,"original":{"line":133,"column":18},"generated":{"line":1,"column":464}},{"source":"../src/serialization.ts","name":null,"original":{"line":161,"column":6},"generated":{"line":1,"column":477}},{"source":"../src/serialization.ts","name":null,"original":{"line":161,"column":16},"generated":{"line":1,"column":486}},{"source":"../src/serialization.ts","name":null,"original":{"line":162,"column":4},"generated":{"line":1,"column":488}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":6},"generated":{"line":1,"column":492}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":6},"generated":{"line":1,"column":494}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":6},"generated":{"line":1,"column":496}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":23},"generated":{"line":1,"column":504}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":6},"generated":{"line":1,"column":510}},{"source":"../src/serialization.ts","name":null,"original":{"line":164,"column":10},"generated":{"line":1,"column":512}},{"source":"../src/serialization.ts","name":null,"original":{"line":165,"column":6},"generated":{"line":1,"column":522}},{"source":"../src/serialization.ts","name":null,"original":{"line":165,"column":12},"generated":{"line":1,"column":526}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":6},"generated":{"line":1,"column":606}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":6},"generated":{"line":1,"column":608}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":6},"generated":{"line":1,"column":610}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":31},"generated":{"line":1,"column":618}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":13},"generated":{"line":1,"column":635}},{"source":"../src/serialization.ts","name":null,"original":{"line":168,"column":17},"generated":{"line":1,"column":637}},{"source":"../src/serialization.ts","name":null,"original":{"line":169,"column":6},"generated":{"line":1,"column":647}},{"source":"../src/serialization.ts","name":null,"original":{"line":169,"column":12},"generated":{"line":1,"column":651}},{"source":"../src/serialization.ts","name":null,"original":{"line":170,"column":17},"generated":{"line":1,"column":712}},{"source":"../src/serialization.ts","name":null,"original":{"line":170,"column":21},"generated":{"line":1,"column":714}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":6},"generated":{"line":1,"column":726}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":6},"generated":{"line":1,"column":728}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":6},"generated":{"line":1,"column":730}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":6},"generated":{"line":1,"column":738}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":10},"generated":{"line":1,"column":740}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":20},"generated":{"line":1,"column":750}},{"source":"../src/serialization.ts","name":null,"original":{"line":172,"column":29},"generated":{"line":1,"column":757}},{"source":"../src/serialization.ts","name":null,"original":{"line":173,"column":6},"generated":{"line":1,"column":759}},{"source":"../src/serialization.ts","name":null,"original":{"line":173,"column":12},"generated":{"line":1,"column":763}},{"source":"../src/serialization.ts","name":null,"original":{"line":176,"column":2},"generated":{"line":1,"column":848}},{"source":"../src/serialization.ts","name":null,"original":{"line":176,"column":19},"generated":{"line":1,"column":850}},{"source":"../src/serialization.ts","name":null,"original":{"line":176,"column":28},"generated":{"line":1,"column":859}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":862}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":870}},{"source":"../src/serialization.ts","name":null,"original":{"line":177,"column":1},"generated":{"line":1,"column":887}}],"sources":{"../src/serialization.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from './util';\n\n/**\n * Types to support JSON-esque data structures internally.\n *\n * Internally ConfigDict's use camelCase keys and values where the\n * values are class names to be instantiated.  On the python side, these\n * will be snake_case.  Internally we allow Enums into the values for better\n * type safety, but these need to be converted to raw primitives (usually\n * strings) for round-tripping with python.\n *\n * toConfig returns the TS-friendly representation. model.toJSON() returns\n * the pythonic version as that's the portable format.  If you need to\n * python-ify a non-model level toConfig output, you'll need to use a\n * convertTsToPythonic from serialization_utils in -Layers.\n *\n */\nexport declare type ConfigDictValue =\n    boolean | number | string | null | ConfigDictArray | ConfigDict;\nexport declare interface ConfigDict {\n  [key: string]: ConfigDictValue;\n}\nexport declare interface ConfigDictArray extends Array<ConfigDictValue> {}\n\n/**\n * Type to represent the class-type of Serializable objects.\n *\n * Ie the class prototype with access to the constructor and any\n * static members/methods. Instance methods are not listed here.\n *\n * Source for this idea: https://stackoverflow.com/a/43607255\n */\nexport declare type SerializableConstructor<T extends Serializable> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T; className: string; fromConfig: FromConfigMethod<T>;\n};\nexport declare type FromConfigMethod<T extends Serializable> =\n    (cls: SerializableConstructor<T>, config: ConfigDict) => T;\n\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nexport abstract class Serializable {\n  /**\n   * Return the class name for this class to use in serialization contexts.\n   *\n   * Generally speaking this will be the same thing that constructor.name\n   * would have returned.  However, the class name needs to be robust\n   * against minification for serialization/deserialization to work properly.\n   *\n   * There's also places such as initializers.VarianceScaling, where\n   * implementation details between different languages led to different\n   * class hierarchies and a non-leaf node is used for serialization purposes.\n   */\n  getClassName(): string {\n    return (this.constructor as SerializableConstructor<Serializable>)\n        .className;\n  }\n\n  /**\n   * Return all the non-weight state needed to serialize this object.\n   */\n  abstract getConfig(): ConfigDict;\n\n  /**\n   * Creates an instance of T from a ConfigDict.\n   *\n   * This works for most descendants of serializable.  A few need to\n   * provide special handling.\n   * @param cls A Constructor for the class to instantiate.\n   * @param config The Configuration for the object.\n   */\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config);\n  }\n}\n\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nexport class SerializationMap {\n  private static instance: SerializationMap;\n  classNameMap: {\n    [className: string]:\n        [SerializableConstructor<Serializable>, FromConfigMethod<Serializable>]\n  };\n\n  private constructor() {\n    this.classNameMap = {};\n  }\n\n  /**\n   * Returns the singleton instance of the map.\n   */\n  static getMap(): SerializationMap {\n    if (SerializationMap.instance == null) {\n      SerializationMap.instance = new SerializationMap();\n    }\n    return SerializationMap.instance;\n  }\n\n  /**\n   * Registers the class as serializable.\n   */\n  static register<T extends Serializable>(cls: SerializableConstructor<T>) {\n    SerializationMap.getMap().classNameMap[cls.className] =\n        [cls, cls.fromConfig];\n  }\n}\n\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n *\n * @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true}\n */\nexport function registerClass<T extends Serializable>(\n    cls: SerializableConstructor<T>) {\n  assert(\n      cls.className != null,\n      () => `Class being registered does not have the static className ` +\n          `property defined.`);\n  assert(\n      typeof cls.className === 'string',\n      () => `className is required to be a string, but got type ` +\n          typeof cls.className);\n  assert(\n      cls.className.length > 0,\n      () => `Class being registered has an empty-string as its className, ` +\n          `which is disallowed.`);\n\n  SerializationMap.register(cls);\n}\n"},"lineCount":null}},"error":null,"hash":"3b5474b12ca0063e213eddb914851516","cacheData":{"env":{}}}