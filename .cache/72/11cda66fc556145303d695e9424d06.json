{"id":"qDYU","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":44},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../cpu_util","loc":{"line":18,"column":33},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js"},{"name":"../utils/pool_utils","loc":{"line":19,"column":21},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/pool_utils.js"},{"name":"./Identity","loc":{"line":20,"column":25},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/AvgPool.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.avgPool=r,exports.avgPoolConfig=void 0;var e=require(\"@tensorflow/tfjs-core\"),t=require(\"../cpu_util\"),o=require(\"../utils/pool_utils\"),i=require(\"./Identity\");function r(r){const{inputs:s,backend:a,attrs:n}=r,{x:l}=s;(0,t.assertNotComplex)(l,\"avgPool\");const{filterSize:u,strides:d,pad:p,dimRoundingMode:c}=n;e.util.assert(e.backend_util.eitherStridesOrDilationsAreOne(d,1),()=>\"Error in avgPool: Either strides or dilations must be 1. \"+`Got strides ${d} and dilations '1'`);const f=e.backend_util.computePool2DInfo(l.shape,u,d,1,p,c);let g;if(1===f.filterWidth&&1===f.filterHeight&&e.util.arraysEqual(f.inShape,f.outShape))g=(0,i.identity)({inputs:{x:l},backend:a});else{const t=a.data.get(l.dataId).values,i=e.util.computeStrides(l.shape),r=(0,o.pool)(t,l.shape,l.dtype,i,f,\"avg\");g=a.makeTensorInfo(f.outShape,l.dtype,r.values)}return g}const s={kernelName:e.AvgPool,backendName:\"cpu\",kernelFunc:r};exports.avgPoolConfig=s;"},"sourceMaps":null,"error":null,"hash":"8c0ed78f3ffaa6c24dc777a778967fc4","cacheData":{"env":{}}}