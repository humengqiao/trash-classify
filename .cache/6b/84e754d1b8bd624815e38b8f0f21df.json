{"id":"FlCa","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/src/utils/unary_impl.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":21},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createSimpleUnaryImpl=r;var e=require(\"@tensorflow/tfjs-core\");function r(r){return(t,o,n)=>{const l=e.util.getTypedArrayFromDType(o,t.length);for(let e=0;e<t.length;++e)l[e]=r(t[e],n);return l}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":98}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":100}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":104}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":106}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":114}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":1,"column":139}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":1,"column":148}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":25,"column":38},"generated":{"line":1,"column":150}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":153}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":1,"column":159}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":1,"column":160}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":27,"column":18},"generated":{"line":1,"column":162}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":27,"column":25},"generated":{"line":1,"column":164}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":28,"column":10},"generated":{"line":1,"column":169}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":28,"column":10},"generated":{"line":1,"column":175}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":177}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":1,"column":179}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":1,"column":184}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":29,"column":36},"generated":{"line":1,"column":207}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":29,"column":62},"generated":{"line":1,"column":209}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":29,"column":69},"generated":{"line":1,"column":211}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":219}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":223}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":1,"column":227}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":30,"column":17},"generated":{"line":1,"column":229}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":1,"column":231}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":1,"column":233}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":30,"column":31},"generated":{"line":1,"column":235}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":30,"column":41},"generated":{"line":1,"column":244}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":246}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":1,"column":248}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":1,"column":251}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":1,"column":253}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":31,"column":31},"generated":{"line":1,"column":255}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":31,"column":35},"generated":{"line":1,"column":258}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":1,"column":261}},{"source":"../../src/utils/unary_impl.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":1,"column":268}}],"sources":{"../../src/utils/unary_impl.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NumericDataType, util} from '@tensorflow/tfjs-core';\n\nimport {SimpleUnaryImpl, SimpleUnaryOperation} from './unary_types';\n\n/**\n * Template that creates implementation for unary op.\n */\nexport function createSimpleUnaryImpl(op: SimpleUnaryOperation):\n    SimpleUnaryImpl {\n  return (values, dtype, attrs) => {\n    const newValues =\n        util.getTypedArrayFromDType(dtype as NumericDataType, values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = op(values[i], attrs);\n    }\n    return newValues;\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"8ed657d56ec9099ea6290f25928a26a0","cacheData":{"env":{}}}