{"id":"ONBM","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu_depthwise.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/conv_gpu_depthwise.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.DepthwiseConv2DProgram=void 0;class t{constructor(t,n=!1,o=null,e=!1){this.variableNames=[\"x\",\"W\"],this.outputShape=t.outShape;const i=t.inHeight,s=t.inWidth,r=t.padInfo.top,a=t.padInfo.left,d=t.strideHeight,l=t.strideWidth,C=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,u=t.filterWidth,x=t.outChannels/t.inChannels;let v=\"\",p=\"\";o&&(v=e?`float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          ${o}\\n        }`:`\\n          float activation(float x) {\\n            ${o}\\n          }\\n        `,p=\"result = activation(result);\");const f=n?\"result += getBiasAtOutCoords();\":\"\";n&&this.variableNames.push(\"bias\"),e&&this.variableNames.push(\"preluActivationWeights\"),this.userCode=`\\n      ${v}\\n\\n      const ivec2 strides = ivec2(${d}, ${l});\\n      const ivec2 pads = ivec2(${r}, ${a});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / ${x};\\n        int q = d2 - d1 * ${x};\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < ${h}; wR++) {\\n          int xR = xRCorner + wR * ${C};\\n\\n          if (xR < 0 || xR >= ${i}) {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < ${u}; wC++) {\\n            int xC = xCCorner + wC * ${c};\\n\\n            if (xC < 0 || xC >= ${s}) {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n\\n        float result = dotProd;\\n        ${f}\\n        ${p}\\n        setOutput(result);\\n      }\\n    `}}exports.DepthwiseConv2DProgram=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":0}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":13}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":20}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":35}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":43}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":56}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":57}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":64}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":68}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":76}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":104}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":106}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":112}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":114}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":126}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":27,"column":41},"generated":{"line":1,"column":128}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":27,"column":51},"generated":{"line":1,"column":131}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":1,"column":133}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":28,"column":27},"generated":{"line":1,"column":135}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":28,"column":33},"generated":{"line":1,"column":140}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":28,"column":54},"generated":{"line":1,"column":143}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":146}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":151}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":165}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":166}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":22,"column":24},"generated":{"line":1,"column":170}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":29,"column":9},"generated":{"line":1,"column":175}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":29,"column":9},"generated":{"line":1,"column":180}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":29,"column":23},"generated":{"line":1,"column":192}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":29,"column":32},"generated":{"line":1,"column":194}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":203}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":1,"column":209}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":1,"column":211}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":31,"column":30},"generated":{"line":1,"column":213}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":1,"column":222}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":32,"column":21},"generated":{"line":1,"column":224}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":32,"column":30},"generated":{"line":1,"column":226}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":1,"column":234}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":33,"column":19},"generated":{"line":1,"column":236}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":33,"column":28},"generated":{"line":1,"column":238}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":33,"column":36},"generated":{"line":1,"column":246}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":1,"column":250}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":34,"column":20},"generated":{"line":1,"column":252}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":34,"column":29},"generated":{"line":1,"column":254}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":34,"column":37},"generated":{"line":1,"column":262}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":1,"column":267}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":35,"column":25},"generated":{"line":1,"column":269}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":35,"column":34},"generated":{"line":1,"column":271}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":1,"column":284}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":1,"column":286}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":36,"column":33},"generated":{"line":1,"column":288}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":1,"column":300}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":37,"column":27},"generated":{"line":1,"column":302}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":37,"column":36},"generated":{"line":1,"column":304}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":1,"column":319}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":38,"column":26},"generated":{"line":1,"column":321}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":38,"column":35},"generated":{"line":1,"column":323}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":1,"column":337}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":39,"column":25},"generated":{"line":1,"column":339}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":39,"column":34},"generated":{"line":1,"column":341}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":1,"column":354}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":40,"column":24},"generated":{"line":1,"column":356}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":40,"column":33},"generated":{"line":1,"column":358}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":1,"column":370}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":41,"column":23},"generated":{"line":1,"column":372}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":41,"column":32},"generated":{"line":1,"column":374}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":41,"column":46},"generated":{"line":1,"column":386}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":41,"column":55},"generated":{"line":1,"column":388}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":1,"column":399}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":1,"column":403}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":43,"column":28},"generated":{"line":1,"column":405}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":43,"column":32},"generated":{"line":1,"column":408}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":43,"column":57},"generated":{"line":1,"column":410}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":44,"column":8},"generated":{"line":1,"column":413}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":46,"column":8},"generated":{"line":1,"column":417}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":45,"column":10},"generated":{"line":1,"column":419}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":48,"column":12},"generated":{"line":1,"column":524}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":53,"column":14},"generated":{"line":1,"column":595}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":58,"column":6},"generated":{"line":1,"column":622}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":58,"column":31},"generated":{"line":1,"column":624}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":61,"column":10},"generated":{"line":1,"column":656}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":61,"column":10},"generated":{"line":1,"column":662}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":61,"column":27},"generated":{"line":1,"column":664}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":61,"column":37},"generated":{"line":1,"column":666}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":61,"column":73},"generated":{"line":1,"column":700}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":1,"column":703}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":63,"column":11},"generated":{"line":1,"column":706}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":63,"column":11},"generated":{"line":1,"column":711}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":63,"column":25},"generated":{"line":1,"column":725}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":63,"column":30},"generated":{"line":1,"column":730}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":66,"column":8},"generated":{"line":1,"column":738}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":67,"column":11},"generated":{"line":1,"column":741}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":67,"column":11},"generated":{"line":1,"column":746}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":67,"column":25},"generated":{"line":1,"column":760}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":67,"column":30},"generated":{"line":1,"column":765}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":70,"column":9},"generated":{"line":1,"column":791}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":70,"column":9},"generated":{"line":1,"column":796}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":71,"column":8},"generated":{"line":1,"column":816}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":73,"column":36},"generated":{"line":1,"column":858}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":73,"column":53},"generated":{"line":1,"column":864}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":74,"column":33},"generated":{"line":1,"column":903}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":74,"column":44},"generated":{"line":1,"column":909}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":81,"column":24},"generated":{"line":1,"column":1119}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":82,"column":28},"generated":{"line":1,"column":1152}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":91,"column":32},"generated":{"line":1,"column":1522}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":92,"column":37},"generated":{"line":1,"column":1572}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":94,"column":32},"generated":{"line":1,"column":1611}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":98,"column":34},"generated":{"line":1,"column":1690}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":99,"column":39},"generated":{"line":1,"column":1742}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":101,"column":34},"generated":{"line":1,"column":1783}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":112,"column":10},"generated":{"line":1,"column":2036}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":113,"column":10},"generated":{"line":1,"column":2050}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":2098}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":2106}},{"source":"../src/conv_gpu_depthwise.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":2129}}],"sources":{"../src/conv_gpu_depthwise.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class DepthwiseConv2DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      convInfo: backend_util.Conv2DInfo, addBias = false,\n      activation: string = null, hasPreluActivation = false) {\n    this.outputShape = convInfo.outShape;\n\n    const xNumRows = convInfo.inHeight;\n    const xNumCols = convInfo.inWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const channelMul = convInfo.outChannels / convInfo.inChannels;\n\n    let activationSnippet = '', applyActivationSnippet = '';\n    if (activation) {\n      if (hasPreluActivation) {\n        activationSnippet = `float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n      } else {\n        activationSnippet = `\n          float activation(float x) {\n            ${activation}\n          }\n        `;\n      }\n\n      applyActivationSnippet = `result = activation(result);`;\n    }\n\n    const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n    if (addBias) {\n      this.variableNames.push('bias');\n    }\n\n    if (hasPreluActivation) {\n      this.variableNames.push('preluActivationWeights');\n    }\n\n    this.userCode = `\n      ${activationSnippet}\n\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${channelMul};\n        int q = d2 - d1 * ${channelMul};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          int xR = xRCorner + wR * ${dilationHeight};\n\n          if (xR < 0 || xR >= ${xNumRows}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            if (xC < 0 || xC >= ${xNumCols}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"b8bf1d624f9b32399a2c6e2a2926eec1","cacheData":{"env":{}}}