{"id":"yk2k","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609564004117},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../tensor","loc":{"line":17,"column":29},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor.js"},{"name":"../tensor_util_env","loc":{"line":18,"column":32},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"../util","loc":{"line":19,"column":22},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/util.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.setdiff1dAsync=void 0;var e=require(\"../tensor\"),t=require(\"../tensor_util_env\"),r=o(require(\"../util\"));function n(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return n=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=n();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var a=o?Object.getOwnPropertyDescriptor(e,s):null;a&&(a.get||a.set)?Object.defineProperty(r,s,a):r[s]=e[s]}return r.default=e,t&&t.set(e,r),r}async function s(n,o){const s=(0,t.convertToTensor)(n,\"x\",\"setdiff1d\"),a=(0,t.convertToTensor)(o,\"y\",\"setdiff1d\");r.assert(s.dtype===a.dtype,()=>`x and y should have the same dtype, but got x (${s.dtype}) and y (${a.dtype}).`),r.assert(1===s.rank,()=>`x should be 1D tensor, but got x (${s.shape}).`),r.assert(1===a.rank,()=>`y should be 1D tensor, but got y (${a.shape}).`);const u=await s.data(),f=await a.data(),i=new Set(f);let d=0;for(let e=0;e<u.length;e++)i.has(u[e])||d++;const c=new e.TensorBuffer([d],s.dtype),p=new e.TensorBuffer([d],\"int32\");for(let e=0,t=0;e<u.length;e++)i.has(u[e])||(c.values[t]=u[e],p.values[t]=e,t++);return[c.toTensor(),p.toTensor()]}const a=s;exports.setdiff1dAsync=a;"},"sourceMaps":null,"error":null,"hash":"5cfc1dc46b4d1e489985ca2845fb4f90","cacheData":{"env":{}}}