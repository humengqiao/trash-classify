{"id":"zxzS","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../globals","loc":{"line":17,"column":24},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/globals.js"},{"name":"../gradients","loc":{"line":18,"column":30},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/gradients.js"},{"name":"../ops/ops","loc":{"line":19,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/ops.js"},{"name":"../serialization","loc":{"line":20,"column":29},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/serialization.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Optimizer=void 0;var e=require(\"../globals\"),t=require(\"../gradients\"),i=require(\"../ops/ops\"),s=require(\"../serialization\");class r extends s.Serializable{minimize(t,i=!1,s){const{value:r,grads:n}=this.computeGradients(t,s);if(null!=s){const e=s.map(e=>({name:e.name,tensor:n[e.name]}));this.applyGradients(e)}else this.applyGradients(n);return(0,e.dispose)(n),i?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,i){return(0,t.variableGrads)(e,i)}dispose(){null!=this.iterations_&&(0,e.dispose)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:\"iter\",tensor:(0,i.scalar)(this.iterations_,\"int32\")}}async getWeights(){throw new Error(\"getWeights() is not implemented for this optimizer yet.\")}async setWeights(e){throw new Error(\"setWeights() is not implemented for this optimizer class \"+`${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}exports.Optimizer=r,Object.defineProperty(r,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});"},"sourceMaps":null,"error":null,"hash":"cf67c271ac266917f0657c0733bff601","cacheData":{"env":{}}}