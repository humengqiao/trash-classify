{"id":"mFR1","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/src/binaryop_packed_gpu.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":35},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"./packing_util","loc":{"line":18,"column":28},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js"},{"name":"./shader_compiler","loc":{"line":19,"column":34},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.BinaryOpPackedProgram=exports.MOD=exports.MIN=exports.MAX=exports.LOGICAL_OR=exports.LOGICAL_AND=exports.GREATER_EQUAL=exports.GREATER=exports.LESS_EQUAL=exports.LESS=exports.NOT_EQUAL=exports.EQUAL=exports.ELU_DER=exports.PRELU=exports.POW=exports.INT_DIV=void 0;var e=require(\"@tensorflow/tfjs-core\"),n=require(\"./packing_util\"),t=require(\"./shader_compiler\");const s=\"\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\",r=\"\\n  ivec4 ia = round(a);\\n  ivec4 ib = round(b);\\n  bvec4 cond = notEqual(ib, ivec4(0));\\n  ivec4 result = ivec4(0);\\n  vec4 s = sign(a) * sign(b);\\n\\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n  if (cond[0]) {\\n    result[0] = idiv(ia[0], ib[0], s[0]);\\n  }\\n  if (cond[1]) {\\n    result[1] = idiv(ia[1], ib[1], s[1]);\\n  }\\n  if (cond[2]) {\\n    result[2] = idiv(ia[2], ib[2], s[2]);\\n  }\\n  if (cond[3]) {\\n    result[3] = idiv(ia[3], ib[3], s[3]);\\n  }\\n  return vec4(result);\\n\";exports.INT_DIV=r;const o=\"\\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\\n  vec4 result = multiplier * pow(abs(a), b);\\n\\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\\n  bvec4 isExpZero = equal(b, vec4(0.0));\\n  result.r = isExpZero.r ? 1.0 : result.r;\\n  result.g = isExpZero.g ? 1.0 : result.g;\\n  result.b = isExpZero.b ? 1.0 : result.b;\\n  result.a = isExpZero.a ? 1.0 : result.a;\\n\\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\\n  \"+s+\"\\n  return result;\\n\";exports.POW=o;const a=\"\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n\";exports.PRELU=a;const u=\"\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n\";exports.ELU_DER=u;const c=\"\\n  return vec4(equal(a, b));\\n\";exports.EQUAL=c;const i=\"\\n  return vec4(notEqual(a, b));\\n\";exports.NOT_EQUAL=i;const l=\"\\n  return vec4(lessThan(a, b));\\n\";exports.LESS=l;const v=\"\\n  return vec4(lessThanEqual(a, b));\\n\";exports.LESS_EQUAL=v;const p=\"\\n  return vec4(greaterThan(a, b));\\n\";exports.GREATER=p;const d=\"\\n  return vec4(greaterThanEqual(a, b));\\n\";exports.GREATER_EQUAL=d;const b=\"\\n  return vec4(\\n    vec4(greaterThanEqual(a, vec4(1.0))) *\\n    vec4(greaterThanEqual(b, vec4(1.0))));\\n\";exports.LOGICAL_AND=b;const x=\"\\n  return min(\\n    vec4(greaterThanEqual(a, vec4(1.0))) +\\n    vec4(greaterThanEqual(b, vec4(1.0))),\\n    vec4(1.0));\\n\";exports.LOGICAL_OR=x;const E=\"\\n  vec4 result = vec4(max(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \"+s+\"\\n  return result;\\n\";exports.MAX=E;const h=\"\\n  vec4 result = vec4(min(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \"+s+\"\\n  return result;\\n\";exports.MIN=h;const O=\"\\n  vec4 result = mod(a, b);\\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\\n  \"+s+\"\\n  return result;\\n\";exports.MOD=O;class N{constructor(s,r,o,a=!1){this.variableNames=[\"A\",\"B\"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.backend_util.assertAndGetBroadcastShape(r,o);const u=this.outputShape.length;let c=\"\";if(a)if(0===u||1===e.util.sizeFromShape(this.outputShape))c=\"\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        \";else{if(c=`\\n          ${(0,t.getCoordsDataType)(u)} coords = getOutputCoords();\\n        `,1===u)c+=`\\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          `;else{const e=(0,n.getChannels)(\"coords\",u);c+=`\\n            bool nextRowOutOfBounds =\\n              (${e[u-2]} + 1) >= ${this.outputShape[u-2]};\\n            bool nextColOutOfBounds =\\n              (${e[u-1]} + 1) >= ${this.outputShape[u-1]};\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          `}}this.userCode=`\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        ${s}\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        ${c}\\n\\n        setOutput(result);\\n      }\\n    `}}exports.BinaryOpPackedProgram=N;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":0}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":13}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":20}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":35}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":43}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":56}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":57}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":64}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":68}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":76}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":98}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":106}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":110}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":118}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":122}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":130}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":134}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":142}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":153}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":161}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":173}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":181}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":195}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":203}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":211}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":219}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":230}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":238}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":243}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":251}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":261}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":269}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":275}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":283}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":291}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":299}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":305}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":313}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":317}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":325}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":338}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":340}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":344}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":346}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":354}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":379}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":381}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":389}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":407}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":409}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":417}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":438}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":24,"column":6},"generated":{"line":1,"column":444}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":24,"column":26},"generated":{"line":1,"column":446}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":1,"column":631}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":31,"column":23},"generated":{"line":1,"column":633}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":1151}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":1159}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":1167}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":1169}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":54,"column":13},"generated":{"line":1,"column":1175}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":1,"column":1177}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":1,"column":1824}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":69,"column":24},"generated":{"line":1,"column":1826}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":1849}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":1857}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":1861}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":7},"generated":{"line":1,"column":1863}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":13},"generated":{"line":1,"column":1869}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":73,"column":21},"generated":{"line":1,"column":1871}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2002}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2010}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2016}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":7},"generated":{"line":1,"column":2018}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":13},"generated":{"line":1,"column":2024}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":78,"column":23},"generated":{"line":1,"column":2026}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2164}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2172}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2180}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":83,"column":7},"generated":{"line":1,"column":2182}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":83,"column":13},"generated":{"line":1,"column":2188}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":83,"column":21},"generated":{"line":1,"column":2190}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2224}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2232}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2238}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":87,"column":7},"generated":{"line":1,"column":2240}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":87,"column":13},"generated":{"line":1,"column":2246}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":87,"column":25},"generated":{"line":1,"column":2248}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2285}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2293}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2303}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":91,"column":7},"generated":{"line":1,"column":2305}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":91,"column":13},"generated":{"line":1,"column":2311}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":91,"column":20},"generated":{"line":1,"column":2313}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2350}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2358}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2363}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":95,"column":7},"generated":{"line":1,"column":2365}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":95,"column":13},"generated":{"line":1,"column":2371}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":95,"column":26},"generated":{"line":1,"column":2373}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2415}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2423}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2434}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":2436}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":99,"column":13},"generated":{"line":1,"column":2442}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":99,"column":23},"generated":{"line":1,"column":2444}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2484}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2492}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2500}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":103,"column":7},"generated":{"line":1,"column":2502}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":103,"column":13},"generated":{"line":1,"column":2508}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":103,"column":29},"generated":{"line":1,"column":2510}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2555}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2563}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2577}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":107,"column":7},"generated":{"line":1,"column":2579}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":107,"column":13},"generated":{"line":1,"column":2585}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":107,"column":27},"generated":{"line":1,"column":2587}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2696}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2704}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2716}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":113,"column":7},"generated":{"line":1,"column":2718}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":113,"column":13},"generated":{"line":1,"column":2724}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":113,"column":26},"generated":{"line":1,"column":2726}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2850}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2858}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":2869}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":120,"column":7},"generated":{"line":1,"column":2871}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":120,"column":13},"generated":{"line":1,"column":2877}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":120,"column":19},"generated":{"line":1,"column":2879}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":1,"column":2985}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":124,"column":24},"generated":{"line":1,"column":2987}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3010}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3018}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3022}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":128,"column":7},"generated":{"line":1,"column":3024}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":128,"column":13},"generated":{"line":1,"column":3030}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":128,"column":19},"generated":{"line":1,"column":3032}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":1,"column":3138}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":132,"column":24},"generated":{"line":1,"column":3140}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3163}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3171}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3175}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":136,"column":7},"generated":{"line":1,"column":3177}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":136,"column":13},"generated":{"line":1,"column":3183}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":136,"column":19},"generated":{"line":1,"column":3185}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":140,"column":4},"generated":{"line":1,"column":3263}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":140,"column":24},"generated":{"line":1,"column":3265}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3288}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3296}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":3300}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":6},"generated":{"line":1,"column":3302}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":13},"generated":{"line":1,"column":3308}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":152,"column":2},"generated":{"line":1,"column":3310}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":153,"column":6},"generated":{"line":1,"column":3322}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":153,"column":18},"generated":{"line":1,"column":3324}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":153,"column":36},"generated":{"line":1,"column":3326}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":154,"column":6},"generated":{"line":1,"column":3328}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":154,"column":25},"generated":{"line":1,"column":3331}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":145,"column":2},"generated":{"line":1,"column":3334}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":145,"column":2},"generated":{"line":1,"column":3339}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":145,"column":18},"generated":{"line":1,"column":3353}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":145,"column":19},"generated":{"line":1,"column":3354}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":145,"column":24},"generated":{"line":1,"column":3358}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":148,"column":2},"generated":{"line":1,"column":3363}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":148,"column":2},"generated":{"line":1,"column":3368}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":148,"column":25},"generated":{"line":1,"column":3390}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":149,"column":2},"generated":{"line":1,"column":3392}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":149,"column":2},"generated":{"line":1,"column":3397}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":149,"column":17},"generated":{"line":1,"column":3411}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":150,"column":2},"generated":{"line":1,"column":3413}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":150,"column":2},"generated":{"line":1,"column":3418}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":150,"column":17},"generated":{"line":1,"column":3432}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":155,"column":9},"generated":{"line":1,"column":3434}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":155,"column":9},"generated":{"line":1,"column":3439}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":155,"column":23},"generated":{"line":1,"column":3451}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":155,"column":36},"generated":{"line":1,"column":3453}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":155,"column":36},"generated":{"line":1,"column":3466}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":155,"column":63},"generated":{"line":1,"column":3493}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":155,"column":71},"generated":{"line":1,"column":3495}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":156,"column":10},"generated":{"line":1,"column":3498}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":156,"column":10},"generated":{"line":1,"column":3504}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":156,"column":17},"generated":{"line":1,"column":3506}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":156,"column":22},"generated":{"line":1,"column":3511}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":156,"column":34},"generated":{"line":1,"column":3523}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":157,"column":8},"generated":{"line":1,"column":3530}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":157,"column":8},"generated":{"line":1,"column":3534}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":157,"column":33},"generated":{"line":1,"column":3536}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":158,"column":8},"generated":{"line":1,"column":3539}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":158,"column":8},"generated":{"line":1,"column":3542}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":10},"generated":{"line":1,"column":3544}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":19},"generated":{"line":1,"column":3547}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":10},"generated":{"line":1,"column":3551}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":65},"generated":{"line":1,"column":3554}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":24},"generated":{"line":1,"column":3558}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":29},"generated":{"line":1,"column":3560}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":29},"generated":{"line":1,"column":3565}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":43},"generated":{"line":1,"column":3579}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":159,"column":48},"generated":{"line":1,"column":3584}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":160,"column":8},"generated":{"line":1,"column":3597}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":160,"column":33},"generated":{"line":1,"column":3599}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":165,"column":13},"generated":{"line":1,"column":3694}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":170,"column":12},"generated":{"line":1,"column":3695}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":167,"column":8},"generated":{"line":1,"column":3698}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":166,"column":22},"generated":{"line":1,"column":3716}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":166,"column":40},"generated":{"line":1,"column":3718}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":166,"column":40},"generated":{"line":1,"column":3720}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":166,"column":40},"generated":{"line":1,"column":3739}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":170,"column":21},"generated":{"line":1,"column":3782}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":170,"column":12},"generated":{"line":1,"column":3786}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":171,"column":10},"generated":{"line":1,"column":3788}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":172,"column":41},"generated":{"line":1,"column":3835}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":172,"column":46},"generated":{"line":1,"column":3840}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":172,"column":58},"generated":{"line":1,"column":3852}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":176,"column":15},"generated":{"line":1,"column":3946}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":177,"column":16},"generated":{"line":1,"column":3947}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":177,"column":16},"generated":{"line":1,"column":3953}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":177,"column":27},"generated":{"line":1,"column":3956}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":177,"column":39},"generated":{"line":1,"column":3958}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":177,"column":39},"generated":{"line":1,"column":3960}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":177,"column":39},"generated":{"line":1,"column":3973}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":177,"column":49},"generated":{"line":1,"column":3982}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":178,"column":10},"generated":{"line":1,"column":3985}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":180,"column":17},"generated":{"line":1,"column":4047}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":180,"column":26},"generated":{"line":1,"column":4049}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":180,"column":33},"generated":{"line":1,"column":4051}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":180,"column":47},"generated":{"line":1,"column":4065}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":180,"column":52},"generated":{"line":1,"column":4070}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":180,"column":64},"generated":{"line":1,"column":4082}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":180,"column":71},"generated":{"line":1,"column":4084}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":182,"column":17},"generated":{"line":1,"column":4146}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":182,"column":26},"generated":{"line":1,"column":4148}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":182,"column":33},"generated":{"line":1,"column":4150}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":182,"column":47},"generated":{"line":1,"column":4164}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":182,"column":52},"generated":{"line":1,"column":4169}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":182,"column":64},"generated":{"line":1,"column":4181}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":182,"column":71},"generated":{"line":1,"column":4183}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":191,"column":9},"generated":{"line":1,"column":4404}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":191,"column":9},"generated":{"line":1,"column":4409}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":193,"column":10},"generated":{"line":1,"column":4477}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":201,"column":10},"generated":{"line":1,"column":4645}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":4695}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":4703}},{"source":"../src/binaryop_packed_gpu.ts","name":null,"original":{"line":144,"column":34},"generated":{"line":1,"column":4725}}],"sources":{"../src/binaryop_packed_gpu.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, util} from '@tensorflow/tfjs-core';\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getChannels} from './packing_util';\nimport {getCoordsDataType} from './shader_compiler';\n\nconst CHECK_NAN_SNIPPET = `\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n`;\n\nexport const INT_DIV = `\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n`;\n\nexport const POW = `\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport const PRELU = `\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n`;\n\nexport const ELU_DER = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\n\nexport const EQUAL = `\n  return vec4(equal(a, b));\n`;\n\nexport const NOT_EQUAL = `\n  return vec4(notEqual(a, b));\n`;\n\nexport const LESS = `\n  return vec4(lessThan(a, b));\n`;\n\nexport const LESS_EQUAL = `\n  return vec4(lessThanEqual(a, b));\n`;\n\nexport const GREATER = `\n  return vec4(greaterThan(a, b));\n`;\n\nexport const GREATER_EQUAL = `\n  return vec4(greaterThanEqual(a, b));\n`;\n\nexport const LOGICAL_AND = `\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n`;\n\nexport const LOGICAL_OR = `\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n`;\n\nexport const MAX = `\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport const MIN = `\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport const MOD = `\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport class BinaryOpPackedProgram implements GPGPUProgram {\n  variableNames = ['A', 'B'];\n  outputShape: number[];\n  userCode: string;\n  supportsBroadcasting = true;\n  packedInputs = true;\n  packedOutput = true;\n\n  constructor(\n      op: string, aShape: number[], bShape: number[],\n      checkOutOfBounds = false) {\n    this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    const rank = this.outputShape.length;\n    let checkOutOfBoundsString = '';\n    if (checkOutOfBounds) {\n      if (rank === 0 || util.sizeFromShape(this.outputShape) === 1) {\n        checkOutOfBoundsString = `\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        `;\n      } else {\n        const dtype = getCoordsDataType(rank);\n        checkOutOfBoundsString = `\n          ${dtype} coords = getOutputCoords();\n        `;\n        if (rank === 1) {\n          checkOutOfBoundsString += `\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n        } else {\n          const channels = getChannels('coords', rank);\n          checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= ${this.outputShape[rank - 2]};\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= ${this.outputShape[rank - 1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n        }\n      }\n    }\n\n    this.userCode = `\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${op}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${checkOutOfBoundsString}\n\n        setOutput(result);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"d3f95106af333cdadada90d4def442c1","cacheData":{"env":{}}}