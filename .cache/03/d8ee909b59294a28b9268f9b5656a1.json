{"id":"MP6S","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"./buffer","loc":{"line":17,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/eye.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js"},{"name":"./expand_dims","loc":{"line":18,"column":27},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/eye.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js"},{"name":"./operation","loc":{"line":19,"column":19},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/eye.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"},{"name":"./reshape","loc":{"line":20,"column":24},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/eye.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js"},{"name":"./tile","loc":{"line":21,"column":21},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/eye.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/tile.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.eye=void 0;var e=require(\"./buffer\"),r=require(\"./expand_dims\"),t=require(\"./operation\"),n=require(\"./reshape\"),i=require(\"./tile\");function s(t,s,o,u=\"float32\"){null==s&&(s=t);const l=(0,e.buffer)([t,s],u),p=t<=s?t:s;for(let e=0;e<p;++e)l.set(1,e,e);const a=(0,n.reshape)(l.toTensor(),[t,s]);if(null==o)return a;if(1===o.length)return(0,i.tile)((0,r.expandDims)(a,0),[o[0],1,1]);if(2===o.length)return(0,i.tile)((0,r.expandDims)((0,r.expandDims)(a,0),0),[o[0],o[1],1,1]);if(3===o.length)return(0,i.tile)((0,r.expandDims)((0,r.expandDims)((0,r.expandDims)(a,0),0),0),[o[0],o[1],o[2],1,1]);throw new Error(\"eye() currently supports only 1D and 2D \"+`batchShapes, but received ${o.length}D.`)}const o=(0,t.op)({eye_:s});exports.eye=o;"},"sourceMaps":null,"error":null,"hash":"49158da889657f7483c3462d643697e3","cacheData":{"env":{}}}