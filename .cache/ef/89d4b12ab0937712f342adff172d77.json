{"id":"pY9s","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":35},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/kernel_utils.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../cpu_util","loc":{"line":18,"column":33},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/kernel_utils.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js"},{"name":"../kernels/Cast","loc":{"line":19,"column":21},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/kernel_utils.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js"},{"name":"../kernels/Complex","loc":{"line":20,"column":24},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/kernel_utils.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.binaryKernelFunc=s,exports.createComplexBinaryKernelImpl=o;var e=require(\"@tensorflow/tfjs-core\"),t=require(\"../cpu_util\"),a=require(\"../kernels/Cast\"),n=require(\"../kernels/Complex\");function s(e,s,o,r){return null==o?({inputs:a,backend:n})=>{const{a:o,b:l}=a,d=n;(0,t.assertNotComplex)([o,l],e);const i=d.data.get(o.dataId).values,c=d.data.get(l.dataId).values,u=r||o.dtype,[p,m]=s(o.shape,l.shape,i,c,u);return d.makeTensorInfo(m,u,p)}:({inputs:e,backend:t})=>{const{a:l,b:d}=e,i=t;if(\"complex64\"===l.dtype||\"complex64\"===d.dtype){const e=(0,a.cast)({inputs:{x:l},backend:i,attrs:{dtype:\"complex64\"}}),t=i.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,c=i.data.get(s.dataId).values,u=i.data.get(r.dataId).values,p=(0,a.cast)({inputs:{x:d},backend:i,attrs:{dtype:\"complex64\"}}),m=i.data.get(p.dataId),g=m.complexTensorInfos.real,I=m.complexTensorInfos.imag,f=i.data.get(g.dataId).values,x=i.data.get(I.dataId).values,[h,T,y]=o(l.shape,d.shape,c,u,f,x),k=i.makeTensorInfo(y,\"float32\",h),b=i.makeTensorInfo(y,\"float32\",T),v=(0,n.complex)({inputs:{real:k,imag:b},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(k),i.disposeIntermediateTensorInfo(b),v}{const e=i.data.get(l.dataId).values,t=i.data.get(d.dataId).values,a=r||l.dtype,[n,o]=s(l.shape,d.shape,e,t,a);return i.makeTensorInfo(o,a,n)}}}function o(t){return(a,n,s,o,r,l)=>{const d=e.backend_util.assertAndGetBroadcastShape(a,n),i=e.util.sizeFromShape(d),c=d.length,u=e.util.computeStrides(d),p=e.util.getTypedArrayFromDType(\"float32\",i),m=e.util.getTypedArrayFromDType(\"float32\",i),g=e.backend_util.getBroadcastDims(a,d),I=e.backend_util.getBroadcastDims(n,d),f=e.backend_util.mergeRealAndImagArrays(s,o),x=e.backend_util.mergeRealAndImagArrays(r,l),h=a.length,T=e.util.computeStrides(a),y=n.length,k=e.util.computeStrides(n);if(g.length+I.length===0)for(let e=0;e<p.length;e++){const a=e%f.length,n=e%x.length,s=t(f[2*a],f[2*a+1],x[2*n],x[2*n+1]);p[e]=s.real,m[e]=s.imag}else for(let b=0;b<p.length;b++){const a=e.util.indexToLoc(b,c,u),n=a.slice(-h);g.forEach(e=>n[e]=0);const s=e.util.locToIndex(n,h,T),o=a.slice(-y);I.forEach(e=>o[e]=0);const r=e.util.locToIndex(o,y,k),l=t(f[2*s],f[2*s+1],x[2*r],x[2*r+1]);p[b]=l.real,m[b]=l.imag}return[p,m,d]}}"},"sourceMaps":null,"error":null,"hash":"b7d386c9541c304d60ee9c72e9dc82af","cacheData":{"env":{}}}