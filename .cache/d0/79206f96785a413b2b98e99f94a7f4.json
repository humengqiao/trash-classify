{"id":"VKTJ","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609564004117},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ArgMinMaxProgram=void 0;class t{constructor(t,e,n){this.variableNames=[\"A\"];const{windowSize:i,batchSize:s,outSize:a}=t;n||this.variableNames.push(\"bestIndicesA\"),this.outputShape=[s,a];const o=\"max\"===e?\">\":\"<\",d=n?\"inOffset + i;\":\"round(getBestIndicesA(batch, inOffset + i));\";this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${i};\\n\\n        int bestIndex = inOffset;\\n        float bestValue = getA(batch, bestIndex);\\n\\n        for (int i = 0; i < ${i}; i++) {\\n          int inIdx = ${d};\\n          float candidate = getA(batch, inIdx);\\n          if (candidate ${o} bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    `}}exports.ArgMinMaxProgram=t;"},"sourceMaps":null,"error":null,"hash":"f9eb4af236dcd8b1822dc978cc226861","cacheData":{"env":{}}}