{"id":"GLCC","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563696417},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../environment","loc":{"line":22,"column":20},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/http.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/environment.js"},{"name":"../util","loc":{"line":23,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/http.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/util.js"},{"name":"./io_utils","loc":{"line":24,"column":70},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/http.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js"},{"name":"./router_registry","loc":{"line":25,"column":33},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/http.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js"},{"name":"./weights_loader","loc":{"line":26,"column":41},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/http.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.parseUrl=h,exports.isHTTPScheme=l,exports.http=f,exports.browserHTTPRequest=c,exports.httpRouter=exports.HTTPRequest=void 0;var e=require(\"../environment\"),t=require(\"../util\"),r=require(\"./io_utils\"),o=require(\"./router_registry\"),s=require(\"./weights_loader\");const n=\"application/octet-stream\",i=\"application/json\";class a{constructor(r,o){if(this.DEFAULT_METHOD=\"POST\",null==o&&(o={}),this.weightPathPrefix=o.weightPathPrefix,this.onProgress=o.onProgress,this.weightUrlConverter=o.weightUrlConverter,null!=o.fetchFunc?((0,t.assert)(\"function\"==typeof o.fetchFunc,()=>\"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\"),this.fetch=o.fetchFunc):this.fetch=(0,e.env)().platform.fetch,(0,t.assert)(null!=r&&r.length>0,()=>\"URL path for http must not be null, undefined or empty.\"),Array.isArray(r)&&(0,t.assert)(2===r.length,()=>\"URL paths for http must have a length of 2, \"+`(actual length is ${r.length}).`),this.path=r,null!=o.requestInit&&null!=o.requestInit.body)throw new Error(\"requestInit is expected to have no pre-existing body, but has one.\");this.requestInit=o.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error(\"BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.\");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const o=[{paths:[\"./model.weights.bin\"],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:o};t.body.append(\"model.json\",new Blob([JSON.stringify(s)],{type:i}),\"model.json\"),null!=e.weightData&&t.body.append(\"model.weights.bin\",new Blob([e.weightData],{type:n}),\"model.weights.bin\");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:(0,r.getModelArtifactsInfoForJSON)(e),responses:[a]};throw new Error(\"BrowserHTTPRequest.save() failed due to HTTP response status \"+`${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+`${e.status}. Please verify this URL points to `+\"the model JSON of the model to load.\");let t;try{t=await e.json()}catch(c){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(\".pb\")?e+=\" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.\":e+=\" Please make sure the server is serving valid JSON for this request.\",new Error(e)}const r=t.modelTopology,o=t.weightsManifest,s=t.generatedBy,n=t.convertedBy,i=t.format,a=t.userDefinedMetadata;if(null==r&&null==o)throw new Error(`The JSON from HTTP path ${this.path} contains neither model `+\"topology or manifest for weights.\");let h,l;if(null!=o){const e=await this.loadWeights(o);[h,l]=e}const u={modelTopology:r,weightSpecs:h,weightData:l,userDefinedMetadata:a,generatedBy:s,convertedBy:n,format:i},f=t.modelInitializer;return f&&(u.modelInitializer=f),u}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[o,n]=h(t),i=this.weightPathPrefix||o,a=[];for(const r of e)a.push(...r.weights);const l=[],u=[];for(const r of e)for(const e of r.paths)null!=this.weightUrlConverter?u.push(this.weightUrlConverter(e)):l.push(i+e+n);this.weightUrlConverter&&l.push(...await Promise.all(u));const f=await(0,s.loadWeightsAsArrayBuffer)(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,(0,r.concatenateArrayBuffers)(f)]}}function h(e){const t=e.lastIndexOf(\"/\"),r=e.lastIndexOf(\"?\");return[e.substring(0,t)+\"/\",r>t?e.substring(r):\"\"]}function l(e){return null!=e.match(a.URL_SCHEME_REGEX)}exports.HTTPRequest=a,a.URL_SCHEME_REGEX=/^https?:\\/\\//;const u=(e,t)=>{if(\"undefined\"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let r=!0;if(r=Array.isArray(e)?e.every(e=>l(e)):l(e))return f(e,t)}return null};function f(e,t){return new a(e,t)}function c(e,t){return f(e,t)}exports.httpRouter=u,o.IORouterRegistry.registerSaveRouter(u),o.IORouterRegistry.registerLoadRouter(u);"},"sourceMaps":null,"error":null,"hash":"4dcf11b53a3366f68da8834522126da4","cacheData":{"env":{}}}