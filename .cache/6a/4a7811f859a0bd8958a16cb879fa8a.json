{"id":"p438","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/strided_slice.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/src/public/chained_ops/strided_slice.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../ops/ops","loc":{"line":18,"column":29},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/strided_slice.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/ops/ops.js"},{"name":"../../tensor","loc":{"line":19,"column":23},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/strided_slice.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/tensor.js"}],"generated":{"js":"\"use strict\";var e=require(\"../../ops/ops\"),r=require(\"../../tensor\");r.Tensor.prototype.stridedSlice=function(r,s,t,i,o,d,n,p){return this.throwIfDisposed(),(0,e.stridedSlice)(this,r,s,t,i,o,d,n,p)};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":17}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":19}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":27}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":44}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":46}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":54}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":1,"column":70}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":32,"column":7},"generated":{"line":1,"column":72}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":32,"column":7},"generated":{"line":1,"column":79}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":32,"column":17},"generated":{"line":1,"column":89}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":32,"column":32},"generated":{"line":1,"column":102}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":33,"column":18},"generated":{"line":1,"column":111}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":1,"column":113}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":33,"column":50},"generated":{"line":1,"column":115}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":1,"column":117}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":1,"column":119}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":34,"column":42},"generated":{"line":1,"column":121}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":123}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":35,"column":26},"generated":{"line":1,"column":125}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":1,"column":128}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":135}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":140}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":1,"column":159}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":1,"column":161}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":1,"column":163}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":1,"column":177}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":1,"column":182}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":26},"generated":{"line":1,"column":184}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":31},"generated":{"line":1,"column":186}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":40},"generated":{"line":1,"column":188}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":51},"generated":{"line":1,"column":190}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":38,"column":60},"generated":{"line":1,"column":192}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":39,"column":13},"generated":{"line":1,"column":194}},{"source":"../../../src/public/chained_ops/strided_slice.ts","name":null,"original":{"line":39,"column":26},"generated":{"line":1,"column":196}}],"sources":{"../../../src/public/chained_ops/strided_slice.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// TODO update import path once op is modularized.\nimport {stridedSlice} from '../../ops/ops';\nimport {Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    stridedSlice<T extends Tensor>(\n        this: Tensor, begin: number[], end: number[], strides: number[],\n        beginMask?: number, endMask?: number, ellipsisMask?: number,\n        newAxisMask?: number, shrinkAxisMask?: number): Tensor;\n  }\n}\n\nTensor.prototype.stridedSlice = function<T extends Tensor>(\n    this: Tensor, begin: number[], end: number[], strides: number[],\n    beginMask?: number, endMask?: number, ellipsisMask?: number,\n    newAxisMask?: number, shrinkAxisMask?: number): T {\n  this.throwIfDisposed();\n  return stridedSlice(\n             this, begin, end, strides, beginMask, endMask, ellipsisMask,\n             newAxisMask, shrinkAxisMask) as T;\n};\n"},"lineCount":null}},"error":null,"hash":"1f7560cd1eaa230043e7e95ebed23d87","cacheData":{"env":{}}}