{"id":"../node_modules/@tensorflow/tfjs-layers/dist/exports_metrics.js","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/exports_metrics.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/src/exports_metrics.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609039238895},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":499162500000},{"name":"./losses","loc":{"line":1,"column":24},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/exports_metrics.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/losses.js"},{"name":"./metrics","loc":{"line":2,"column":25},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/exports_metrics.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-layers/dist/metrics.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.binaryAccuracy = binaryAccuracy;\nexports.binaryCrossentropy = binaryCrossentropy;\nexports.sparseCategoricalAccuracy = sparseCategoricalAccuracy;\nexports.categoricalAccuracy = categoricalAccuracy;\nexports.categoricalCrossentropy = categoricalCrossentropy;\nexports.precision = precision;\nexports.recall = recall;\nexports.cosineProximity = cosineProximity;\nexports.meanAbsoluteError = meanAbsoluteError;\nexports.meanAbsolutePercentageError = meanAbsolutePercentageError;\nexports.MAPE = MAPE;\nexports.mape = mape;\nexports.meanSquaredError = meanSquaredError;\nexports.MSE = MSE;\nexports.mse = mse;\n\nvar losses = _interopRequireWildcard(require(\"./losses\"));\n\nvar metrics = _interopRequireWildcard(require(\"./metrics\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Binary accuracy metric function.\n *\n * `yTrue` and `yPred` can have 0-1 values. Example:\n * ```js\n * const x = tf.tensor2d([[1, 1, 1, 1], [0, 0, 0, 0]], [2, 4]);\n * const y = tf.tensor2d([[1, 0, 1, 0], [0, 0, 0, 1]], [2, 4]);\n * const accuracy = tf.metrics.binaryAccuracy(x, y);\n * accuracy.print();\n * ```\n *\n * `yTrue` and `yPred` can also have floating-number values between 0 and 1, in\n * which case the values will be thresholded at 0.5 to yield 0-1 values (i.e.,\n * a value >= 0.5 and <= 1.0 is interpreted as 1.\n * )\n * Example:\n * ```js\n * const x = tf.tensor1d([1, 1, 1, 1, 0, 0, 0, 0]);\n * const y = tf.tensor1d([0.2, 0.4, 0.6, 0.8, 0.2, 0.3, 0.4, 0.7]);\n * const accuracy = tf.metrics.binaryAccuracy(x, y);\n * accuracy.print();\n * ```\n *\n * @param yTrue Binary Tensor of truth.\n * @param yPred Binary Tensor of prediction.\n * @return Accuracy Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nfunction binaryAccuracy(yTrue, yPred) {\n  return metrics.binaryAccuracy(yTrue, yPred);\n}\n/**\n * Binary crossentropy metric function.\n *\n * Example:\n * ```js\n * const x = tf.tensor2d([[0], [1], [1], [1]]);\n * const y = tf.tensor2d([[0], [0], [0.5], [1]]);\n * const crossentropy = tf.metrics.binaryCrossentropy(x, y);\n * crossentropy.print();\n * ```\n *\n * @param yTrue Binary Tensor of truth.\n * @param yPred Binary Tensor of prediction, probabilities for the `1` case.\n * @return Accuracy Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction binaryCrossentropy(yTrue, yPred) {\n  return metrics.binaryCrossentropy(yTrue, yPred);\n}\n/**\n * Sparse categorical accuracy metric function.\n *\n * Example:\n * ```js\n *\n * const yTrue = tf.tensor1d([1, 1, 2, 2, 0]);\n * const yPred = tf.tensor2d(\n *      [[0, 1, 0], [1, 0, 0], [0, 0.4, 0.6], [0, 0.6, 0.4], [0.7, 0.3, 0]]);\n * const crossentropy = tf.metrics.sparseCategoricalAccuracy(yTrue, yPred);\n * crossentropy.print();\n * ```\n *\n * @param yTrue True labels: indices.\n * @param yPred Predicted probabilities or logits.\n * @returns Accuracy tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction sparseCategoricalAccuracy(yTrue, yPred) {\n  return metrics.sparseCategoricalAccuracy(yTrue, yPred);\n}\n/**\n * Categorical accuracy metric function.\n *\n * Example:\n * ```js\n * const x = tf.tensor2d([[0, 0, 0, 1], [0, 0, 0, 1]]);\n * const y = tf.tensor2d([[0.1, 0.8, 0.05, 0.05], [0.1, 0.05, 0.05, 0.8]]);\n * const accuracy = tf.metrics.categoricalAccuracy(x, y);\n * accuracy.print();\n * ```\n *\n * @param yTrue Binary Tensor of truth: one-hot encoding of categories.\n * @param yPred Binary Tensor of prediction: probabilities or logits for the\n *   same categories as in `yTrue`.\n * @return Accuracy Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction categoricalAccuracy(yTrue, yPred) {\n  return metrics.categoricalAccuracy(yTrue, yPred);\n}\n/**\n * Categorical crossentropy between an output tensor and a target tensor.\n *\n * @param target A tensor of the same shape as `output`.\n * @param output A tensor resulting from a softmax (unless `fromLogits` is\n *  `true`, in which case `output` is expected to be the logits).\n * @param fromLogits Boolean, whether `output` is the result of a softmax, or is\n *   a tensor of logits.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction categoricalCrossentropy(yTrue, yPred) {\n  return metrics.categoricalCrossentropy(yTrue, yPred);\n}\n/**\n * Computes the precision of the predictions with respect to the labels.\n *\n * Example:\n * ```js\n * const x = tf.tensor2d(\n *    [\n *      [0, 0, 0, 1],\n *      [0, 1, 0, 0],\n *      [0, 0, 0, 1],\n *      [1, 0, 0, 0],\n *      [0, 0, 1, 0]\n *    ]\n * );\n *\n * const y = tf.tensor2d(\n *    [\n *      [0, 0, 1, 0],\n *      [0, 1, 0, 0],\n *      [0, 0, 0, 1],\n *      [0, 1, 0, 0],\n *      [0, 1, 0, 0]\n *    ]\n * );\n *\n * const precision = tf.metrics.precision(x, y);\n * precision.print();\n * ```\n *\n * @param yTrue The ground truth values. Expected to be contain only 0-1 values.\n * @param yPred The predicted values. Expected to be contain only 0-1 values.\n * @return Precision Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction precision(yTrue, yPred) {\n  return metrics.precision(yTrue, yPred);\n}\n/**\n * Computes the recall of the predictions with respect to the labels.\n *\n * Example:\n * ```js\n * const x = tf.tensor2d(\n *    [\n *      [0, 0, 0, 1],\n *      [0, 1, 0, 0],\n *      [0, 0, 0, 1],\n *      [1, 0, 0, 0],\n *      [0, 0, 1, 0]\n *    ]\n * );\n *\n * const y = tf.tensor2d(\n *    [\n *      [0, 0, 1, 0],\n *      [0, 1, 0, 0],\n *      [0, 0, 0, 1],\n *      [0, 1, 0, 0],\n *      [0, 1, 0, 0]\n *    ]\n * );\n *\n * const recall = tf.metrics.recall(x, y);\n * recall.print();\n * ```\n *\n * @param yTrue The ground truth values. Expected to be contain only 0-1 values.\n * @param yPred The predicted values. Expected to be contain only 0-1 values.\n * @return Recall Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction recall(yTrue, yPred) {\n  return metrics.recall(yTrue, yPred);\n}\n/**\n * Loss or metric function: Cosine proximity.\n *\n * Mathematically, cosine proximity is defined as:\n *   `-sum(l2Normalize(yTrue) * l2Normalize(yPred))`,\n * wherein `l2Normalize()` normalizes the L2 norm of the input to 1 and `*`\n * represents element-wise multiplication.\n *\n * ```js\n * const yTrue = tf.tensor2d([[1, 0], [1, 0]]);\n * const yPred = tf.tensor2d([[1 / Math.sqrt(2), 1 / Math.sqrt(2)], [0, 1]]);\n * const proximity = tf.metrics.cosineProximity(yTrue, yPred);\n * proximity.print();\n * ```\n *\n * @param yTrue Truth Tensor.\n * @param yPred Prediction Tensor.\n * @return Cosine proximity Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction cosineProximity(yTrue, yPred) {\n  return losses.cosineProximity(yTrue, yPred);\n}\n/**\n * Loss or metric function: Mean absolute error.\n *\n * Mathematically, mean absolute error is defined as:\n *   `mean(abs(yPred - yTrue))`,\n * wherein the `mean` is applied over feature dimensions.\n *\n * ```js\n * const yTrue = tf.tensor2d([[0, 1], [0, 0], [2, 3]]);\n * const yPred = tf.tensor2d([[0, 1], [0, 1], [-2, -3]]);\n * const mse = tf.metrics.meanAbsoluteError(yTrue, yPred);\n * mse.print();\n * ```\n *\n * @param yTrue Truth Tensor.\n * @param yPred Prediction Tensor.\n * @return Mean absolute error Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction meanAbsoluteError(yTrue, yPred) {\n  return losses.meanAbsoluteError(yTrue, yPred);\n}\n/**\n * Loss or metric function: Mean absolute percentage error.\n *\n * ```js\n * const yTrue = tf.tensor2d([[0, 1], [10, 20]]);\n * const yPred = tf.tensor2d([[0, 1], [11, 24]]);\n * const mse = tf.metrics.meanAbsolutePercentageError(yTrue, yPred);\n * mse.print();\n * ```\n *\n * Aliases: `tf.metrics.MAPE`, `tf.metrics.mape`.\n *\n * @param yTrue Truth Tensor.\n * @param yPred Prediction Tensor.\n * @return Mean absolute percentage error Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction meanAbsolutePercentageError(yTrue, yPred) {\n  return losses.meanAbsolutePercentageError(yTrue, yPred);\n}\n\nfunction MAPE(yTrue, yPred) {\n  return losses.meanAbsolutePercentageError(yTrue, yPred);\n}\n\nfunction mape(yTrue, yPred) {\n  return losses.meanAbsolutePercentageError(yTrue, yPred);\n}\n/**\n * Loss or metric function: Mean squared error.\n *\n * ```js\n * const yTrue = tf.tensor2d([[0, 1], [3, 4]]);\n * const yPred = tf.tensor2d([[0, 1], [-3, -4]]);\n * const mse = tf.metrics.meanSquaredError(yTrue, yPred);\n * mse.print();\n * ```\n *\n * Aliases: `tf.metrics.MSE`, `tf.metrics.mse`.\n *\n * @param yTrue Truth Tensor.\n * @param yPred Prediction Tensor.\n * @return Mean squared error Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\n\n\nfunction meanSquaredError(yTrue, yPred) {\n  return losses.meanSquaredError(yTrue, yPred);\n}\n\nfunction MSE(yTrue, yPred) {\n  return losses.meanSquaredError(yTrue, yPred);\n}\n\nfunction mse(yTrue, yPred) {\n  return losses.meanSquaredError(yTrue, yPred);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/exports_metrics.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":22,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":24,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":30,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":59,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":44,"column":16},"generated":{"line":59,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":59,"column":23}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":44,"column":31},"generated":{"line":59,"column":24}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":59,"column":29}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":44,"column":46},"generated":{"line":59,"column":31}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":59,"column":36}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":44,"column":59},"generated":{"line":59,"column":38}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":60,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":9},"generated":{"line":60,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":16},"generated":{"line":60,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":17},"generated":{"line":60,"column":17}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":9},"generated":{"line":60,"column":31}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":32},"generated":{"line":60,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":9},"generated":{"line":60,"column":37}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":39},"generated":{"line":60,"column":39}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":9},"generated":{"line":60,"column":44}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":60,"column":45}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":46,"column":1},"generated":{"line":61,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":62,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":81,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":65,"column":16},"generated":{"line":81,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":81,"column":27}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":65,"column":35},"generated":{"line":81,"column":28}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":81,"column":33}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":65,"column":50},"generated":{"line":81,"column":35}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":81,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":65,"column":63},"generated":{"line":81,"column":42}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":82,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":82,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":16},"generated":{"line":82,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":82,"column":17}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":82,"column":35}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":36},"generated":{"line":82,"column":36}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":82,"column":41}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":43},"generated":{"line":82,"column":43}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":82,"column":48}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":82,"column":49}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":83,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":69,"column":0},"generated":{"line":84,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":105,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":88,"column":16},"generated":{"line":105,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":105,"column":34}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":89,"column":4},"generated":{"line":105,"column":35}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":105,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":89,"column":19},"generated":{"line":105,"column":42}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":105,"column":47}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":89,"column":32},"generated":{"line":105,"column":49}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":106,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":106,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":16},"generated":{"line":106,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":17},"generated":{"line":106,"column":17}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":106,"column":42}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":43},"generated":{"line":106,"column":43}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":106,"column":48}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":50},"generated":{"line":106,"column":50}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":106,"column":55}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":106,"column":56}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":107,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":93,"column":0},"generated":{"line":108,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":111,"column":6},"generated":{"line":128,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":111,"column":16},"generated":{"line":128,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":111,"column":6},"generated":{"line":128,"column":28}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":111,"column":36},"generated":{"line":128,"column":29}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":111,"column":6},"generated":{"line":128,"column":34}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":111,"column":51},"generated":{"line":128,"column":36}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":111,"column":6},"generated":{"line":128,"column":41}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":111,"column":64},"generated":{"line":128,"column":43}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":129,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":129,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":16},"generated":{"line":129,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":17},"generated":{"line":129,"column":17}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":129,"column":36}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":37},"generated":{"line":129,"column":37}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":129,"column":42}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":44},"generated":{"line":129,"column":44}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":129,"column":49}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":129,"column":50}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":130,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":115,"column":0},"generated":{"line":131,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":126,"column":6},"generated":{"line":144,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":126,"column":16},"generated":{"line":144,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":126,"column":6},"generated":{"line":144,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":126,"column":40},"generated":{"line":144,"column":33}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":126,"column":6},"generated":{"line":144,"column":38}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":126,"column":55},"generated":{"line":144,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":126,"column":6},"generated":{"line":144,"column":45}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":126,"column":68},"generated":{"line":144,"column":47}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":2},"generated":{"line":145,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":9},"generated":{"line":145,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":16},"generated":{"line":145,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":17},"generated":{"line":145,"column":17}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":9},"generated":{"line":145,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":41},"generated":{"line":145,"column":41}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":9},"generated":{"line":145,"column":46}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":48},"generated":{"line":145,"column":48}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":9},"generated":{"line":145,"column":53}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":127,"column":2},"generated":{"line":145,"column":54}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":128,"column":1},"generated":{"line":146,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":130,"column":0},"generated":{"line":147,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":165,"column":6},"generated":{"line":184,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":165,"column":16},"generated":{"line":184,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":165,"column":6},"generated":{"line":184,"column":18}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":165,"column":26},"generated":{"line":184,"column":19}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":165,"column":6},"generated":{"line":184,"column":24}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":165,"column":41},"generated":{"line":184,"column":26}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":165,"column":6},"generated":{"line":184,"column":31}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":165,"column":54},"generated":{"line":184,"column":33}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":2},"generated":{"line":185,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":9},"generated":{"line":185,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":16},"generated":{"line":185,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":17},"generated":{"line":185,"column":17}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":9},"generated":{"line":185,"column":26}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":27},"generated":{"line":185,"column":27}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":9},"generated":{"line":185,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":34},"generated":{"line":185,"column":34}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":9},"generated":{"line":185,"column":39}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":166,"column":2},"generated":{"line":185,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":167,"column":1},"generated":{"line":186,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":169,"column":0},"generated":{"line":187,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":204,"column":6},"generated":{"line":224,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":204,"column":16},"generated":{"line":224,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":204,"column":6},"generated":{"line":224,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":204,"column":23},"generated":{"line":224,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":204,"column":6},"generated":{"line":224,"column":21}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":204,"column":38},"generated":{"line":224,"column":23}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":204,"column":6},"generated":{"line":224,"column":28}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":204,"column":51},"generated":{"line":224,"column":30}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":2},"generated":{"line":225,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":9},"generated":{"line":225,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":16},"generated":{"line":225,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":17},"generated":{"line":225,"column":17}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":9},"generated":{"line":225,"column":23}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":24},"generated":{"line":225,"column":24}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":9},"generated":{"line":225,"column":29}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":31},"generated":{"line":225,"column":31}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":9},"generated":{"line":225,"column":36}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":205,"column":2},"generated":{"line":225,"column":37}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":206,"column":1},"generated":{"line":226,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":208,"column":0},"generated":{"line":227,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":229,"column":6},"generated":{"line":250,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":229,"column":16},"generated":{"line":250,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":229,"column":6},"generated":{"line":250,"column":24}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":229,"column":32},"generated":{"line":250,"column":25}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":229,"column":6},"generated":{"line":250,"column":30}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":229,"column":47},"generated":{"line":250,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":229,"column":6},"generated":{"line":250,"column":37}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":229,"column":60},"generated":{"line":250,"column":39}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":2},"generated":{"line":251,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":9},"generated":{"line":251,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":15},"generated":{"line":251,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":16},"generated":{"line":251,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":9},"generated":{"line":251,"column":31}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":32},"generated":{"line":251,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":9},"generated":{"line":251,"column":37}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":39},"generated":{"line":251,"column":39}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":9},"generated":{"line":251,"column":44}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":230,"column":2},"generated":{"line":251,"column":45}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":231,"column":1},"generated":{"line":252,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":233,"column":0},"generated":{"line":253,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":253,"column":6},"generated":{"line":275,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":253,"column":16},"generated":{"line":275,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":253,"column":6},"generated":{"line":275,"column":26}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":253,"column":34},"generated":{"line":275,"column":27}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":253,"column":6},"generated":{"line":275,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":253,"column":49},"generated":{"line":275,"column":34}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":253,"column":6},"generated":{"line":275,"column":39}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":253,"column":62},"generated":{"line":275,"column":41}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":2},"generated":{"line":276,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":9},"generated":{"line":276,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":15},"generated":{"line":276,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":16},"generated":{"line":276,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":9},"generated":{"line":276,"column":33}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":34},"generated":{"line":276,"column":34}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":9},"generated":{"line":276,"column":39}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":41},"generated":{"line":276,"column":41}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":9},"generated":{"line":276,"column":46}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":254,"column":2},"generated":{"line":276,"column":47}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":255,"column":1},"generated":{"line":277,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":257,"column":0},"generated":{"line":278,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":275,"column":6},"generated":{"line":298,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":275,"column":16},"generated":{"line":298,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":275,"column":6},"generated":{"line":298,"column":36}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":276,"column":4},"generated":{"line":298,"column":37}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":275,"column":6},"generated":{"line":298,"column":42}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":276,"column":19},"generated":{"line":298,"column":44}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":275,"column":6},"generated":{"line":298,"column":49}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":276,"column":32},"generated":{"line":298,"column":51}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":2},"generated":{"line":299,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":9},"generated":{"line":299,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":15},"generated":{"line":299,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":16},"generated":{"line":299,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":9},"generated":{"line":299,"column":43}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":44},"generated":{"line":299,"column":44}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":9},"generated":{"line":299,"column":49}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":51},"generated":{"line":299,"column":51}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":9},"generated":{"line":299,"column":56}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":277,"column":2},"generated":{"line":299,"column":57}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":278,"column":1},"generated":{"line":300,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":280,"column":6},"generated":{"line":302,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":280,"column":16},"generated":{"line":302,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":280,"column":6},"generated":{"line":302,"column":13}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":280,"column":21},"generated":{"line":302,"column":14}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":280,"column":6},"generated":{"line":302,"column":19}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":280,"column":36},"generated":{"line":302,"column":21}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":280,"column":6},"generated":{"line":302,"column":26}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":280,"column":49},"generated":{"line":302,"column":28}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":2},"generated":{"line":303,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":9},"generated":{"line":303,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":15},"generated":{"line":303,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":16},"generated":{"line":303,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":9},"generated":{"line":303,"column":43}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":44},"generated":{"line":303,"column":44}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":9},"generated":{"line":303,"column":49}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":51},"generated":{"line":303,"column":51}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":9},"generated":{"line":303,"column":56}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":281,"column":2},"generated":{"line":303,"column":57}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":282,"column":1},"generated":{"line":304,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":284,"column":6},"generated":{"line":306,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":284,"column":16},"generated":{"line":306,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":284,"column":6},"generated":{"line":306,"column":13}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":284,"column":21},"generated":{"line":306,"column":14}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":284,"column":6},"generated":{"line":306,"column":19}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":284,"column":36},"generated":{"line":306,"column":21}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":284,"column":6},"generated":{"line":306,"column":26}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":284,"column":49},"generated":{"line":306,"column":28}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":2},"generated":{"line":307,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":9},"generated":{"line":307,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":15},"generated":{"line":307,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":16},"generated":{"line":307,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":9},"generated":{"line":307,"column":43}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":44},"generated":{"line":307,"column":44}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":9},"generated":{"line":307,"column":49}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":51},"generated":{"line":307,"column":51}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":9},"generated":{"line":307,"column":56}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":285,"column":2},"generated":{"line":307,"column":57}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":286,"column":1},"generated":{"line":308,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":288,"column":0},"generated":{"line":309,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":306,"column":6},"generated":{"line":329,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":306,"column":16},"generated":{"line":329,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":306,"column":6},"generated":{"line":329,"column":25}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":306,"column":33},"generated":{"line":329,"column":26}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":306,"column":6},"generated":{"line":329,"column":31}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":306,"column":48},"generated":{"line":329,"column":33}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":306,"column":6},"generated":{"line":329,"column":38}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":306,"column":61},"generated":{"line":329,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":2},"generated":{"line":330,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":9},"generated":{"line":330,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":15},"generated":{"line":330,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":16},"generated":{"line":330,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":9},"generated":{"line":330,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":33},"generated":{"line":330,"column":33}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":9},"generated":{"line":330,"column":38}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":40},"generated":{"line":330,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":9},"generated":{"line":330,"column":45}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":307,"column":2},"generated":{"line":330,"column":46}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":308,"column":1},"generated":{"line":331,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":310,"column":6},"generated":{"line":333,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":310,"column":16},"generated":{"line":333,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":310,"column":6},"generated":{"line":333,"column":12}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":310,"column":20},"generated":{"line":333,"column":13}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":310,"column":6},"generated":{"line":333,"column":18}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":310,"column":35},"generated":{"line":333,"column":20}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":310,"column":6},"generated":{"line":333,"column":25}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":310,"column":48},"generated":{"line":333,"column":27}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":2},"generated":{"line":334,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":9},"generated":{"line":334,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":15},"generated":{"line":334,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":16},"generated":{"line":334,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":9},"generated":{"line":334,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":33},"generated":{"line":334,"column":33}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":9},"generated":{"line":334,"column":38}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":40},"generated":{"line":334,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":9},"generated":{"line":334,"column":45}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":311,"column":2},"generated":{"line":334,"column":46}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":312,"column":1},"generated":{"line":335,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":314,"column":6},"generated":{"line":337,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":314,"column":16},"generated":{"line":337,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":314,"column":6},"generated":{"line":337,"column":12}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":314,"column":20},"generated":{"line":337,"column":13}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":314,"column":6},"generated":{"line":337,"column":18}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":314,"column":35},"generated":{"line":337,"column":20}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":314,"column":6},"generated":{"line":337,"column":25}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":314,"column":48},"generated":{"line":337,"column":27}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":2},"generated":{"line":338,"column":0}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":9},"generated":{"line":338,"column":9}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":15},"generated":{"line":338,"column":15}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":16},"generated":{"line":338,"column":16}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":9},"generated":{"line":338,"column":32}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":33},"generated":{"line":338,"column":33}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":9},"generated":{"line":338,"column":38}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":40},"generated":{"line":338,"column":40}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":9},"generated":{"line":338,"column":45}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":315,"column":2},"generated":{"line":338,"column":46}},{"source":"../src/exports_metrics.ts","name":null,"original":{"line":316,"column":1},"generated":{"line":339,"column":0}}],"sources":{"../src/exports_metrics.ts":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport {Tensor} from '@tensorflow/tfjs-core';\n\nimport * as losses from './losses';\nimport * as metrics from './metrics';\n\n/**\n * Binary accuracy metric function.\n *\n * `yTrue` and `yPred` can have 0-1 values. Example:\n * ```js\n * const x = tf.tensor2d([[1, 1, 1, 1], [0, 0, 0, 0]], [2, 4]);\n * const y = tf.tensor2d([[1, 0, 1, 0], [0, 0, 0, 1]], [2, 4]);\n * const accuracy = tf.metrics.binaryAccuracy(x, y);\n * accuracy.print();\n * ```\n *\n * `yTrue` and `yPred` can also have floating-number values between 0 and 1, in\n * which case the values will be thresholded at 0.5 to yield 0-1 values (i.e.,\n * a value >= 0.5 and <= 1.0 is interpreted as 1.\n * )\n * Example:\n * ```js\n * const x = tf.tensor1d([1, 1, 1, 1, 0, 0, 0, 0]);\n * const y = tf.tensor1d([0.2, 0.4, 0.6, 0.8, 0.2, 0.3, 0.4, 0.7]);\n * const accuracy = tf.metrics.binaryAccuracy(x, y);\n * accuracy.print();\n * ```\n *\n * @param yTrue Binary Tensor of truth.\n * @param yPred Binary Tensor of prediction.\n * @return Accuracy Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function binaryAccuracy(yTrue: Tensor, yPred: Tensor): Tensor {\n  return metrics.binaryAccuracy(yTrue, yPred);\n}\n\n/**\n * Binary crossentropy metric function.\n *\n * Example:\n * ```js\n * const x = tf.tensor2d([[0], [1], [1], [1]]);\n * const y = tf.tensor2d([[0], [0], [0.5], [1]]);\n * const crossentropy = tf.metrics.binaryCrossentropy(x, y);\n * crossentropy.print();\n * ```\n *\n * @param yTrue Binary Tensor of truth.\n * @param yPred Binary Tensor of prediction, probabilities for the `1` case.\n * @return Accuracy Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function binaryCrossentropy(yTrue: Tensor, yPred: Tensor): Tensor {\n  return metrics.binaryCrossentropy(yTrue, yPred);\n}\n\n/**\n * Sparse categorical accuracy metric function.\n *\n * Example:\n * ```js\n *\n * const yTrue = tf.tensor1d([1, 1, 2, 2, 0]);\n * const yPred = tf.tensor2d(\n *      [[0, 1, 0], [1, 0, 0], [0, 0.4, 0.6], [0, 0.6, 0.4], [0.7, 0.3, 0]]);\n * const crossentropy = tf.metrics.sparseCategoricalAccuracy(yTrue, yPred);\n * crossentropy.print();\n * ```\n *\n * @param yTrue True labels: indices.\n * @param yPred Predicted probabilities or logits.\n * @returns Accuracy tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function sparseCategoricalAccuracy(\n    yTrue: Tensor, yPred: Tensor): Tensor {\n  return metrics.sparseCategoricalAccuracy(yTrue, yPred);\n}\n\n/**\n * Categorical accuracy metric function.\n *\n * Example:\n * ```js\n * const x = tf.tensor2d([[0, 0, 0, 1], [0, 0, 0, 1]]);\n * const y = tf.tensor2d([[0.1, 0.8, 0.05, 0.05], [0.1, 0.05, 0.05, 0.8]]);\n * const accuracy = tf.metrics.categoricalAccuracy(x, y);\n * accuracy.print();\n * ```\n *\n * @param yTrue Binary Tensor of truth: one-hot encoding of categories.\n * @param yPred Binary Tensor of prediction: probabilities or logits for the\n *   same categories as in `yTrue`.\n * @return Accuracy Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function categoricalAccuracy(yTrue: Tensor, yPred: Tensor): Tensor {\n  return metrics.categoricalAccuracy(yTrue, yPred);\n}\n\n/**\n * Categorical crossentropy between an output tensor and a target tensor.\n *\n * @param target A tensor of the same shape as `output`.\n * @param output A tensor resulting from a softmax (unless `fromLogits` is\n *  `true`, in which case `output` is expected to be the logits).\n * @param fromLogits Boolean, whether `output` is the result of a softmax, or is\n *   a tensor of logits.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function categoricalCrossentropy(yTrue: Tensor, yPred: Tensor): Tensor {\n  return metrics.categoricalCrossentropy(yTrue, yPred);\n}\n\n/**\n * Computes the precision of the predictions with respect to the labels.\n *\n * Example:\n * ```js\n * const x = tf.tensor2d(\n *    [\n *      [0, 0, 0, 1],\n *      [0, 1, 0, 0],\n *      [0, 0, 0, 1],\n *      [1, 0, 0, 0],\n *      [0, 0, 1, 0]\n *    ]\n * );\n *\n * const y = tf.tensor2d(\n *    [\n *      [0, 0, 1, 0],\n *      [0, 1, 0, 0],\n *      [0, 0, 0, 1],\n *      [0, 1, 0, 0],\n *      [0, 1, 0, 0]\n *    ]\n * );\n *\n * const precision = tf.metrics.precision(x, y);\n * precision.print();\n * ```\n *\n * @param yTrue The ground truth values. Expected to be contain only 0-1 values.\n * @param yPred The predicted values. Expected to be contain only 0-1 values.\n * @return Precision Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function precision(yTrue: Tensor, yPred: Tensor): Tensor {\n  return metrics.precision(yTrue, yPred);\n}\n\n/**\n * Computes the recall of the predictions with respect to the labels.\n *\n * Example:\n * ```js\n * const x = tf.tensor2d(\n *    [\n *      [0, 0, 0, 1],\n *      [0, 1, 0, 0],\n *      [0, 0, 0, 1],\n *      [1, 0, 0, 0],\n *      [0, 0, 1, 0]\n *    ]\n * );\n *\n * const y = tf.tensor2d(\n *    [\n *      [0, 0, 1, 0],\n *      [0, 1, 0, 0],\n *      [0, 0, 0, 1],\n *      [0, 1, 0, 0],\n *      [0, 1, 0, 0]\n *    ]\n * );\n *\n * const recall = tf.metrics.recall(x, y);\n * recall.print();\n * ```\n *\n * @param yTrue The ground truth values. Expected to be contain only 0-1 values.\n * @param yPred The predicted values. Expected to be contain only 0-1 values.\n * @return Recall Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function recall(yTrue: Tensor, yPred: Tensor): Tensor {\n  return metrics.recall(yTrue, yPred);\n}\n\n/**\n * Loss or metric function: Cosine proximity.\n *\n * Mathematically, cosine proximity is defined as:\n *   `-sum(l2Normalize(yTrue) * l2Normalize(yPred))`,\n * wherein `l2Normalize()` normalizes the L2 norm of the input to 1 and `*`\n * represents element-wise multiplication.\n *\n * ```js\n * const yTrue = tf.tensor2d([[1, 0], [1, 0]]);\n * const yPred = tf.tensor2d([[1 / Math.sqrt(2), 1 / Math.sqrt(2)], [0, 1]]);\n * const proximity = tf.metrics.cosineProximity(yTrue, yPred);\n * proximity.print();\n * ```\n *\n * @param yTrue Truth Tensor.\n * @param yPred Prediction Tensor.\n * @return Cosine proximity Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function cosineProximity(yTrue: Tensor, yPred: Tensor): Tensor {\n  return losses.cosineProximity(yTrue, yPred);\n}\n\n/**\n * Loss or metric function: Mean absolute error.\n *\n * Mathematically, mean absolute error is defined as:\n *   `mean(abs(yPred - yTrue))`,\n * wherein the `mean` is applied over feature dimensions.\n *\n * ```js\n * const yTrue = tf.tensor2d([[0, 1], [0, 0], [2, 3]]);\n * const yPred = tf.tensor2d([[0, 1], [0, 1], [-2, -3]]);\n * const mse = tf.metrics.meanAbsoluteError(yTrue, yPred);\n * mse.print();\n * ```\n *\n * @param yTrue Truth Tensor.\n * @param yPred Prediction Tensor.\n * @return Mean absolute error Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function meanAbsoluteError(yTrue: Tensor, yPred: Tensor): Tensor {\n  return losses.meanAbsoluteError(yTrue, yPred);\n}\n\n/**\n * Loss or metric function: Mean absolute percentage error.\n *\n * ```js\n * const yTrue = tf.tensor2d([[0, 1], [10, 20]]);\n * const yPred = tf.tensor2d([[0, 1], [11, 24]]);\n * const mse = tf.metrics.meanAbsolutePercentageError(yTrue, yPred);\n * mse.print();\n * ```\n *\n * Aliases: `tf.metrics.MAPE`, `tf.metrics.mape`.\n *\n * @param yTrue Truth Tensor.\n * @param yPred Prediction Tensor.\n * @return Mean absolute percentage error Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function meanAbsolutePercentageError(\n    yTrue: Tensor, yPred: Tensor): Tensor {\n  return losses.meanAbsolutePercentageError(yTrue, yPred);\n}\n\nexport function MAPE(yTrue: Tensor, yPred: Tensor): Tensor {\n  return losses.meanAbsolutePercentageError(yTrue, yPred);\n}\n\nexport function mape(yTrue: Tensor, yPred: Tensor): Tensor {\n  return losses.meanAbsolutePercentageError(yTrue, yPred);\n}\n\n/**\n * Loss or metric function: Mean squared error.\n *\n * ```js\n * const yTrue = tf.tensor2d([[0, 1], [3, 4]]);\n * const yPred = tf.tensor2d([[0, 1], [-3, -4]]);\n * const mse = tf.metrics.meanSquaredError(yTrue, yPred);\n * mse.print();\n * ```\n *\n * Aliases: `tf.metrics.MSE`, `tf.metrics.mse`.\n *\n * @param yTrue Truth Tensor.\n * @param yPred Prediction Tensor.\n * @return Mean squared error Tensor.\n *\n * @doc {heading: 'Metrics', namespace: 'metrics'}\n */\nexport function meanSquaredError(yTrue: Tensor, yPred: Tensor): Tensor {\n  return losses.meanSquaredError(yTrue, yPred);\n}\n\nexport function MSE(yTrue: Tensor, yPred: Tensor): Tensor {\n  return losses.meanSquaredError(yTrue, yPred);\n}\n\nexport function mse(yTrue: Tensor, yPred: Tensor): Tensor {\n  return losses.meanSquaredError(yTrue, yPred);\n}\n"},"lineCount":null}},"error":null,"hash":"23016ef4bf984743983d6e5ad2a4fe86","cacheData":{"env":{}}}