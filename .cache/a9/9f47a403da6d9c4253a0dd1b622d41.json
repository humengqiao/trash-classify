{"id":"wLsA","dependencies":[{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/dataset.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/src/dataset.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/package.json","includedInParent":true,"mtime":1609563562293},{"name":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/package.json","includedInParent":true,"mtime":499162500000},{"name":"@tensorflow/tfjs-core","loc":{"line":18,"column":20},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/dataset.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"seedrandom","loc":{"line":19,"column":28},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/dataset.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/seedrandom/index.js"},{"name":"./iterators/lazy_iterator","loc":{"line":20,"column":119},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/dataset.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/iterators/lazy_iterator.js"},{"name":"./util/deep_map","loc":{"line":21,"column":61},"parent":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/dataset.js","resolved":"/Users/humengqiao/Desktop/node-project/trash-classify/node_modules/@tensorflow/tfjs-data/dist/util/deep_map.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.datasetFromIteratorFn=o,exports.array=u,exports.zip=l,exports.Dataset=void 0;var t=n(require(\"@tensorflow/tfjs-core\")),e=n(require(\"seedrandom\")),r=require(\"./iterators/lazy_iterator\"),i=require(\"./util/deep_map\");function s(){if(\"function\"!=typeof WeakMap)return null;var t=new WeakMap;return s=function(){return t},t}function n(t){if(t&&t.__esModule)return t;if(null===t||\"object\"!=typeof t&&\"function\"!=typeof t)return{default:t};var e=s();if(e&&e.has(t))return e.get(t);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var a=i?Object.getOwnPropertyDescriptor(t,n):null;a&&(a.get||a.set)?Object.defineProperty(r,n,a):r[n]=t[n]}return r.default=t,e&&e.set(t,r),r}class a{constructor(){this.size=null}batch(e,r=!0){const i=this;let s;return t.util.assert(e>0,()=>`batchSize needs to be positive, but it is\\n      ${e}`),o(async()=>(await i.iterator()).columnMajorBatch(e,r,c),s=this.size===1/0||null==this.size?this.size:r?Math.ceil(this.size/e):Math.floor(this.size/e))}concatenate(t){const e=this;let r;return o(async()=>(await e.iterator()).concatenate(await t.iterator()),r=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null)}filter(e){const r=this;let i;return o(async()=>(await r.iterator()).filter(r=>t.tidy(()=>e(r))),i=this.size===1/0?1/0:null)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(e){const r=this;return o(async()=>(await r.iterator()).map(r=>t.tidy(()=>e(r))),this.size)}mapAsync(t){const e=this;return o(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError(\"`Dataset.prefetch()` requires bufferSize to be specified.\");const e=this;return o(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let i;return o(async()=>{const i=(0,r.iteratorFromFunction)(async()=>({value:await e.iterator(),done:!1}));return(0,r.iteratorFromConcatenated)(i.take(t))},i=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null)}skip(t){const e=this;let r;return o(async()=>(await e.iterator()).skip(t),r=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null)}shuffle(r,i,s=!0){if(null==r||r<0)throw null==this.size?new RangeError(\"`Dataset.shuffle()` requires bufferSize to be specified.\"):new RangeError(\"`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting \"+`bufferSize to the dataset size (${this.size} elements)`);const n=this,a=e.alea(i||t.util.now().toString());return o(async()=>{let t=a.int32();return s&&(t+=a.int32()),(await n.iterator()).shuffle(r,t.toString())},this.size)}take(t){const e=this;let r;return o(async()=>(await e.iterator()).take(t),r=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null)}async toArray(){if(this.size===1/0)throw new Error(\"Can not convert infinite data stream to array.\");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error(\"Can not convert infinite data stream to array.\");return(await this.iterator()).toArrayForTest()}}function o(t,e=null){return new class extends a{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function u(t){return o(async()=>(0,r.iteratorFromItems)(t),t.length)}function l(t){if(!(0,i.isIterable)(t))throw new Error(\"The argument to zip() must be an object or array.\");let e;if(Array.isArray(t))for(let r=0;r<t.length;r++)e=null==e?t[r].size:Math.min(e,t[r].size);else if(t instanceof Object)for(const r in t)e=null==e?t[r].size:Math.min(e,t[r].size);return o(async()=>{const e=await(0,i.deepMapAndAwaitAll)(t,t=>{if(t instanceof a)return{value:t.iterator(),recurse:!1};if((0,i.isIterable)(t))return{value:null,recurse:!0};throw new Error(\"Leaves of the structure passed to zip() must be Datasets, not primitives.\")});return(0,r.iteratorFromZipped)(e,r.ZipMismatchMode.SHORTEST)},e)}function c(t){if(null===t)return null;const e=t[0];if((0,i.canTensorify)(e)){return{value:f(t),recurse:!1}}return{value:null,recurse:!0}}function f(e){if(0===e.length)throw new Error(\"Can't make a batch of zero elements.\");return e[0]instanceof t.Tensor?t.stack(e):t.tensor(e)}exports.Dataset=a,a.MAX_BUFFER_SIZE=1e4;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":0}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":13}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":20}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":35}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":43}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":56}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":57}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":64}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":68}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":76}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":98}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":100}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":108}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":114}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":116}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":124}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":128}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":130}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":138}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":151}},{"source":"../src/dataset.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":153}},{"source":"../src/dataset.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":157}},{"source":"../src/dataset.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":159}},{"source":"../src/dataset.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":161}},{"source":"../src/dataset.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":169}},{"source":"../src/dataset.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":195}},{"source":"../src/dataset.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":197}},{"source":"../src/dataset.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":199}},{"source":"../src/dataset.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":207}},{"source":"../src/dataset.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":222}},{"source":"../src/dataset.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":224}},{"source":"../src/dataset.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":232}},{"source":"../src/dataset.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":261}},{"source":"../src/dataset.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":263}},{"source":"../src/dataset.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":271}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":290}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":299}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":303}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":306}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":325}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":333}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":340}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":345}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":349}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":351}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":355}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":363}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":370}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":372}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":383}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":390}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":393}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":395}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":404}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":406}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":409}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":412}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":415}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":417}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":428}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":435}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":437}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":440}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":447}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":450}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":467}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":470}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":489}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":491}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":497}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":498}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":506}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":509}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":513}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":515}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":519}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":522}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":525}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":527}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":531}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":534}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":541}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":543}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":547}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":550}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":554}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":556}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":559}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":561}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":568}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":584}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":591}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":616}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":620}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":624}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":629}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":631}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":634}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":641}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":651}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":666}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":671}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":673}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":676}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":677}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":681}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":683}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":685}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":692}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":717}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":719}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":722}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":727}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":731}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":733}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":738}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":740}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":745}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":752}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":767}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":769}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":771}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":774}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":776}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":779}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":781}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":784}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":791}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":793}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":801}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":803}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":806}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":808}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":812}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":814}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":817}},{"source":"../src/dataset.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":1,"column":819}},{"source":"../src/dataset.ts","name":null,"original":{"line":62,"column":22},"generated":{"line":1,"column":825}},{"source":"../src/dataset.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":1,"column":827}},{"source":"../src/dataset.ts","name":null,"original":{"line":73,"column":11},"generated":{"line":1,"column":841}},{"source":"../src/dataset.ts","name":null,"original":{"line":73,"column":11},"generated":{"line":1,"column":846}},{"source":"../src/dataset.ts","name":null,"original":{"line":73,"column":26},"generated":{"line":1,"column":851}},{"source":"../src/dataset.ts","name":null,"original":{"line":136,"column":2},"generated":{"line":1,"column":856}},{"source":"../src/dataset.ts","name":null,"original":{"line":136,"column":8},"generated":{"line":1,"column":862}},{"source":"../src/dataset.ts","name":null,"original":{"line":136,"column":27},"generated":{"line":1,"column":864}},{"source":"../src/dataset.ts","name":null,"original":{"line":136,"column":44},"generated":{"line":1,"column":867}},{"source":"../src/dataset.ts","name":null,"original":{"line":137,"column":10},"generated":{"line":1,"column":870}},{"source":"../src/dataset.ts","name":null,"original":{"line":137,"column":10},"generated":{"line":1,"column":876}},{"source":"../src/dataset.ts","name":null,"original":{"line":137,"column":17},"generated":{"line":1,"column":878}},{"source":"../src/dataset.ts","name":null,"original":{"line":141,"column":8},"generated":{"line":1,"column":883}},{"source":"../src/dataset.ts","name":null,"original":{"line":141,"column":8},"generated":{"line":1,"column":887}},{"source":"../src/dataset.ts","name":null,"original":{"line":155,"column":11},"generated":{"line":1,"column":889}},{"source":"../src/dataset.ts","name":null,"original":{"line":138,"column":4},"generated":{"line":1,"column":896}},{"source":"../src/dataset.ts","name":null,"original":{"line":138,"column":7},"generated":{"line":1,"column":898}},{"source":"../src/dataset.ts","name":null,"original":{"line":138,"column":12},"generated":{"line":1,"column":903}},{"source":"../src/dataset.ts","name":null,"original":{"line":139,"column":8},"generated":{"line":1,"column":910}},{"source":"../src/dataset.ts","name":null,"original":{"line":139,"column":20},"generated":{"line":1,"column":912}},{"source":"../src/dataset.ts","name":null,"original":{"line":139,"column":23},"generated":{"line":1,"column":914}},{"source":"../src/dataset.ts","name":null,"original":{"line":140,"column":8},"generated":{"line":1,"column":970}},{"source":"../src/dataset.ts","name":null,"original":{"line":155,"column":11},"generated":{"line":1,"column":975}},{"source":"../src/dataset.ts","name":null,"original":{"line":155,"column":33},"generated":{"line":1,"column":977}},{"source":"../src/dataset.ts","name":null,"original":{"line":156,"column":20},"generated":{"line":1,"column":993}},{"source":"../src/dataset.ts","name":null,"original":{"line":156,"column":25},"generated":{"line":1,"column":995}},{"source":"../src/dataset.ts","name":null,"original":{"line":157,"column":11},"generated":{"line":1,"column":1007}},{"source":"../src/dataset.ts","name":null,"original":{"line":157,"column":28},"generated":{"line":1,"column":1024}},{"source":"../src/dataset.ts","name":null,"original":{"line":157,"column":39},"generated":{"line":1,"column":1026}},{"source":"../src/dataset.ts","name":null,"original":{"line":157,"column":55},"generated":{"line":1,"column":1028}},{"source":"../src/dataset.ts","name":null,"original":{"line":145,"column":6},"generated":{"line":1,"column":1031}},{"source":"../src/dataset.ts","name":null,"original":{"line":142,"column":8},"generated":{"line":1,"column":1033}},{"source":"../src/dataset.ts","name":null,"original":{"line":142,"column":13},"generated":{"line":1,"column":1038}},{"source":"../src/dataset.ts","name":null,"original":{"line":142,"column":22},"generated":{"line":1,"column":1045}},{"source":"../src/dataset.ts","name":null,"original":{"line":142,"column":22},"generated":{"line":1,"column":1047}},{"source":"../src/dataset.ts","name":null,"original":{"line":142,"column":47},"generated":{"line":1,"column":1050}},{"source":"../src/dataset.ts","name":null,"original":{"line":142,"column":34},"generated":{"line":1,"column":1056}},{"source":"../src/dataset.ts","name":null,"original":{"line":142,"column":39},"generated":{"line":1,"column":1061}},{"source":"../src/dataset.ts","name":null,"original":{"line":145,"column":13},"generated":{"line":1,"column":1066}},{"source":"../src/dataset.ts","name":null,"original":{"line":145,"column":18},"generated":{"line":1,"column":1071}},{"source":"../src/dataset.ts","name":null,"original":{"line":146,"column":15},"generated":{"line":1,"column":1076}},{"source":"../src/dataset.ts","name":null,"original":{"line":149,"column":13},"generated":{"line":1,"column":1078}},{"source":"../src/dataset.ts","name":null,"original":{"line":149,"column":18},"generated":{"line":1,"column":1083}},{"source":"../src/dataset.ts","name":null,"original":{"line":149,"column":23},"generated":{"line":1,"column":1088}},{"source":"../src/dataset.ts","name":null,"original":{"line":149,"column":28},"generated":{"line":1,"column":1093}},{"source":"../src/dataset.ts","name":null,"original":{"line":149,"column":35},"generated":{"line":1,"column":1098}},{"source":"../src/dataset.ts","name":null,"original":{"line":153,"column":13},"generated":{"line":1,"column":1101}},{"source":"../src/dataset.ts","name":null,"original":{"line":153,"column":18},"generated":{"line":1,"column":1106}},{"source":"../src/dataset.ts","name":null,"original":{"line":153,"column":24},"generated":{"line":1,"column":1112}},{"source":"../src/dataset.ts","name":null,"original":{"line":153,"column":29},"generated":{"line":1,"column":1117}},{"source":"../src/dataset.ts","name":null,"original":{"line":153,"column":36},"generated":{"line":1,"column":1122}},{"source":"../src/dataset.ts","name":null,"original":{"line":176,"column":2},"generated":{"line":1,"column":1126}},{"source":"../src/dataset.ts","name":null,"original":{"line":176,"column":14},"generated":{"line":1,"column":1138}},{"source":"../src/dataset.ts","name":null,"original":{"line":177,"column":10},"generated":{"line":1,"column":1141}},{"source":"../src/dataset.ts","name":null,"original":{"line":177,"column":10},"generated":{"line":1,"column":1147}},{"source":"../src/dataset.ts","name":null,"original":{"line":177,"column":17},"generated":{"line":1,"column":1149}},{"source":"../src/dataset.ts","name":null,"original":{"line":178,"column":8},"generated":{"line":1,"column":1154}},{"source":"../src/dataset.ts","name":null,"original":{"line":178,"column":8},"generated":{"line":1,"column":1158}},{"source":"../src/dataset.ts","name":null,"original":{"line":192,"column":11},"generated":{"line":1,"column":1160}},{"source":"../src/dataset.ts","name":null,"original":{"line":192,"column":11},"generated":{"line":1,"column":1167}},{"source":"../src/dataset.ts","name":null,"original":{"line":193,"column":8},"generated":{"line":1,"column":1169}},{"source":"../src/dataset.ts","name":null,"original":{"line":194,"column":19},"generated":{"line":1,"column":1185}},{"source":"../src/dataset.ts","name":null,"original":{"line":194,"column":24},"generated":{"line":1,"column":1187}},{"source":"../src/dataset.ts","name":null,"original":{"line":194,"column":36},"generated":{"line":1,"column":1199}},{"source":"../src/dataset.ts","name":null,"original":{"line":194,"column":54},"generated":{"line":1,"column":1217}},{"source":"../src/dataset.ts","name":null,"original":{"line":194,"column":62},"generated":{"line":1,"column":1219}},{"source":"../src/dataset.ts","name":null,"original":{"line":182,"column":6},"generated":{"line":1,"column":1231}},{"source":"../src/dataset.ts","name":null,"original":{"line":179,"column":8},"generated":{"line":1,"column":1233}},{"source":"../src/dataset.ts","name":null,"original":{"line":179,"column":13},"generated":{"line":1,"column":1238}},{"source":"../src/dataset.ts","name":null,"original":{"line":179,"column":22},"generated":{"line":1,"column":1245}},{"source":"../src/dataset.ts","name":null,"original":{"line":179,"column":22},"generated":{"line":1,"column":1247}},{"source":"../src/dataset.ts","name":null,"original":{"line":179,"column":34},"generated":{"line":1,"column":1250}},{"source":"../src/dataset.ts","name":null,"original":{"line":179,"column":42},"generated":{"line":1,"column":1252}},{"source":"../src/dataset.ts","name":null,"original":{"line":179,"column":51},"generated":{"line":1,"column":1259}},{"source":"../src/dataset.ts","name":null,"original":{"line":179,"column":51},"generated":{"line":1,"column":1261}},{"source":"../src/dataset.ts","name":null,"original":{"line":182,"column":13},"generated":{"line":1,"column":1263}},{"source":"../src/dataset.ts","name":null,"original":{"line":182,"column":13},"generated":{"line":1,"column":1265}},{"source":"../src/dataset.ts","name":null,"original":{"line":183,"column":28},"generated":{"line":1,"column":1267}},{"source":"../src/dataset.ts","name":null,"original":{"line":183,"column":15},"generated":{"line":1,"column":1273}},{"source":"../src/dataset.ts","name":null,"original":{"line":183,"column":20},"generated":{"line":1,"column":1278}},{"source":"../src/dataset.ts","name":null,"original":{"line":183,"column":52},"generated":{"line":1,"column":1284}},{"source":"../src/dataset.ts","name":null,"original":{"line":183,"column":36},"generated":{"line":1,"column":1290}},{"source":"../src/dataset.ts","name":null,"original":{"line":183,"column":44},"generated":{"line":1,"column":1292}},{"source":"../src/dataset.ts","name":null,"original":{"line":186,"column":13},"generated":{"line":1,"column":1297}},{"source":"../src/dataset.ts","name":null,"original":{"line":186,"column":18},"generated":{"line":1,"column":1302}},{"source":"../src/dataset.ts","name":null,"original":{"line":186,"column":25},"generated":{"line":1,"column":1307}},{"source":"../src/dataset.ts","name":null,"original":{"line":186,"column":33},"generated":{"line":1,"column":1309}},{"source":"../src/dataset.ts","name":null,"original":{"line":190,"column":13},"generated":{"line":1,"column":1314}},{"source":"../src/dataset.ts","name":null,"original":{"line":214,"column":2},"generated":{"line":1,"column":1320}},{"source":"../src/dataset.ts","name":null,"original":{"line":214,"column":9},"generated":{"line":1,"column":1327}},{"source":"../src/dataset.ts","name":null,"original":{"line":215,"column":10},"generated":{"line":1,"column":1330}},{"source":"../src/dataset.ts","name":null,"original":{"line":215,"column":10},"generated":{"line":1,"column":1336}},{"source":"../src/dataset.ts","name":null,"original":{"line":215,"column":17},"generated":{"line":1,"column":1338}},{"source":"../src/dataset.ts","name":null,"original":{"line":216,"column":8},"generated":{"line":1,"column":1343}},{"source":"../src/dataset.ts","name":null,"original":{"line":216,"column":8},"generated":{"line":1,"column":1347}},{"source":"../src/dataset.ts","name":null,"original":{"line":225,"column":11},"generated":{"line":1,"column":1349}},{"source":"../src/dataset.ts","name":null,"original":{"line":225,"column":11},"generated":{"line":1,"column":1356}},{"source":"../src/dataset.ts","name":null,"original":{"line":225,"column":33},"generated":{"line":1,"column":1358}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":20},"generated":{"line":1,"column":1374}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":25},"generated":{"line":1,"column":1376}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":37},"generated":{"line":1,"column":1388}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":44},"generated":{"line":1,"column":1395}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":49},"generated":{"line":1,"column":1398}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":52},"generated":{"line":1,"column":1400}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":57},"generated":{"line":1,"column":1405}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":63},"generated":{"line":1,"column":1409}},{"source":"../src/dataset.ts","name":null,"original":{"line":226,"column":73},"generated":{"line":1,"column":1411}},{"source":"../src/dataset.ts","name":null,"original":{"line":219,"column":6},"generated":{"line":1,"column":1416}},{"source":"../src/dataset.ts","name":null,"original":{"line":217,"column":8},"generated":{"line":1,"column":1418}},{"source":"../src/dataset.ts","name":null,"original":{"line":217,"column":13},"generated":{"line":1,"column":1423}},{"source":"../src/dataset.ts","name":null,"original":{"line":217,"column":22},"generated":{"line":1,"column":1430}},{"source":"../src/dataset.ts","name":null,"original":{"line":217,"column":22},"generated":{"line":1,"column":1432}},{"source":"../src/dataset.ts","name":null,"original":{"line":219,"column":13},"generated":{"line":1,"column":1434}},{"source":"../src/dataset.ts","name":null,"original":{"line":219,"column":13},"generated":{"line":1,"column":1436}},{"source":"../src/dataset.ts","name":null,"original":{"line":223,"column":13},"generated":{"line":1,"column":1438}},{"source":"../src/dataset.ts","name":null,"original":{"line":246,"column":8},"generated":{"line":1,"column":1444}},{"source":"../src/dataset.ts","name":null,"original":{"line":246,"column":21},"generated":{"line":1,"column":1463}},{"source":"../src/dataset.ts","name":null,"original":{"line":247,"column":11},"generated":{"line":1,"column":1466}},{"source":"../src/dataset.ts","name":null,"original":{"line":247,"column":18},"generated":{"line":1,"column":1479}},{"source":"../src/dataset.ts","name":null,"original":{"line":247,"column":23},"generated":{"line":1,"column":1484}},{"source":"../src/dataset.ts","name":null,"original":{"line":247,"column":35},"generated":{"line":1,"column":1496}},{"source":"../src/dataset.ts","name":null,"original":{"line":247,"column":48},"generated":{"line":1,"column":1509}},{"source":"../src/dataset.ts","name":null,"original":{"line":265,"column":2},"generated":{"line":1,"column":1512}},{"source":"../src/dataset.ts","name":null,"original":{"line":265,"column":36},"generated":{"line":1,"column":1516}},{"source":"../src/dataset.ts","name":null,"original":{"line":266,"column":10},"generated":{"line":1,"column":1519}},{"source":"../src/dataset.ts","name":null,"original":{"line":266,"column":10},"generated":{"line":1,"column":1525}},{"source":"../src/dataset.ts","name":null,"original":{"line":266,"column":17},"generated":{"line":1,"column":1527}},{"source":"../src/dataset.ts","name":null,"original":{"line":267,"column":11},"generated":{"line":1,"column":1532}},{"source":"../src/dataset.ts","name":null,"original":{"line":267,"column":11},"generated":{"line":1,"column":1539}},{"source":"../src/dataset.ts","name":null,"original":{"line":267,"column":33},"generated":{"line":1,"column":1541}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":20},"generated":{"line":1,"column":1557}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":25},"generated":{"line":1,"column":1559}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":37},"generated":{"line":1,"column":1571}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":41},"generated":{"line":1,"column":1575}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":46},"generated":{"line":1,"column":1578}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":49},"generated":{"line":1,"column":1580}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":54},"generated":{"line":1,"column":1585}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":60},"generated":{"line":1,"column":1589}},{"source":"../src/dataset.ts","name":null,"original":{"line":268,"column":70},"generated":{"line":1,"column":1591}},{"source":"../src/dataset.ts","name":null,"original":{"line":269,"column":7},"generated":{"line":1,"column":1596}},{"source":"../src/dataset.ts","name":null,"original":{"line":269,"column":12},"generated":{"line":1,"column":1601}},{"source":"../src/dataset.ts","name":null,"original":{"line":295,"column":2},"generated":{"line":1,"column":1607}},{"source":"../src/dataset.ts","name":null,"original":{"line":295,"column":41},"generated":{"line":1,"column":1616}},{"source":"../src/dataset.ts","name":null,"original":{"line":297,"column":10},"generated":{"line":1,"column":1619}},{"source":"../src/dataset.ts","name":null,"original":{"line":297,"column":10},"generated":{"line":1,"column":1625}},{"source":"../src/dataset.ts","name":null,"original":{"line":297,"column":17},"generated":{"line":1,"column":1627}},{"source":"../src/dataset.ts","name":null,"original":{"line":298,"column":11},"generated":{"line":1,"column":1632}},{"source":"../src/dataset.ts","name":null,"original":{"line":298,"column":11},"generated":{"line":1,"column":1639}},{"source":"../src/dataset.ts","name":null,"original":{"line":298,"column":33},"generated":{"line":1,"column":1641}},{"source":"../src/dataset.ts","name":null,"original":{"line":299,"column":20},"generated":{"line":1,"column":1657}},{"source":"../src/dataset.ts","name":null,"original":{"line":299,"column":25},"generated":{"line":1,"column":1659}},{"source":"../src/dataset.ts","name":null,"original":{"line":299,"column":37},"generated":{"line":1,"column":1671}},{"source":"../src/dataset.ts","name":null,"original":{"line":299,"column":46},"generated":{"line":1,"column":1680}},{"source":"../src/dataset.ts","name":null,"original":{"line":300,"column":7},"generated":{"line":1,"column":1683}},{"source":"../src/dataset.ts","name":null,"original":{"line":300,"column":12},"generated":{"line":1,"column":1688}},{"source":"../src/dataset.ts","name":null,"original":{"line":312,"column":2},"generated":{"line":1,"column":1694}},{"source":"../src/dataset.ts","name":null,"original":{"line":312,"column":11},"generated":{"line":1,"column":1703}},{"source":"../src/dataset.ts","name":null,"original":{"line":313,"column":8},"generated":{"line":1,"column":1706}},{"source":"../src/dataset.ts","name":null,"original":{"line":313,"column":22},"generated":{"line":1,"column":1709}},{"source":"../src/dataset.ts","name":null,"original":{"line":313,"column":8},"generated":{"line":1,"column":1715}},{"source":"../src/dataset.ts","name":null,"original":{"line":314,"column":12},"generated":{"line":1,"column":1717}},{"source":"../src/dataset.ts","name":null,"original":{"line":314,"column":12},"generated":{"line":1,"column":1723}},{"source":"../src/dataset.ts","name":null,"original":{"line":314,"column":16},"generated":{"line":1,"column":1727}},{"source":"../src/dataset.ts","name":null,"original":{"line":315,"column":10},"generated":{"line":1,"column":1738}},{"source":"../src/dataset.ts","name":null,"original":{"line":318,"column":10},"generated":{"line":1,"column":1799}},{"source":"../src/dataset.ts","name":null,"original":{"line":318,"column":10},"generated":{"line":1,"column":1805}},{"source":"../src/dataset.ts","name":null,"original":{"line":318,"column":17},"generated":{"line":1,"column":1807}},{"source":"../src/dataset.ts","name":null,"original":{"line":319,"column":11},"generated":{"line":1,"column":1812}},{"source":"../src/dataset.ts","name":null,"original":{"line":319,"column":11},"generated":{"line":1,"column":1819}},{"source":"../src/dataset.ts","name":null,"original":{"line":320,"column":8},"generated":{"line":1,"column":1821}},{"source":"../src/dataset.ts","name":null,"original":{"line":320,"column":27},"generated":{"line":1,"column":1837}},{"source":"../src/dataset.ts","name":null,"original":{"line":320,"column":32},"generated":{"line":1,"column":1839}},{"source":"../src/dataset.ts","name":null,"original":{"line":320,"column":44},"generated":{"line":1,"column":1851}},{"source":"../src/dataset.ts","name":null,"original":{"line":320,"column":53},"generated":{"line":1,"column":1860}},{"source":"../src/dataset.ts","name":null,"original":{"line":320,"column":66},"generated":{"line":1,"column":1863}},{"source":"../src/dataset.ts","name":null,"original":{"line":320,"column":71},"generated":{"line":1,"column":1868}},{"source":"../src/dataset.ts","name":null,"original":{"line":341,"column":2},"generated":{"line":1,"column":1874}},{"source":"../src/dataset.ts","name":null,"original":{"line":341,"column":9},"generated":{"line":1,"column":1881}},{"source":"../src/dataset.ts","name":null,"original":{"line":342,"column":10},"generated":{"line":1,"column":1884}},{"source":"../src/dataset.ts","name":null,"original":{"line":342,"column":10},"generated":{"line":1,"column":1890}},{"source":"../src/dataset.ts","name":null,"original":{"line":342,"column":17},"generated":{"line":1,"column":1892}},{"source":"../src/dataset.ts","name":null,"original":{"line":343,"column":8},"generated":{"line":1,"column":1897}},{"source":"../src/dataset.ts","name":null,"original":{"line":343,"column":8},"generated":{"line":1,"column":1901}},{"source":"../src/dataset.ts","name":null,"original":{"line":360,"column":11},"generated":{"line":1,"column":1903}},{"source":"../src/dataset.ts","name":null,"original":{"line":360,"column":11},"generated":{"line":1,"column":1910}},{"source":"../src/dataset.ts","name":null,"original":{"line":360,"column":33},"generated":{"line":1,"column":1912}},{"source":"../src/dataset.ts","name":null,"original":{"line":361,"column":12},"generated":{"line":1,"column":1922}},{"source":"../src/dataset.ts","name":null,"original":{"line":361,"column":12},"generated":{"line":1,"column":1928}},{"source":"../src/dataset.ts","name":null,"original":{"line":361,"column":31},"generated":{"line":1,"column":1931}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":10},"generated":{"line":1,"column":1933}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":10},"generated":{"line":1,"column":1935}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":10},"generated":{"line":1,"column":1957}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":23},"generated":{"line":1,"column":1967}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":24},"generated":{"line":1,"column":1968}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":37},"generated":{"line":1,"column":1980}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":42},"generated":{"line":1,"column":1982}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":54},"generated":{"line":1,"column":1993}},{"source":"../src/dataset.ts","name":null,"original":{"line":362,"column":60},"generated":{"line":1,"column":1999}},{"source":"../src/dataset.ts","name":null,"original":{"line":363,"column":13},"generated":{"line":1,"column":2004}},{"source":"../src/dataset.ts","name":null,"original":{"line":363,"column":13},"generated":{"line":1,"column":2011}},{"source":"../src/dataset.ts","name":null,"original":{"line":363,"column":38},"generated":{"line":1,"column":2013}},{"source":"../src/dataset.ts","name":null,"original":{"line":363,"column":38},"generated":{"line":1,"column":2015}},{"source":"../src/dataset.ts","name":null,"original":{"line":363,"column":38},"generated":{"line":1,"column":2041}},{"source":"../src/dataset.ts","name":null,"original":{"line":363,"column":55},"generated":{"line":1,"column":2043}},{"source":"../src/dataset.ts","name":null,"original":{"line":363,"column":60},"generated":{"line":1,"column":2048}},{"source":"../src/dataset.ts","name":null,"original":{"line":348,"column":6},"generated":{"line":1,"column":2053}},{"source":"../src/dataset.ts","name":null,"original":{"line":344,"column":21},"generated":{"line":1,"column":2055}},{"source":"../src/dataset.ts","name":null,"original":{"line":344,"column":8},"generated":{"line":1,"column":2061}},{"source":"../src/dataset.ts","name":null,"original":{"line":344,"column":13},"generated":{"line":1,"column":2066}},{"source":"../src/dataset.ts","name":null,"original":{"line":344,"column":29},"generated":{"line":1,"column":2072}},{"source":"../src/dataset.ts","name":null,"original":{"line":344,"column":37},"generated":{"line":1,"column":2074}},{"source":"../src/dataset.ts","name":null,"original":{"line":348,"column":13},"generated":{"line":1,"column":2076}},{"source":"../src/dataset.ts","name":null,"original":{"line":348,"column":18},"generated":{"line":1,"column":2081}},{"source":"../src/dataset.ts","name":null,"original":{"line":348,"column":25},"generated":{"line":1,"column":2086}},{"source":"../src/dataset.ts","name":null,"original":{"line":349,"column":25},"generated":{"line":1,"column":2088}},{"source":"../src/dataset.ts","name":null,"original":{"line":349,"column":15},"generated":{"line":1,"column":2092}},{"source":"../src/dataset.ts","name":null,"original":{"line":351,"column":13},"generated":{"line":1,"column":2094}},{"source":"../src/dataset.ts","name":null,"original":{"line":352,"column":28},"generated":{"line":1,"column":2096}},{"source":"../src/dataset.ts","name":null,"original":{"line":352,"column":15},"generated":{"line":1,"column":2102}},{"source":"../src/dataset.ts","name":null,"original":{"line":352,"column":20},"generated":{"line":1,"column":2107}},{"source":"../src/dataset.ts","name":null,"original":{"line":352,"column":47},"generated":{"line":1,"column":2119}},{"source":"../src/dataset.ts","name":null,"original":{"line":352,"column":37},"generated":{"line":1,"column":2123}},{"source":"../src/dataset.ts","name":null,"original":{"line":352,"column":60},"generated":{"line":1,"column":2126}},{"source":"../src/dataset.ts","name":null,"original":{"line":352,"column":68},"generated":{"line":1,"column":2128}},{"source":"../src/dataset.ts","name":null,"original":{"line":355,"column":13},"generated":{"line":1,"column":2131}},{"source":"../src/dataset.ts","name":null,"original":{"line":355,"column":13},"generated":{"line":1,"column":2133}},{"source":"../src/dataset.ts","name":null,"original":{"line":358,"column":13},"generated":{"line":1,"column":2135}},{"source":"../src/dataset.ts","name":null,"original":{"line":384,"column":2},"generated":{"line":1,"column":2141}},{"source":"../src/dataset.ts","name":null,"original":{"line":384,"column":7},"generated":{"line":1,"column":2146}},{"source":"../src/dataset.ts","name":null,"original":{"line":385,"column":10},"generated":{"line":1,"column":2149}},{"source":"../src/dataset.ts","name":null,"original":{"line":385,"column":10},"generated":{"line":1,"column":2155}},{"source":"../src/dataset.ts","name":null,"original":{"line":385,"column":17},"generated":{"line":1,"column":2157}},{"source":"../src/dataset.ts","name":null,"original":{"line":386,"column":8},"generated":{"line":1,"column":2162}},{"source":"../src/dataset.ts","name":null,"original":{"line":386,"column":8},"generated":{"line":1,"column":2166}},{"source":"../src/dataset.ts","name":null,"original":{"line":402,"column":11},"generated":{"line":1,"column":2168}},{"source":"../src/dataset.ts","name":null,"original":{"line":402,"column":11},"generated":{"line":1,"column":2175}},{"source":"../src/dataset.ts","name":null,"original":{"line":403,"column":8},"generated":{"line":1,"column":2177}},{"source":"../src/dataset.ts","name":null,"original":{"line":403,"column":27},"generated":{"line":1,"column":2193}},{"source":"../src/dataset.ts","name":null,"original":{"line":403,"column":32},"generated":{"line":1,"column":2195}},{"source":"../src/dataset.ts","name":null,"original":{"line":403,"column":44},"generated":{"line":1,"column":2207}},{"source":"../src/dataset.ts","name":null,"original":{"line":403,"column":49},"generated":{"line":1,"column":2212}},{"source":"../src/dataset.ts","name":null,"original":{"line":391,"column":6},"generated":{"line":1,"column":2215}},{"source":"../src/dataset.ts","name":null,"original":{"line":387,"column":21},"generated":{"line":1,"column":2217}},{"source":"../src/dataset.ts","name":null,"original":{"line":387,"column":8},"generated":{"line":1,"column":2223}},{"source":"../src/dataset.ts","name":null,"original":{"line":387,"column":13},"generated":{"line":1,"column":2228}},{"source":"../src/dataset.ts","name":null,"original":{"line":387,"column":29},"generated":{"line":1,"column":2234}},{"source":"../src/dataset.ts","name":null,"original":{"line":387,"column":38},"generated":{"line":1,"column":2237}},{"source":"../src/dataset.ts","name":null,"original":{"line":387,"column":43},"generated":{"line":1,"column":2240}},{"source":"../src/dataset.ts","name":null,"original":{"line":387,"column":48},"generated":{"line":1,"column":2245}},{"source":"../src/dataset.ts","name":null,"original":{"line":387,"column":56},"generated":{"line":1,"column":2251}},{"source":"../src/dataset.ts","name":null,"original":{"line":391,"column":13},"generated":{"line":1,"column":2253}},{"source":"../src/dataset.ts","name":null,"original":{"line":391,"column":18},"generated":{"line":1,"column":2258}},{"source":"../src/dataset.ts","name":null,"original":{"line":391,"column":25},"generated":{"line":1,"column":2263}},{"source":"../src/dataset.ts","name":null,"original":{"line":393,"column":21},"generated":{"line":1,"column":2265}},{"source":"../src/dataset.ts","name":null,"original":{"line":393,"column":8},"generated":{"line":1,"column":2271}},{"source":"../src/dataset.ts","name":null,"original":{"line":393,"column":13},"generated":{"line":1,"column":2276}},{"source":"../src/dataset.ts","name":null,"original":{"line":394,"column":9},"generated":{"line":1,"column":2283}},{"source":"../src/dataset.ts","name":null,"original":{"line":394,"column":14},"generated":{"line":1,"column":2288}},{"source":"../src/dataset.ts","name":null,"original":{"line":394,"column":21},"generated":{"line":1,"column":2293}},{"source":"../src/dataset.ts","name":null,"original":{"line":394,"column":40},"generated":{"line":1,"column":2301}},{"source":"../src/dataset.ts","name":null,"original":{"line":394,"column":30},"generated":{"line":1,"column":2305}},{"source":"../src/dataset.ts","name":null,"original":{"line":394,"column":53},"generated":{"line":1,"column":2308}},{"source":"../src/dataset.ts","name":null,"original":{"line":394,"column":61},"generated":{"line":1,"column":2310}},{"source":"../src/dataset.ts","name":null,"original":{"line":397,"column":13},"generated":{"line":1,"column":2313}},{"source":"../src/dataset.ts","name":null,"original":{"line":400,"column":13},"generated":{"line":1,"column":2315}},{"source":"../src/dataset.ts","name":null,"original":{"line":431,"column":2},"generated":{"line":1,"column":2321}},{"source":"../src/dataset.ts","name":null,"original":{"line":431,"column":10},"generated":{"line":1,"column":2329}},{"source":"../src/dataset.ts","name":null,"original":{"line":431,"column":30},"generated":{"line":1,"column":2331}},{"source":"../src/dataset.ts","name":null,"original":{"line":431,"column":45},"generated":{"line":1,"column":2333}},{"source":"../src/dataset.ts","name":null,"original":{"line":431,"column":70},"generated":{"line":1,"column":2336}},{"source":"../src/dataset.ts","name":null,"original":{"line":433,"column":8},"generated":{"line":1,"column":2339}},{"source":"../src/dataset.ts","name":null,"original":{"line":433,"column":22},"generated":{"line":1,"column":2342}},{"source":"../src/dataset.ts","name":null,"original":{"line":433,"column":8},"generated":{"line":1,"column":2348}},{"source":"../src/dataset.ts","name":null,"original":{"line":433,"column":30},"generated":{"line":1,"column":2351}},{"source":"../src/dataset.ts","name":null,"original":{"line":433,"column":43},"generated":{"line":1,"column":2353}},{"source":"../src/dataset.ts","name":null,"original":{"line":434,"column":10},"generated":{"line":1,"column":2355}},{"source":"../src/dataset.ts","name":null,"original":{"line":434,"column":23},"generated":{"line":1,"column":2361}},{"source":"../src/dataset.ts","name":null,"original":{"line":434,"column":10},"generated":{"line":1,"column":2367}},{"source":"../src/dataset.ts","name":null,"original":{"line":434,"column":15},"generated":{"line":1,"column":2372}},{"source":"../src/dataset.ts","name":null,"original":{"line":435,"column":14},"generated":{"line":1,"column":2377}},{"source":"../src/dataset.ts","name":null,"original":{"line":435,"column":18},"generated":{"line":1,"column":2381}},{"source":"../src/dataset.ts","name":null,"original":{"line":436,"column":12},"generated":{"line":1,"column":2392}},{"source":"../src/dataset.ts","name":null,"original":{"line":438,"column":14},"generated":{"line":1,"column":2452}},{"source":"../src/dataset.ts","name":null,"original":{"line":438,"column":18},"generated":{"line":1,"column":2456}},{"source":"../src/dataset.ts","name":null,"original":{"line":439,"column":12},"generated":{"line":1,"column":2467}},{"source":"../src/dataset.ts","name":null,"original":{"line":442,"column":47},"generated":{"line":1,"column":2677}},{"source":"../src/dataset.ts","name":null,"original":{"line":442,"column":52},"generated":{"line":1,"column":2682}},{"source":"../src/dataset.ts","name":null,"original":{"line":445,"column":10},"generated":{"line":1,"column":2700}},{"source":"../src/dataset.ts","name":null,"original":{"line":445,"column":10},"generated":{"line":1,"column":2706}},{"source":"../src/dataset.ts","name":null,"original":{"line":445,"column":17},"generated":{"line":1,"column":2708}},{"source":"../src/dataset.ts","name":null,"original":{"line":446,"column":10},"generated":{"line":1,"column":2713}},{"source":"../src/dataset.ts","name":null,"original":{"line":446,"column":19},"generated":{"line":1,"column":2715}},{"source":"../src/dataset.ts","name":null,"original":{"line":446,"column":30},"generated":{"line":1,"column":2717}},{"source":"../src/dataset.ts","name":null,"original":{"line":446,"column":35},"generated":{"line":1,"column":2722}},{"source":"../src/dataset.ts","name":null,"original":{"line":446,"column":43},"generated":{"line":1,"column":2725}},{"source":"../src/dataset.ts","name":null,"original":{"line":446,"column":46},"generated":{"line":1,"column":2727}},{"source":"../src/dataset.ts","name":null,"original":{"line":446,"column":51},"generated":{"line":1,"column":2732}},{"source":"../src/dataset.ts","name":null,"original":{"line":446,"column":57},"generated":{"line":1,"column":2738}},{"source":"../src/dataset.ts","name":null,"original":{"line":447,"column":11},"generated":{"line":1,"column":2750}},{"source":"../src/dataset.ts","name":null,"original":{"line":447,"column":11},"generated":{"line":1,"column":2757}},{"source":"../src/dataset.ts","name":null,"original":{"line":447,"column":33},"generated":{"line":1,"column":2759}},{"source":"../src/dataset.ts","name":null,"original":{"line":448,"column":10},"generated":{"line":1,"column":2769}},{"source":"../src/dataset.ts","name":null,"original":{"line":448,"column":10},"generated":{"line":1,"column":2773}},{"source":"../src/dataset.ts","name":null,"original":{"line":448,"column":18},"generated":{"line":1,"column":2775}},{"source":"../src/dataset.ts","name":null,"original":{"line":448,"column":25},"generated":{"line":1,"column":2777}},{"source":"../src/dataset.ts","name":null,"original":{"line":452,"column":13},"generated":{"line":1,"column":2785}},{"source":"../src/dataset.ts","name":null,"original":{"line":449,"column":10},"generated":{"line":1,"column":2792}},{"source":"../src/dataset.ts","name":null,"original":{"line":450,"column":8},"generated":{"line":1,"column":2796}},{"source":"../src/dataset.ts","name":null,"original":{"line":450,"column":17},"generated":{"line":1,"column":2799}},{"source":"../src/dataset.ts","name":null,"original":{"line":450,"column":24},"generated":{"line":1,"column":2801}},{"source":"../src/dataset.ts","name":null,"original":{"line":452,"column":20},"generated":{"line":1,"column":2817}},{"source":"../src/dataset.ts","name":null,"original":{"line":452,"column":25},"generated":{"line":1,"column":2819}},{"source":"../src/dataset.ts","name":null,"original":{"line":452,"column":37},"generated":{"line":1,"column":2831}},{"source":"../src/dataset.ts","name":null,"original":{"line":452,"column":45},"generated":{"line":1,"column":2839}},{"source":"../src/dataset.ts","name":null,"original":{"line":452,"column":57},"generated":{"line":1,"column":2841}},{"source":"../src/dataset.ts","name":null,"original":{"line":452,"column":63},"generated":{"line":1,"column":2843}},{"source":"../src/dataset.ts","name":null,"original":{"line":453,"column":7},"generated":{"line":1,"column":2856}},{"source":"../src/dataset.ts","name":null,"original":{"line":453,"column":12},"generated":{"line":1,"column":2861}},{"source":"../src/dataset.ts","name":null,"original":{"line":473,"column":2},"generated":{"line":1,"column":2867}},{"source":"../src/dataset.ts","name":null,"original":{"line":473,"column":7},"generated":{"line":1,"column":2872}},{"source":"../src/dataset.ts","name":null,"original":{"line":474,"column":10},"generated":{"line":1,"column":2875}},{"source":"../src/dataset.ts","name":null,"original":{"line":474,"column":10},"generated":{"line":1,"column":2881}},{"source":"../src/dataset.ts","name":null,"original":{"line":474,"column":17},"generated":{"line":1,"column":2883}},{"source":"../src/dataset.ts","name":null,"original":{"line":475,"column":8},"generated":{"line":1,"column":2888}},{"source":"../src/dataset.ts","name":null,"original":{"line":475,"column":8},"generated":{"line":1,"column":2892}},{"source":"../src/dataset.ts","name":null,"original":{"line":488,"column":11},"generated":{"line":1,"column":2894}},{"source":"../src/dataset.ts","name":null,"original":{"line":488,"column":11},"generated":{"line":1,"column":2901}},{"source":"../src/dataset.ts","name":null,"original":{"line":489,"column":8},"generated":{"line":1,"column":2903}},{"source":"../src/dataset.ts","name":null,"original":{"line":489,"column":27},"generated":{"line":1,"column":2919}},{"source":"../src/dataset.ts","name":null,"original":{"line":489,"column":32},"generated":{"line":1,"column":2921}},{"source":"../src/dataset.ts","name":null,"original":{"line":489,"column":44},"generated":{"line":1,"column":2933}},{"source":"../src/dataset.ts","name":null,"original":{"line":489,"column":49},"generated":{"line":1,"column":2938}},{"source":"../src/dataset.ts","name":null,"original":{"line":479,"column":6},"generated":{"line":1,"column":2941}},{"source":"../src/dataset.ts","name":null,"original":{"line":476,"column":21},"generated":{"line":1,"column":2943}},{"source":"../src/dataset.ts","name":null,"original":{"line":476,"column":8},"generated":{"line":1,"column":2949}},{"source":"../src/dataset.ts","name":null,"original":{"line":476,"column":13},"generated":{"line":1,"column":2954}},{"source":"../src/dataset.ts","name":null,"original":{"line":476,"column":29},"generated":{"line":1,"column":2960}},{"source":"../src/dataset.ts","name":null,"original":{"line":476,"column":34},"generated":{"line":1,"column":2965}},{"source":"../src/dataset.ts","name":null,"original":{"line":476,"column":41},"generated":{"line":1,"column":2970}},{"source":"../src/dataset.ts","name":null,"original":{"line":479,"column":13},"generated":{"line":1,"column":2972}},{"source":"../src/dataset.ts","name":null,"original":{"line":480,"column":28},"generated":{"line":1,"column":2974}},{"source":"../src/dataset.ts","name":null,"original":{"line":480,"column":15},"generated":{"line":1,"column":2980}},{"source":"../src/dataset.ts","name":null,"original":{"line":480,"column":20},"generated":{"line":1,"column":2985}},{"source":"../src/dataset.ts","name":null,"original":{"line":480,"column":36},"generated":{"line":1,"column":2991}},{"source":"../src/dataset.ts","name":null,"original":{"line":480,"column":41},"generated":{"line":1,"column":2996}},{"source":"../src/dataset.ts","name":null,"original":{"line":480,"column":49},"generated":{"line":1,"column":3002}},{"source":"../src/dataset.ts","name":null,"original":{"line":483,"column":13},"generated":{"line":1,"column":3004}},{"source":"../src/dataset.ts","name":null,"original":{"line":483,"column":18},"generated":{"line":1,"column":3009}},{"source":"../src/dataset.ts","name":null,"original":{"line":486,"column":13},"generated":{"line":1,"column":3014}},{"source":"../src/dataset.ts","name":null,"original":{"line":508,"column":8},"generated":{"line":1,"column":3020}},{"source":"../src/dataset.ts","name":null,"original":{"line":509,"column":8},"generated":{"line":1,"column":3036}},{"source":"../src/dataset.ts","name":null,"original":{"line":509,"column":8},"generated":{"line":1,"column":3039}},{"source":"../src/dataset.ts","name":null,"original":{"line":509,"column":13},"generated":{"line":1,"column":3044}},{"source":"../src/dataset.ts","name":null,"original":{"line":509,"column":22},"generated":{"line":1,"column":3051}},{"source":"../src/dataset.ts","name":null,"original":{"line":509,"column":22},"generated":{"line":1,"column":3053}},{"source":"../src/dataset.ts","name":null,"original":{"line":510,"column":12},"generated":{"line":1,"column":3055}},{"source":"../src/dataset.ts","name":null,"original":{"line":510,"column":12},"generated":{"line":1,"column":3061}},{"source":"../src/dataset.ts","name":null,"original":{"line":510,"column":16},"generated":{"line":1,"column":3065}},{"source":"../src/dataset.ts","name":null,"original":{"line":510,"column":22},"generated":{"line":1,"column":3071}},{"source":"../src/dataset.ts","name":null,"original":{"line":512,"column":11},"generated":{"line":1,"column":3121}},{"source":"../src/dataset.ts","name":null,"original":{"line":512,"column":18},"generated":{"line":1,"column":3134}},{"source":"../src/dataset.ts","name":null,"original":{"line":512,"column":23},"generated":{"line":1,"column":3139}},{"source":"../src/dataset.ts","name":null,"original":{"line":512,"column":35},"generated":{"line":1,"column":3151}},{"source":"../src/dataset.ts","name":null,"original":{"line":526,"column":8},"generated":{"line":1,"column":3161}},{"source":"../src/dataset.ts","name":null,"original":{"line":527,"column":8},"generated":{"line":1,"column":3184}},{"source":"../src/dataset.ts","name":null,"original":{"line":527,"column":8},"generated":{"line":1,"column":3187}},{"source":"../src/dataset.ts","name":null,"original":{"line":527,"column":13},"generated":{"line":1,"column":3192}},{"source":"../src/dataset.ts","name":null,"original":{"line":527,"column":22},"generated":{"line":1,"column":3199}},{"source":"../src/dataset.ts","name":null,"original":{"line":527,"column":22},"generated":{"line":1,"column":3201}},{"source":"../src/dataset.ts","name":null,"original":{"line":528,"column":12},"generated":{"line":1,"column":3203}},{"source":"../src/dataset.ts","name":null,"original":{"line":528,"column":12},"generated":{"line":1,"column":3209}},{"source":"../src/dataset.ts","name":null,"original":{"line":528,"column":16},"generated":{"line":1,"column":3213}},{"source":"../src/dataset.ts","name":null,"original":{"line":528,"column":22},"generated":{"line":1,"column":3219}},{"source":"../src/dataset.ts","name":null,"original":{"line":530,"column":11},"generated":{"line":1,"column":3269}},{"source":"../src/dataset.ts","name":null,"original":{"line":530,"column":18},"generated":{"line":1,"column":3282}},{"source":"../src/dataset.ts","name":null,"original":{"line":530,"column":23},"generated":{"line":1,"column":3287}},{"source":"../src/dataset.ts","name":null,"original":{"line":530,"column":35},"generated":{"line":1,"column":3299}},{"source":"../src/dataset.ts","name":null,"original":{"line":546,"column":6},"generated":{"line":1,"column":3317}},{"source":"../src/dataset.ts","name":null,"original":{"line":546,"column":16},"generated":{"line":1,"column":3326}},{"source":"../src/dataset.ts","name":null,"original":{"line":547,"column":4},"generated":{"line":1,"column":3328}},{"source":"../src/dataset.ts","name":null,"original":{"line":548,"column":4},"generated":{"line":1,"column":3330}},{"source":"../src/dataset.ts","name":null,"original":{"line":548,"column":19},"generated":{"line":1,"column":3332}},{"source":"../src/dataset.ts","name":null,"original":{"line":549,"column":9},"generated":{"line":1,"column":3338}},{"source":"../src/dataset.ts","name":null,"original":{"line":549,"column":9},"generated":{"line":1,"column":3345}},{"source":"../src/dataset.ts","name":null,"original":{"line":549,"column":13},"generated":{"line":1,"column":3349}},{"source":"../src/dataset.ts","name":null,"original":{"line":549,"column":27},"generated":{"line":1,"column":3363}},{"source":"../src/dataset.ts","name":null,"original":{"line":549,"column":13},"generated":{"line":1,"column":3365}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":3379}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":3388}},{"source":"../src/dataset.ts","name":null,"original":{"line":550,"column":4},"generated":{"line":1,"column":3399}},{"source":"../src/dataset.ts","name":null,"original":{"line":550,"column":4},"generated":{"line":1,"column":3404}},{"source":"../src/dataset.ts","name":null,"original":{"line":550,"column":11},"generated":{"line":1,"column":3409}},{"source":"../src/dataset.ts","name":null,"original":{"line":556,"column":10},"generated":{"line":1,"column":3411}},{"source":"../src/dataset.ts","name":null,"original":{"line":557,"column":13},"generated":{"line":1,"column":3428}},{"source":"../src/dataset.ts","name":null,"original":{"line":557,"column":13},"generated":{"line":1,"column":3435}},{"source":"../src/dataset.ts","name":null,"original":{"line":581,"column":6},"generated":{"line":1,"column":3441}},{"source":"../src/dataset.ts","name":null,"original":{"line":581,"column":16},"generated":{"line":1,"column":3450}},{"source":"../src/dataset.ts","name":null,"original":{"line":581,"column":52},"generated":{"line":1,"column":3452}},{"source":"../src/dataset.ts","name":null,"original":{"line":582,"column":9},"generated":{"line":1,"column":3455}},{"source":"../src/dataset.ts","name":null,"original":{"line":582,"column":9},"generated":{"line":1,"column":3462}},{"source":"../src/dataset.ts","name":null,"original":{"line":583,"column":6},"generated":{"line":1,"column":3464}},{"source":"../src/dataset.ts","name":null,"original":{"line":583,"column":18},"generated":{"line":1,"column":3474}},{"source":"../src/dataset.ts","name":null,"original":{"line":583,"column":36},"generated":{"line":1,"column":3476}},{"source":"../src/dataset.ts","name":null,"original":{"line":583,"column":36},"generated":{"line":1,"column":3478}},{"source":"../src/dataset.ts","name":null,"original":{"line":583,"column":36},"generated":{"line":1,"column":3497}},{"source":"../src/dataset.ts","name":null,"original":{"line":583,"column":44},"generated":{"line":1,"column":3500}},{"source":"../src/dataset.ts","name":null,"original":{"line":583,"column":50},"generated":{"line":1,"column":3502}},{"source":"../src/dataset.ts","name":null,"original":{"line":627,"column":6},"generated":{"line":1,"column":3510}},{"source":"../src/dataset.ts","name":null,"original":{"line":627,"column":16},"generated":{"line":1,"column":3519}},{"source":"../src/dataset.ts","name":null,"original":{"line":627,"column":50},"generated":{"line":1,"column":3521}},{"source":"../src/dataset.ts","name":null,"original":{"line":630,"column":6},"generated":{"line":1,"column":3524}},{"source":"../src/dataset.ts","name":null,"original":{"line":630,"column":7},"generated":{"line":1,"column":3529}},{"source":"../src/dataset.ts","name":null,"original":{"line":630,"column":18},"generated":{"line":1,"column":3531}},{"source":"../src/dataset.ts","name":null,"original":{"line":630,"column":18},"generated":{"line":1,"column":3533}},{"source":"../src/dataset.ts","name":null,"original":{"line":630,"column":18},"generated":{"line":1,"column":3545}},{"source":"../src/dataset.ts","name":null,"original":{"line":631,"column":10},"generated":{"line":1,"column":3548}},{"source":"../src/dataset.ts","name":null,"original":{"line":631,"column":10},"generated":{"line":1,"column":3554}},{"source":"../src/dataset.ts","name":null,"original":{"line":631,"column":14},"generated":{"line":1,"column":3558}},{"source":"../src/dataset.ts","name":null,"original":{"line":631,"column":20},"generated":{"line":1,"column":3564}},{"source":"../src/dataset.ts","name":null,"original":{"line":633,"column":6},"generated":{"line":1,"column":3617}},{"source":"../src/dataset.ts","name":null,"original":{"line":633,"column":6},"generated":{"line":1,"column":3621}},{"source":"../src/dataset.ts","name":null,"original":{"line":634,"column":6},"generated":{"line":1,"column":3623}},{"source":"../src/dataset.ts","name":null,"original":{"line":634,"column":6},"generated":{"line":1,"column":3626}},{"source":"../src/dataset.ts","name":null,"original":{"line":634,"column":12},"generated":{"line":1,"column":3632}},{"source":"../src/dataset.ts","name":null,"original":{"line":634,"column":20},"generated":{"line":1,"column":3640}},{"source":"../src/dataset.ts","name":null,"original":{"line":635,"column":9},"generated":{"line":1,"column":3643}},{"source":"../src/dataset.ts","name":null,"original":{"line":635,"column":9},"generated":{"line":1,"column":3647}},{"source":"../src/dataset.ts","name":null,"original":{"line":635,"column":13},"generated":{"line":1,"column":3651}},{"source":"../src/dataset.ts","name":null,"original":{"line":635,"column":17},"generated":{"line":1,"column":3653}},{"source":"../src/dataset.ts","name":null,"original":{"line":635,"column":20},"generated":{"line":1,"column":3655}},{"source":"../src/dataset.ts","name":null,"original":{"line":635,"column":24},"generated":{"line":1,"column":3657}},{"source":"../src/dataset.ts","name":null,"original":{"line":635,"column":33},"generated":{"line":1,"column":3659}},{"source":"../src/dataset.ts","name":null,"original":{"line":635,"column":41},"generated":{"line":1,"column":3666}},{"source":"../src/dataset.ts","name":null,"original":{"line":636,"column":6},"generated":{"line":1,"column":3670}},{"source":"../src/dataset.ts","name":null,"original":{"line":636,"column":21},"generated":{"line":1,"column":3672}},{"source":"../src/dataset.ts","name":null,"original":{"line":636,"column":13},"generated":{"line":1,"column":3678}},{"source":"../src/dataset.ts","name":null,"original":{"line":636,"column":29},"generated":{"line":1,"column":3680}},{"source":"../src/dataset.ts","name":null,"original":{"line":636,"column":38},"generated":{"line":1,"column":3682}},{"source":"../src/dataset.ts","name":null,"original":{"line":636,"column":56},"generated":{"line":1,"column":3685}},{"source":"../src/dataset.ts","name":null,"original":{"line":637,"column":28},"generated":{"line":1,"column":3690}},{"source":"../src/dataset.ts","name":null,"original":{"line":637,"column":33},"generated":{"line":1,"column":3695}},{"source":"../src/dataset.ts","name":null,"original":{"line":637,"column":37},"generated":{"line":1,"column":3699}},{"source":"../src/dataset.ts","name":null,"original":{"line":637,"column":44},"generated":{"line":1,"column":3701}},{"source":"../src/dataset.ts","name":null,"original":{"line":637,"column":53},"generated":{"line":1,"column":3703}},{"source":"../src/dataset.ts","name":null,"original":{"line":637,"column":71},"generated":{"line":1,"column":3706}},{"source":"../src/dataset.ts","name":null,"original":{"line":639,"column":9},"generated":{"line":1,"column":3717}},{"source":"../src/dataset.ts","name":null,"original":{"line":639,"column":13},"generated":{"line":1,"column":3720}},{"source":"../src/dataset.ts","name":null,"original":{"line":639,"column":33},"generated":{"line":1,"column":3733}},{"source":"../src/dataset.ts","name":null,"original":{"line":640,"column":9},"generated":{"line":1,"column":3740}},{"source":"../src/dataset.ts","name":null,"original":{"line":640,"column":9},"generated":{"line":1,"column":3744}},{"source":"../src/dataset.ts","name":null,"original":{"line":640,"column":15},"generated":{"line":1,"column":3750}},{"source":"../src/dataset.ts","name":null,"original":{"line":640,"column":21},"generated":{"line":1,"column":3755}},{"source":"../src/dataset.ts","name":null,"original":{"line":641,"column":6},"generated":{"line":1,"column":3757}},{"source":"../src/dataset.ts","name":null,"original":{"line":641,"column":21},"generated":{"line":1,"column":3759}},{"source":"../src/dataset.ts","name":null,"original":{"line":641,"column":13},"generated":{"line":1,"column":3765}},{"source":"../src/dataset.ts","name":null,"original":{"line":641,"column":29},"generated":{"line":1,"column":3767}},{"source":"../src/dataset.ts","name":null,"original":{"line":641,"column":38},"generated":{"line":1,"column":3769}},{"source":"../src/dataset.ts","name":null,"original":{"line":641,"column":57},"generated":{"line":1,"column":3772}},{"source":"../src/dataset.ts","name":null,"original":{"line":642,"column":28},"generated":{"line":1,"column":3777}},{"source":"../src/dataset.ts","name":null,"original":{"line":642,"column":33},"generated":{"line":1,"column":3782}},{"source":"../src/dataset.ts","name":null,"original":{"line":642,"column":37},"generated":{"line":1,"column":3786}},{"source":"../src/dataset.ts","name":null,"original":{"line":642,"column":44},"generated":{"line":1,"column":3788}},{"source":"../src/dataset.ts","name":null,"original":{"line":642,"column":53},"generated":{"line":1,"column":3790}},{"source":"../src/dataset.ts","name":null,"original":{"line":642,"column":72},"generated":{"line":1,"column":3793}},{"source":"../src/dataset.ts","name":null,"original":{"line":645,"column":9},"generated":{"line":1,"column":3799}},{"source":"../src/dataset.ts","name":null,"original":{"line":645,"column":9},"generated":{"line":1,"column":3806}},{"source":"../src/dataset.ts","name":null,"original":{"line":645,"column":34},"generated":{"line":1,"column":3808}},{"source":"../src/dataset.ts","name":null,"original":{"line":646,"column":10},"generated":{"line":1,"column":3818}},{"source":"../src/dataset.ts","name":null,"original":{"line":646,"column":10},"generated":{"line":1,"column":3824}},{"source":"../src/dataset.ts","name":null,"original":{"line":646,"column":26},"generated":{"line":1,"column":3832}},{"source":"../src/dataset.ts","name":null,"original":{"line":646,"column":45},"generated":{"line":1,"column":3834}},{"source":"../src/dataset.ts","name":null,"original":{"line":646,"column":45},"generated":{"line":1,"column":3836}},{"source":"../src/dataset.ts","name":null,"original":{"line":646,"column":45},"generated":{"line":1,"column":3856}},{"source":"../src/dataset.ts","name":null,"original":{"line":646,"column":55},"generated":{"line":1,"column":3858}},{"source":"../src/dataset.ts","name":null,"original":{"line":647,"column":10},"generated":{"line":1,"column":3862}},{"source":"../src/dataset.ts","name":null,"original":{"line":647,"column":10},"generated":{"line":1,"column":3865}},{"source":"../src/dataset.ts","name":null,"original":{"line":647,"column":23},"generated":{"line":1,"column":3878}},{"source":"../src/dataset.ts","name":null,"original":{"line":648,"column":15},"generated":{"line":1,"column":3880}},{"source":"../src/dataset.ts","name":null,"original":{"line":648,"column":15},"generated":{"line":1,"column":3886}},{"source":"../src/dataset.ts","name":null,"original":{"line":648,"column":16},"generated":{"line":1,"column":3887}},{"source":"../src/dataset.ts","name":null,"original":{"line":648,"column":23},"generated":{"line":1,"column":3893}},{"source":"../src/dataset.ts","name":null,"original":{"line":648,"column":25},"generated":{"line":1,"column":3895}},{"source":"../src/dataset.ts","name":null,"original":{"line":648,"column":37},"generated":{"line":1,"column":3906}},{"source":"../src/dataset.ts","name":null,"original":{"line":648,"column":46},"generated":{"line":1,"column":3915}},{"source":"../src/dataset.ts","name":null,"original":{"line":649,"column":13},"generated":{"line":1,"column":3918}},{"source":"../src/dataset.ts","name":null,"original":{"line":649,"column":17},"generated":{"line":1,"column":3922}},{"source":"../src/dataset.ts","name":null,"original":{"line":649,"column":28},"generated":{"line":1,"column":3924}},{"source":"../src/dataset.ts","name":null,"original":{"line":649,"column":28},"generated":{"line":1,"column":3926}},{"source":"../src/dataset.ts","name":null,"original":{"line":649,"column":28},"generated":{"line":1,"column":3938}},{"source":"../src/dataset.ts","name":null,"original":{"line":650,"column":15},"generated":{"line":1,"column":3941}},{"source":"../src/dataset.ts","name":null,"original":{"line":650,"column":15},"generated":{"line":1,"column":3947}},{"source":"../src/dataset.ts","name":null,"original":{"line":650,"column":16},"generated":{"line":1,"column":3948}},{"source":"../src/dataset.ts","name":null,"original":{"line":650,"column":23},"generated":{"line":1,"column":3954}},{"source":"../src/dataset.ts","name":null,"original":{"line":650,"column":29},"generated":{"line":1,"column":3959}},{"source":"../src/dataset.ts","name":null,"original":{"line":650,"column":38},"generated":{"line":1,"column":3968}},{"source":"../src/dataset.ts","name":null,"original":{"line":652,"column":14},"generated":{"line":1,"column":3971}},{"source":"../src/dataset.ts","name":null,"original":{"line":652,"column":14},"generated":{"line":1,"column":3977}},{"source":"../src/dataset.ts","name":null,"original":{"line":652,"column":18},"generated":{"line":1,"column":3981}},{"source":"../src/dataset.ts","name":null,"original":{"line":653,"column":12},"generated":{"line":1,"column":3987}},{"source":"../src/dataset.ts","name":null,"original":{"line":657,"column":11},"generated":{"line":1,"column":4066}},{"source":"../src/dataset.ts","name":null,"original":{"line":657,"column":11},"generated":{"line":1,"column":4073}},{"source":"../src/dataset.ts","name":null,"original":{"line":657,"column":33},"generated":{"line":1,"column":4075}},{"source":"../src/dataset.ts","name":null,"original":{"line":657,"column":33},"generated":{"line":1,"column":4077}},{"source":"../src/dataset.ts","name":null,"original":{"line":657,"column":33},"generated":{"line":1,"column":4097}},{"source":"../src/dataset.ts","name":null,"original":{"line":657,"column":42},"generated":{"line":1,"column":4099}},{"source":"../src/dataset.ts","name":null,"original":{"line":657,"column":58},"generated":{"line":1,"column":4101}},{"source":"../src/dataset.ts","name":null,"original":{"line":657,"column":58},"generated":{"line":1,"column":4117}},{"source":"../src/dataset.ts","name":null,"original":{"line":658,"column":5},"generated":{"line":1,"column":4128}},{"source":"../src/dataset.ts","name":null,"original":{"line":669,"column":0},"generated":{"line":1,"column":4131}},{"source":"../src/dataset.ts","name":null,"original":{"line":669,"column":9},"generated":{"line":1,"column":4140}},{"source":"../src/dataset.ts","name":null,"original":{"line":669,"column":25},"generated":{"line":1,"column":4142}},{"source":"../src/dataset.ts","name":null,"original":{"line":670,"column":6},"generated":{"line":1,"column":4145}},{"source":"../src/dataset.ts","name":null,"original":{"line":670,"column":15},"generated":{"line":1,"column":4148}},{"source":"../src/dataset.ts","name":null,"original":{"line":670,"column":6},"generated":{"line":1,"column":4155}},{"source":"../src/dataset.ts","name":null,"original":{"line":671,"column":11},"generated":{"line":1,"column":4157}},{"source":"../src/dataset.ts","name":null,"original":{"line":671,"column":11},"generated":{"line":1,"column":4164}},{"source":"../src/dataset.ts","name":null,"original":{"line":675,"column":8},"generated":{"line":1,"column":4169}},{"source":"../src/dataset.ts","name":null,"original":{"line":675,"column":8},"generated":{"line":1,"column":4175}},{"source":"../src/dataset.ts","name":null,"original":{"line":675,"column":21},"generated":{"line":1,"column":4177}},{"source":"../src/dataset.ts","name":null,"original":{"line":675,"column":26},"generated":{"line":1,"column":4179}},{"source":"../src/dataset.ts","name":null,"original":{"line":677,"column":6},"generated":{"line":1,"column":4182}},{"source":"../src/dataset.ts","name":null,"original":{"line":677,"column":6},"generated":{"line":1,"column":4186}},{"source":"../src/dataset.ts","name":null,"original":{"line":677,"column":19},"generated":{"line":1,"column":4188}},{"source":"../src/dataset.ts","name":null,"original":{"line":677,"column":19},"generated":{"line":1,"column":4190}},{"source":"../src/dataset.ts","name":null,"original":{"line":677,"column":19},"generated":{"line":1,"column":4204}},{"source":"../src/dataset.ts","name":null,"original":{"line":677,"column":32},"generated":{"line":1,"column":4207}},{"source":"../src/dataset.ts","name":null,"original":{"line":680,"column":11},"generated":{"line":1,"column":4208}},{"source":"../src/dataset.ts","name":null,"original":{"line":680,"column":11},"generated":{"line":1,"column":4214}},{"source":"../src/dataset.ts","name":null,"original":{"line":680,"column":12},"generated":{"line":1,"column":4215}},{"source":"../src/dataset.ts","name":null,"original":{"line":679,"column":18},"generated":{"line":1,"column":4221}},{"source":"../src/dataset.ts","name":null,"original":{"line":679,"column":30},"generated":{"line":1,"column":4223}},{"source":"../src/dataset.ts","name":null,"original":{"line":680,"column":19},"generated":{"line":1,"column":4226}},{"source":"../src/dataset.ts","name":null,"original":{"line":680,"column":28},"generated":{"line":1,"column":4235}},{"source":"../src/dataset.ts","name":null,"original":{"line":684,"column":9},"generated":{"line":1,"column":4238}},{"source":"../src/dataset.ts","name":null,"original":{"line":684,"column":9},"generated":{"line":1,"column":4244}},{"source":"../src/dataset.ts","name":null,"original":{"line":684,"column":10},"generated":{"line":1,"column":4245}},{"source":"../src/dataset.ts","name":null,"original":{"line":684,"column":17},"generated":{"line":1,"column":4251}},{"source":"../src/dataset.ts","name":null,"original":{"line":684,"column":23},"generated":{"line":1,"column":4256}},{"source":"../src/dataset.ts","name":null,"original":{"line":684,"column":32},"generated":{"line":1,"column":4265}},{"source":"../src/dataset.ts","name":null,"original":{"line":691,"column":0},"generated":{"line":1,"column":4268}},{"source":"../src/dataset.ts","name":null,"original":{"line":691,"column":9},"generated":{"line":1,"column":4277}},{"source":"../src/dataset.ts","name":null,"original":{"line":691,"column":56},"generated":{"line":1,"column":4279}},{"source":"../src/dataset.ts","name":null,"original":{"line":693,"column":6},"generated":{"line":1,"column":4282}},{"source":"../src/dataset.ts","name":null,"original":{"line":693,"column":24},"generated":{"line":1,"column":4285}},{"source":"../src/dataset.ts","name":null,"original":{"line":693,"column":6},"generated":{"line":1,"column":4289}},{"source":"../src/dataset.ts","name":null,"original":{"line":693,"column":13},"generated":{"line":1,"column":4291}},{"source":"../src/dataset.ts","name":null,"original":{"line":695,"column":10},"generated":{"line":1,"column":4298}},{"source":"../src/dataset.ts","name":null,"original":{"line":695,"column":10},"generated":{"line":1,"column":4304}},{"source":"../src/dataset.ts","name":null,"original":{"line":695,"column":14},"generated":{"line":1,"column":4308}},{"source":"../src/dataset.ts","name":null,"original":{"line":695,"column":20},"generated":{"line":1,"column":4314}},{"source":"../src/dataset.ts","name":null,"original":{"line":698,"column":6},"generated":{"line":1,"column":4354}},{"source":"../src/dataset.ts","name":null,"original":{"line":698,"column":6},"generated":{"line":1,"column":4361}},{"source":"../src/dataset.ts","name":null,"original":{"line":698,"column":13},"generated":{"line":1,"column":4363}},{"source":"../src/dataset.ts","name":null,"original":{"line":698,"column":27},"generated":{"line":1,"column":4376}},{"source":"../src/dataset.ts","name":null,"original":{"line":698,"column":30},"generated":{"line":1,"column":4378}},{"source":"../src/dataset.ts","name":null,"original":{"line":700,"column":11},"generated":{"line":1,"column":4385}},{"source":"../src/dataset.ts","name":null,"original":{"line":700,"column":14},"generated":{"line":1,"column":4387}},{"source":"../src/dataset.ts","name":null,"original":{"line":700,"column":20},"generated":{"line":1,"column":4393}},{"source":"../src/dataset.ts","name":null,"original":{"line":703,"column":11},"generated":{"line":1,"column":4396}},{"source":"../src/dataset.ts","name":null,"original":{"line":703,"column":14},"generated":{"line":1,"column":4398}},{"source":"../src/dataset.ts","name":null,"original":{"line":703,"column":21},"generated":{"line":1,"column":4405}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":4408}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":4416}},{"source":"../src/dataset.ts","name":null,"original":{"line":705,"column":1},"generated":{"line":1,"column":4424}},{"source":"../src/dataset.ts","name":null,"original":{"line":408,"column":18},"generated":{"line":1,"column":4426}},{"source":"../src/dataset.ts","name":null,"original":{"line":408,"column":18},"generated":{"line":1,"column":4428}},{"source":"../src/dataset.ts","name":null,"original":{"line":408,"column":36},"generated":{"line":1,"column":4444}}],"sources":{"../src/dataset.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\nimport {TensorContainer, TensorLike} from '@tensorflow/tfjs-core';\nimport * as seedrandom from 'seedrandom';\n\nimport {iteratorFromConcatenated, iteratorFromFunction, iteratorFromItems, iteratorFromZipped, LazyIterator, ZipMismatchMode} from './iterators/lazy_iterator';\nimport {Container} from './types';\nimport {canTensorify, deepMapAndAwaitAll, DeepMapResult, isIterable} from './util/deep_map';\n\n/**\n * A nested structure of Datasets, used as the input to zip().\n */\nexport type DatasetContainer = Container<Dataset<TensorContainer>>;\n\n// TODO(soergel): consider vectorized operations within the pipeline.\n\n/**\n * Represents a potentially large list of independent data elements (typically\n * 'samples' or 'examples').\n *\n * A 'data example' may be a primitive, an array, a map from string keys to\n * values, or any nested structure of these.\n *\n * A `Dataset` represents an ordered collection of elements, together with a\n * chain of transformations to be performed on those elements. Each\n * transformation is a method of `Dataset` that returns another `Dataset`, so\n * these may be chained, e.g.\n * `const processedDataset = rawDataset.filter(...).map(...).batch(...)`.\n *\n * Data loading and transformation is done in a lazy, streaming fashion.  The\n * dataset may be iterated over multiple times; each iteration starts the data\n * loading anew and recapitulates the transformations.\n *\n * A `Dataset` is typically processed as a stream of unbatched examples --i.e.,\n * its transformations are applied one example at a time. Batching produces a\n * new `Dataset` where each element is a batch. Batching should usually come\n * last in a pipeline, because data transformations are easier to express on a\n * per-example basis than on a per-batch basis.\n *\n * The following code examples are calling `await dataset.forEachAsync(...)` to\n * iterate once over the entire dataset in order to print out the data.\n *\n * @doc {heading: 'Data', subheading: 'Classes', namespace: 'data'}\n */\nexport abstract class Dataset<T extends tf.TensorContainer> {\n  /*\n   * Provide a new stream of elements.  Note this will also start new streams\n   * from any underlying `Dataset`s.\n   *\n   * CAUTION: Any Tensors contained within the elements returned from\n   * this stream *must* be manually disposed to avoid a GPU memory leak.\n   * The tf.tidy() approach cannot be used in an asynchronous context.\n   */\n  abstract async iterator(): Promise<LazyIterator<T>>;\n\n  readonly size: number = null;\n\n  // TODO(soergel): Make Datasets report whether repeated iterator() calls\n  // produce the same result (e.g., reading from a file) or different results\n  // (e.g., from the webcam).  Currently we don't make this distinction but it\n  // could be important for the user to know.\n  // abstract isDeterministic(): boolean;\n\n  /**\n   * Groups elements into batches.\n   *\n   * It is assumed that each of the incoming dataset elements has the same\n   * structure-- i.e. the same set of keys at each location in an object\n   * hierarchy.  For each key, the resulting `Dataset` provides a batched\n   * element collecting all of the incoming values for that key.\n   *\n   *  * Incoming primitives are grouped into a 1-D Tensor.\n   *  * Incoming Tensors are grouped into a new Tensor where the 0'th axis is\n   *    the batch dimension.\n   *  * Incoming arrays are converted to Tensor and then batched.\n   *  * A nested array is interpreted as an n-D Tensor, so the batched result\n   *    has n+1 dimensions.\n   *  * An array that cannot be converted to Tensor produces an error.\n   *\n   * If an array should not be batched as a unit, it should first be converted\n   * to an object with integer keys.\n   *\n   * Here are a few examples:\n   *\n   * Batch a dataset of numbers:\n   * ```js\n   * const a = tf.data.array([1, 2, 3, 4, 5, 6, 7, 8]).batch(4);\n   * await a.forEachAsync(e => e.print());\n   * ```\n   *\n   * Batch a dataset of arrays:\n   * ```js\n   * const b = tf.data.array([[1], [2], [3], [4], [5], [6], [7], [8]]).batch(4);\n   * await b.forEachAsync(e => e.print());\n   * ```\n   *\n   * Batch a dataset of objects:\n   * ```js\n   * const c = tf.data.array([{a: 1, b: 11}, {a: 2, b: 12}, {a: 3, b: 13},\n   *   {a: 4, b: 14}, {a: 5, b: 15}, {a: 6, b: 16}, {a: 7, b: 17},\n   *   {a: 8, b: 18}]).batch(4);\n   * await c.forEachAsync(e => {\n   *   console.log('{');\n   *   for(var key in e) {\n   *     console.log(key+':');\n   *     e[key].print();\n   *   }\n   *   console.log('}');\n   * })\n   * ```\n   *\n   * @param batchSize The number of elements desired per batch.\n   * @param smallLastBatch Whether to emit the final batch when it has fewer\n   *   than batchSize elements. Default true.\n   * @returns A `Dataset`, from which a stream of batches can be obtained.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  batch(batchSize: number, smallLastBatch = true): Dataset<tf.TensorContainer> {\n    const base = this;\n    tf.util.assert(\n        batchSize > 0, () => `batchSize needs to be positive, but it is\n      ${batchSize}`);\n    let size;\n    if (this.size === Infinity || this.size == null) {\n      // If the size of this dataset is infinity or null, the new size keeps the\n      // same.\n      size = this.size;\n    } else if (smallLastBatch) {\n      // If the size of this dataset is known and include small last batch, the\n      // new size is full batch count plus last batch.\n      size = Math.ceil(this.size / batchSize);\n    } else {\n      // If the size of this dataset is known and not include small last batch,\n      // the new size is full batch count.\n      size = Math.floor(this.size / batchSize);\n    }\n    return datasetFromIteratorFn(async () => {\n      return (await base.iterator())\n          .columnMajorBatch(batchSize, smallLastBatch, deepBatchConcat);\n    }, size);\n  }\n\n  /**\n   * Concatenates this `Dataset` with another.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3]);\n   * const b = tf.data.array([4, 5, 6]);\n   * const c = a.concatenate(b);\n   * await c.forEachAsync(e => console.log(e));\n   * ```\n   *\n   * @param dataset A `Dataset` to be concatenated onto this one.\n   * @returns A `Dataset`.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  concatenate(dataset: Dataset<T>): Dataset<T> {\n    const base = this;\n    let size;\n    if (this.size === Infinity || dataset.size === Infinity) {\n      // If the size of any of these two dataset is infinity, new size is\n      // infinity.\n      size = Infinity;\n    } else if (this.size != null && dataset.size != null) {\n      // If the size of both datasets are known and not infinity, new size is\n      // sum the size of these two datasets.\n      size = this.size + dataset.size;\n    } else {\n      // If neither of these two datasets has infinite size and any of these two\n      // datasets' size is null, the new size is null.\n      size = null;\n    }\n    return datasetFromIteratorFn(\n        async () =>\n            (await base.iterator()).concatenate(await dataset.iterator()),\n        size);\n  }\n\n  /**\n   * Filters this dataset according to `predicate`.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n   *   .filter(x => x%2 === 0);\n   * await a.forEachAsync(e => console.log(e));\n   * ```\n   *\n   * @param predicate A function mapping a dataset element to a boolean or a\n   * `Promise` for one.\n   *\n   * @returns A `Dataset` of elements for which the predicate was true.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  filter(predicate: (value: T) => boolean): Dataset<T> {\n    const base = this;\n    let size;\n    if (this.size === Infinity) {\n      // If the size of this dataset is infinity, new size is infinity\n      size = Infinity;\n    } else {\n      // If this dataset has limited elements, new size is null because it might\n      // exhausted randomly.\n      size = null;\n    }\n    return datasetFromIteratorFn(async () => {\n      return (await base.iterator()).filter(x => tf.tidy(() => predicate(x)));\n    }, size);\n  }\n\n  /**\n   * Apply a function to every element of the dataset.\n   *\n   * After the function is applied to a dataset element, any Tensors contained\n   * within that element are disposed.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3]);\n   * await a.forEachAsync(e => console.log(e));\n   * ```\n   *\n   * @param f A function to apply to each dataset element.\n   * @returns A `Promise` that resolves after all elements have been processed.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  async forEachAsync(f: (input: T) => void): Promise<void> {\n    return (await this.iterator()).forEachAsync(f);\n  }\n\n  /**\n   * Maps this dataset through a 1-to-1 transform.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3]).map(x => x*x);\n   * await a.forEachAsync(e => console.log(e));\n   * ```\n   *\n   * @param transform A function mapping a dataset element to a transformed\n   *   dataset element.\n   *\n   * @returns A `Dataset` of transformed elements.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  map<O extends tf.TensorContainer>(transform: (value: T) => O): Dataset<O> {\n    const base = this;\n    return datasetFromIteratorFn(async () => {\n      return (await base.iterator()).map(x => tf.tidy(() => transform(x)));\n    }, this.size);\n  }\n\n  /**\n   * Maps this dataset through an async 1-to-1 transform.\n   *\n   * ```js\n   * const a =\n   *  tf.data.array([1, 2, 3]).mapAsync(x => new Promise(function(resolve){\n   *    setTimeout(() => {\n   *      resolve(x * x);\n   *    }, Math.random()*1000 + 500);\n   *  }));\n   * console.log(await a.toArray());\n   * ```\n   *\n   * @param transform A function mapping a dataset element to a `Promise` for a\n   *   transformed dataset element.  This transform is responsible for disposing\n   *   any intermediate `Tensor`s, i.e. by wrapping its computation in\n   *   `tf.tidy()`; that cannot be automated here (as it is in the synchronous\n   *   `map()` case).\n   *\n   * @returns A `Dataset` of transformed elements.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  mapAsync<O extends tf.TensorContainer>(transform: (value: T) => Promise<O>):\n      Dataset<O> {\n    const base = this;\n    return datasetFromIteratorFn(async () => {\n      return (await base.iterator()).mapAsync(transform);\n    }, this.size);\n  }\n\n  /**\n   *  Creates a `Dataset` that prefetches elements from this dataset.\n   *\n   * @param bufferSize: An integer specifying the number of elements to be\n   *   prefetched.\n   * @returns A `Dataset`.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  prefetch(bufferSize: number): Dataset<T> {\n    if (bufferSize == null) {\n      throw new RangeError(\n          '`Dataset.prefetch()` requires bufferSize to be specified.');\n    }\n\n    const base = this;\n    return datasetFromIteratorFn(\n        async () => (await base.iterator()).prefetch(bufferSize), this.size);\n  }\n\n  /**\n   * Repeats this dataset `count` times.\n   *\n   * NOTE: If this dataset is a function of global state (e.g. a random number\n   * generator), then different repetitions may produce different elements.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3]).repeat(3);\n   * await a.forEachAsync(e => console.log(e));\n   * ```\n   *\n   * @param count: (Optional) An integer, representing the number of times\n   *   the dataset should be repeated. The default behavior (if `count` is\n   *   `undefined` or negative) is for the dataset be repeated indefinitely.\n   * @returns A `Dataset`.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  repeat(count?: number): Dataset<T> {\n    const base = this;\n    let size;\n    if (this.size != null && count > 0) {\n      // If this dataset has size and count is positive, new size is current\n      // size multiply count. This also covers the case that current size is\n      // infinity.\n      size = this.size * count;\n    } else if (count === 0) {\n      // If count is 0, new size is 0.\n      size = 0;\n    } else if (this.size != null && (count === undefined || count < 0)) {\n      // If this dataset has size and count is undefined or negative, the\n      // dataset will be repeated indefinitely and new size is infinity.\n      size = Infinity;\n    } else {\n      // If the size of this dataset is null, the new dataset's size is null.\n      size = null;\n    }\n    return datasetFromIteratorFn(async () => {\n      const iteratorIterator = iteratorFromFunction(\n          async () => ({value: await base.iterator(), done: false}));\n      return iteratorFromConcatenated(iteratorIterator.take(count));\n    }, size);\n  }\n\n  /**\n   * Creates a `Dataset` that skips `count` initial elements from this dataset.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3, 4, 5, 6]).skip(3);\n   * await a.forEachAsync(e => console.log(e));\n   * ```\n   *\n   * @param count: The number of elements of this dataset that should be skipped\n   *   to form the new dataset.  If `count` is greater than the size of this\n   *   dataset, the new dataset will contain no elements.  If `count`\n   *   is `undefined` or negative, skips the entire dataset.\n   *\n   * @returns A `Dataset`.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  skip(count: number): Dataset<T> {\n    const base = this;\n    let size;\n    if (this.size != null && count >= 0 && this.size >= count) {\n      // If the size of this dataset is greater than count, the new dataset's\n      // size is current size minus skipped size.This also covers the case that\n      // current size is infinity.\n      size = this.size - count;\n    } else if (\n        this.size != null &&\n        (this.size < count || count === undefined || count < 0)) {\n      // If the size of this dataset is smaller than count, or count is\n      // undefined or negative, skips the entire dataset and the new size is 0.\n      size = 0;\n    } else {\n      // If the size of this dataset is null, the new dataset's size is null.\n      size = null;\n    }\n    return datasetFromIteratorFn(\n        async () => (await base.iterator()).skip(count), size);\n  }\n\n  // TODO(soergel): deep sharded shuffle, where supported\n\n  static readonly MAX_BUFFER_SIZE = 10000;\n\n  /**\n   * Pseudorandomly shuffles the elements of this dataset. This is done in a\n   * streaming manner, by sampling from a given number of prefetched elements.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3, 4, 5, 6]).shuffle(3);\n   * await a.forEachAsync(e => console.log(e));\n   * ```\n   *\n   * @param bufferSize: An integer specifying the number of elements from this\n   *   dataset from which the new dataset will sample.\n   * @param seed: (Optional) An integer specifying the random seed that will\n   *   be used to create the distribution.\n   * @param reshuffleEachIteration: (Optional) A boolean, which if true\n   *   indicates that the dataset should be pseudorandomly reshuffled each time\n   *   it is iterated over. If false, elements will be returned in the same\n   *   shuffled order on each iteration. (Defaults to `true`.)\n   * @returns A `Dataset`.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  shuffle(bufferSize: number, seed?: string, reshuffleEachIteration = true):\n      Dataset<T> {\n    if (bufferSize == null || bufferSize < 0) {\n      if (this.size == null) {\n        throw new RangeError(\n            '`Dataset.shuffle()` requires bufferSize to be specified.');\n      } else {\n        throw new RangeError(\n            '`Dataset.shuffle()` requires bufferSize to be specified.  ' +\n            'If your data fits in main memory (for regular JS objects), ' +\n            'and/or GPU memory (for `tf.Tensor`s), consider setting ' +\n            `bufferSize to the dataset size (${this.size} elements)`);\n      }\n    }\n    const base = this;\n    const random = seedrandom.alea(seed || tf.util.now().toString());\n    return datasetFromIteratorFn(async () => {\n      let seed2 = random.int32();\n      if (reshuffleEachIteration) {\n        seed2 += random.int32();\n      }\n      return (await base.iterator()).shuffle(bufferSize, seed2.toString());\n    }, this.size);\n  }\n\n  /**\n   * Creates a `Dataset` with at most `count` initial elements from this\n   * dataset.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3, 4, 5, 6]).take(3);\n   * await a.forEachAsync(e => console.log(e));\n   * ```\n   *\n   * @param count: The number of elements of this dataset that should be taken\n   *   to form the new dataset.  If `count` is `undefined` or negative, or if\n   *   `count` is greater than the size of this dataset, the new dataset will\n   *   contain all elements of this dataset.\n   * @returns A `Dataset`.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  take(count: number): Dataset<T> {\n    const base = this;\n    let size;\n    if (this.size != null && this.size > count) {\n      // If the size of this dataset is greater than count, the new dataset's\n      // size is count.\n      size = count;\n    } else if (this.size != null && this.size <= count) {\n      // If the size of this dataset is equal or smaller than count, the new\n      // dataset's size is the size of this dataset.\n      size = this.size;\n    } else {\n      // If the size of this dataset is null, the new dataset's size is null.\n      size = null;\n    }\n    return datasetFromIteratorFn(\n        async () => (await base.iterator()).take(count), size);\n  }\n\n  /**\n   * Collect all elements of this dataset into an array.\n   *\n   * Obviously this will succeed only for small datasets that fit in memory.\n   * Useful for testing and generally should be avoided if possible.\n   *\n   * ```js\n   * const a = tf.data.array([1, 2, 3, 4, 5, 6]);\n   * console.log(await a.toArray());\n   * ```\n   *\n   * @returns A Promise for an array of elements, which will resolve\n   *   when a new stream has been obtained and fully consumed.\n   *\n   * @doc {heading: 'Data', subheading: 'Classes'}\n   */\n  async toArray() {\n    if (this.size === Infinity) {\n      throw new Error('Can not convert infinite data stream to array.');\n    }\n    return (await this.iterator()).toArray();\n  }\n\n  /**\n   * Collect all elements of this dataset into an array with prefetching 100\n   * elements. This is useful for testing, because the prefetch changes the\n   * order in which the Promises are resolved along the processing pipeline.\n   * This may help expose bugs where results are dependent on the order of\n   * Promise resolution rather than on the logical order of the stream (i.e.,\n   * due to hidden mutable state).\n   *\n   * @returns A Promise for an array of elements, which will resolve\n   *   when a new stream has been obtained and fully consumed.\n   */\n  async toArrayForTest() {\n    if (this.size === Infinity) {\n      throw new Error('Can not convert infinite data stream to array.');\n    }\n    return (await this.iterator()).toArrayForTest();\n  }\n}\n\n/**\n * Create a `Dataset` defined by a provided iterator() function.\n *\n * ```js\n * let i = -1;\n * const func = () =>\n *    ++i < 5 ? {value: i, done: false} : {value: null, done: true};\n * const iter = tf.data.iteratorFromFunction(func);\n * const ds = tf.data.datasetFromIteratorFn(iter);\n * await ds.forEachAsync(e => console.log(e));\n * ```\n */\nexport function datasetFromIteratorFn<T extends tf.TensorContainer>(\n    iteratorFn: () => Promise<LazyIterator<T>>,\n    size: number = null): Dataset<T> {\n  return new class extends Dataset<T> {\n    size = size;\n\n    /*\n     * Provide a new stream of elements.  Note this will also start new streams\n     * from any underlying `Dataset`s.\n     */\n    async iterator(): Promise<LazyIterator<T>> {\n      return iteratorFn();\n    }\n  }\n  ();\n}\n\n/**\n * Create a `Dataset` from an array of elements.\n *\n * Create a Dataset from an array of objects:\n * ```js\n * const a = tf.data.array([{'item': 1}, {'item': 2}, {'item': 3}]);\n * await a.forEachAsync(e => console.log(e));\n * ```\n *\n * Create a Dataset from an array of numbers:\n * ```js\n * const a = tf.data.array([4, 5, 6]);\n * await a.forEachAsync(e => console.log(e));\n * ```\n * @param items An array of elements that will be parsed as items in a dataset.\n *\n * @doc {heading: 'Data', subheading: 'Creation', namespace: 'data'}\n */\nexport function array<T extends tf.TensorContainer>(items: T[]): Dataset<T> {\n  return datasetFromIteratorFn(\n      async () => iteratorFromItems(items), items.length);\n}\n\n/**\n * Create a `Dataset` by zipping together an array, dict, or nested\n * structure of `Dataset`s (and perhaps additional constants).\n * The underlying datasets must provide elements in a consistent order such that\n * they correspond.\n *\n * The number of elements in the resulting dataset is the same as the size of\n * the smallest dataset in datasets.\n *\n * The nested structure of the `datasets` argument determines the\n * structure of elements in the resulting iterator.\n *\n * Note this means that, given an array of two datasets that produce dict\n * elements, the result is a dataset that produces elements that are arrays\n * of two dicts:\n *\n * Zip an array of datasets:\n * ```js\n * console.log('Zip two datasets of objects:');\n * const ds1 = tf.data.array([{a: 1}, {a: 2}, {a: 3}]);\n * const ds2 = tf.data.array([{b: 4}, {b: 5}, {b: 6}]);\n * const ds3 = tf.data.zip([ds1, ds2]);\n * await ds3.forEachAsync(e => console.log(JSON.stringify(e)));\n *\n * // If the goal is to merge the dicts in order to produce elements like\n * // {a: ..., b: ...}, this requires a second step such as:\n * console.log('Merge the objects:');\n * const ds4 = ds3.map(x => {return {a: x[0].a, b: x[1].b}});\n * await ds4.forEachAsync(e => console.log(e));\n * ```\n *\n * Zip a dict of datasets:\n * ```js\n * const a = tf.data.array([{a: 1}, {a: 2}, {a: 3}]);\n * const b = tf.data.array([{b: 4}, {b: 5}, {b: 6}]);\n * const c = tf.data.zip({c: a, d: b});\n * await c.forEachAsync(e => console.log(JSON.stringify(e)));\n * ```\n *\n * @doc {heading: 'Data', subheading: 'Operations', namespace: 'data'}\n */\nexport function zip<O extends tf.TensorContainer>(datasets: DatasetContainer):\n    Dataset<O> {\n  // manually type-check the argument for JS users\n  if (!isIterable(datasets)) {\n    throw new Error('The argument to zip() must be an object or array.');\n  }\n  let size;\n  if (Array.isArray(datasets)) {\n    for (let i = 0; i < datasets.length; i++) {\n      size = size == null ? (datasets[i] as Dataset<O>).size :\n                            Math.min(size, (datasets[i] as Dataset<O>).size);\n    }\n  } else if (datasets instanceof Object) {\n    for (const ds in datasets) {\n      size = size == null ? (datasets[ds] as Dataset<O>).size :\n                            Math.min(size, (datasets[ds] as Dataset<O>).size);\n    }\n  }\n  return datasetFromIteratorFn<O>(async () => {\n    const streams = await deepMapAndAwaitAll(datasets, d => {\n      if (d instanceof Dataset) {\n        return {value: d.iterator(), recurse: false};\n      } else if (isIterable(d)) {\n        return {value: null, recurse: true};\n      } else {\n        throw new Error(\n            'Leaves of the structure passed to zip() must be Datasets, ' +\n            'not primitives.');\n      }\n    });\n    return iteratorFromZipped<O>(streams, ZipMismatchMode.SHORTEST);\n  }, size);\n}\n\n/**\n * A zip function for use with deepZip, passed via the columnMajorBatch call.\n *\n * Accepts an array of identically-structured nested elements and either batches\n * them (if they are primitives, numeric arrays, or Tensors) or requests\n * recursion (if not).\n */\n// tslint:disable-next-line:no-any\nfunction deepBatchConcat(rows: any[]): DeepMapResult {\n  if (rows === null) {\n    return null;\n  }\n\n  // use the first item to decide whether to recurse or batch here.\n  const exampleRow = rows[0];\n\n  if (canTensorify(exampleRow)) {\n    // rows is an array of primitives, Tensors, or arrays.  Batch them.\n    const value = batchConcat(rows);\n    return {value, recurse: false};\n  }\n\n  // the example row is an object, so recurse into it.\n  return {value: null, recurse: true};\n}\n\n/**\n * Assembles a list of same-shaped numbers, number arrays, or Tensors\n * into a single new Tensor where axis 0 is the batch dimension.\n */\nfunction batchConcat<T extends(TensorLike | tf.Tensor)>(arrays: T[]):\n    tf.Tensor {\n  if (arrays.length === 0) {\n    // We can't return an empty Tensor because we don't know the element shape.\n    throw new Error('Can\\'t make a batch of zero elements.');\n  }\n\n  if (arrays[0] instanceof tf.Tensor) {\n    // Input is an array of Tensors\n    return tf.stack(arrays as tf.Tensor[]);\n  } else {\n    // Input is a possibly-nested array of numbers.\n    return tf.tensor(arrays as TensorLike);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"670859fee599e34976fa4b1b9e0e9806","cacheData":{"env":{}}}